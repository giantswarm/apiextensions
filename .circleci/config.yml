version: 2
jobs:
  build:
    machine: true
    working_directory: /go/src/github.com/giantswarm/apiextensions
    steps:
    - checkout

    - run:
        name: Install architect
        command: |
          wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./architect
          ./architect version

    - run:
        name: ensure code generation has been executed
        command: |
          go get github.com/golang/glog
          go get github.com/spf13/pflag
          go get k8s.io/code-generator/cmd/client-gen/args
          go get k8s.io/code-generator/cmd/client-gen/generators
          go get k8s.io/code-generator/cmd/deepcopy-gen/args
          go get k8s.io/code-generator/cmd/defaulter-gen/args
          go get k8s.io/code-generator/cmd/informer-gen/args
          go get k8s.io/code-generator/cmd/informer-gen/generators
          go get k8s.io/code-generator/cmd/lister-gen/args
          go get k8s.io/code-generator/cmd/lister-gen/generators
          go get k8s.io/code-generator/pkg/util
          go get k8s.io/gengo/args
          go get k8s.io/gengo/examples/deepcopy-gen/generators
          go get k8s.io/gengo/examples/defaulter-gen/generators

          ./scripts/gen.sh
          git diff --exit-code
          if ["$?" == "1"]; do
            echo "Please execute code generation in ./scripts/gen.sh" && exit 1
          done

    - run:
        name: architect build
        command: ./architect build

    - store_test_results:
        path: /tmp/results

    - deploy:
        name: architect deploy (master only)
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            ./architect deploy
          fi
