version: 2.1

orbs:
  architect:
    commands:
      tools-info:
        steps:
          - run:
              name: Showing Architect Version
              command: |
                architect version
          - run:
              name: Showing Bash Version
              command: |
                echo $BASH_VERSION
          - run:
              name: Showing Git Version
              command: |
                git version
          - run:
              name: Showing Go Version
              command: |
                go version
          - run:
              name: Showing Helm Version
              command: |
                helm version -c
      go-cache-save:
        steps:
          - save_cache:
              key: go-build-v1-legacy-{{ checksum "Gopkg.lock" }}
              paths:
                - "/go/pkg/dep"
      go-cache-restore:
        steps:
          - restore_cache:
              keys:
                - go-build-v1-legacy-{{ checksum "Gopkg.lock" }}
      go-test-legacy:
        steps:
          - run:
              name: Configure Go Environment
              command: |
                mkdir -p /go/src/github.com/${CIRCLE_PROJECT_USERNAME}
                ln -s /go/src/project /go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
          - run:
              name: Installing Dep
              command: |
                go get github.com/golang/dep/cmd/dep
          - run:
              name: Running Dep Ensure
              command: |
                export DEPPROJECTROOT=github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
                dep ensure && git diff --exit-code
          - run:
              name: Installing Goimports
              command: |
                go get golang.org/x/tools/cmd/goimports
          - run:
              name: Deleting Vendor Directory
              command: |
                rm -rf vendor/
          - run:
              name: Ensuring Imports Are Properly Sorted
              command: |
                export PACKAGE=github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
                if [[ -n $(goimports -local $PACKAGE -l .) ]];
                  then goimports -local $PACKAGE -d . && exit 1;
                fi
          - run:
              name: Running Go Fmt
              command: |
                test -z $(gofmt -l .) || gofmt -d .
          - run:
              name: Restoring Vendor Directory
              command: |
                git checkout vendor/
          - run:
              name: Running Go Vet
              command: |
                CGO_ENABLED=0 go vet ./...
          - run:
              name: Running Go Test
              command: |
                CGO_ENABLED=0 go test ./...
      go-build-legacy:
        steps:
          - run:
              name: Building Using Architect
              command: |
                docker run \
                  -e CIRCLE_PROJECT_REPONAME \
                  -e CIRCLE_PROJECT_USERNAME \
                  -e CIRCLECI \
                  -e QUAY_USERNAME \
                  -e QUAY_PASSWORD \
                  -e DEPLOYMENT_EVENTS_TOKEN \
                  -e CGO_ENABLED=0 \
                  -v /home/circleci/project:/home/circleci/project \
                  -v /var/run/docker.sock:/var/run/docker.sock \
                  -w /home/circleci/project \
                  quay.io/giantswarm/architect build
      go-deploy-legacy:
        steps:
          - run:
              name: Deploying Using Architect
              command: |
                docker run \
                  -e CIRCLE_PROJECT_REPONAME \
                  -e CIRCLE_PROJECT_USERNAME \
                  -e CIRCLECI \
                  -e QUAY_USERNAME \
                  -e QUAY_PASSWORD \
                  -e DEPLOYMENT_EVENTS_TOKEN \
                  -e CGO_ENABLED=0 \
                  -v /home/circleci/project:/home/circleci/project \
                  -v /var/run/docker.sock:/var/run/docker.sock \
                  -w /home/circleci/project \
                  quay.io/giantswarm/architect deploy
    executors:
      architect:
        working_directory: /go/src/project
        docker:
          - entrypoint: /bin/bash
            image: quay.io/giantswarm/architect
    jobs:
      go-test-legacy:
        description: |
          This job checks if `dep ensure` makes any changes indicating that the dependencies
          are out of sync and runs goimports to ensure that imports are correctly sorted
          and grouped. After this, code is checked for correct formatting by `go fmt`
          checked for semantic issues with `go vet` and for passing unit tests with
          `go test` It also injects following variables into the
          "github.com/ORGANIZATION/REPOSITORY/pkg/project" package for testing:

          - "buildTimestamp" in RFC-3339 format in UTC time zone.
          - "gitSHA" SHA of the built commit.
          - "version" produced by `architect project version` command.
        executor: architect
        steps:
          - checkout
          - tools-info
          - go-cache-restore
          - go-test-legacy
          - go-cache-save
      go-build-legacy:
        machine: true
        steps:
          - checkout
          - go-build-legacy
      go-deploy-legacy:
        machine: true
        steps:
          - checkout
          - go-deploy-legacy

workflows:
  workflow:
    jobs:
      - architect/go-test-legacy:
          name: go-test-apiextensions
      - architect/go-build-legacy:
          name: go-build-apiextensions
          requires:
            - go-test-apiextensions
      - architect/go-deploy-legacy:
          name: go-deploy-apiextensions
          requires:
            - go-build-apiextensions
          filters:
            branches:
              only: master
