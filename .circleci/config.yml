version: 2.1
orbs:
  architect: giantswarm/architect@0.5.3

jobs:
  test:
    working_directory: /home/circleci/go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
    environment:
      GOPATH: /home/circleci/go
    machine: true
    steps:
      - checkout
      - run:
          name: Dep ensure
          command: |
            go get github.com/golang/dep/cmd/dep
            /home/circleci/go/bin/dep ensure && git diff --exit-code
      - run:
          name: Check if imports are properly sorted
          command: |
            go get golang.org/x/tools/cmd/goimports
            if [[ -n $(goimports -local github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} -l .) ]];
              then /home/circleci/go/bin/goimports -local github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} -d . && exit 1;
            fi
      - run:
          name: Go fmt
          command:  |
            gofmt -d ./pkg
      - run:
          name: Go vet
          command:  |
            CGO_ENABLED=0 go vet ./...
      - run:
          name: Go test
          command: |
            CGO_ENABLED=0 go test ./...
  build:
    machine: true
    steps:
    - checkout

    - run:
        name: Install architect
        command: |
          wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./architect
          ./architect version
    - run:
        name: Build using architect
        command: ./architect build
    - store_test_results:
        path: /tmp/results
    - deploy:
        name: Deploy using architect
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            ./architect deploy
          fi

workflows:
  test:
    jobs:
      - test:
          name: Test
      - build:
          name: Build
          requires:
            - Test
