version: 2.1

orbs:
  version:
    commands:
      check-file-changes:
        description: "Check if files VERSION and CHANGELOG.md are modified"
        steps:
          - run: |
              set -o errexit
              set -o nounset
              set -o pipefail

              if [ ! -f ./VERSION ]; then
                  echo "stopping execution: file ./VERSION does not exist"
                  exit 0
              fi

              # CHANGELOG.md file must exist when VERSION file exists.
              if [ ! -f ./CHANGELOG.md ]; then
                  echo "error: file ./CHANGELOG.md does not exist" >&2
                  exit 1
              fi

              # On the master branch the head is previous commit. On a feature
              # branch it's the master branch.
              head="master"
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                  head="HEAD~1"
              fi

              # Check if VERSION file was changed.
              if git diff --name-only $head -- ./VERSION | grep VERSION ; then
                  echo "file VERSION changed in this PR"
              else
                  echo "----> pwd"
                  pwd
                  echo "----> ls"
                  ls
                  echo "----> git diff --name-only $head -- ./VERSION"
                  git diff --name-only $head -- ./VERSION
                  echo "----> git diff --name-only $head"
                  git diff --name-only $head
                  echo
                  echo "file VERSION did not change in this PR" >&2
                  exit 1
              fi

              # Check if CHAGNELOG.md file was changed.
              if git diff --name-only $head -- ./CHANGELOG.md | grep  CHANGELOG.md ; then
                  echo "file CHANGELOG.md changed in this PR"
              else
                  echo "file CHANGELOG.md did not change in this PR" >&2
                  exit 1
              fi

      tag-master-branch:
        description: "When on master branch tag the commit with content of the VERSION file"
        steps:
          - run: |
              set -o errexit
              set -o nounset
              set -o pipefail

              if [ ! -f ./VERSION ]; then
                  echo "stopping execution: file ./VERSION does not exist"
                  exit 0
              fi
              if [ "${CIRCLE_BRANCH}" != "master" ]; then
                  echo "stopping execution: non-master branch"
                  exit 0
              fi

              git tag $(cat ./VERSION)
              git push --tags

    executors:
      alpine:
        docker:
          - image: circleci/golang:1.12.4

    jobs:
      check:
        executor: alpine
        steps:
          - checkout
          - check-file-changes
          - tag-master-branch

jobs:
  build:
    machine: true
    steps:
      - checkout

      - run: |
          wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./architect
          ./architect version
      - run: ./architect build
      - store_test_results:
          path: /tmp/results
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./architect deploy
            fi

workflows:
  version-check-build:
    jobs:
      - version/check:
          name: version-check
      - build
