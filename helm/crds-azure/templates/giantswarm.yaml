apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: azureclusterconfigs.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - azure
    - giantswarm
    kind: AzureClusterConfig
    listKind: AzureClusterConfigList
    plural: azureclusterconfigs
    singular: azureclusterconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              guest:
                properties:
                  availabilityZones:
                    type: integer
                  credentialSecret:
                    description: AzureClusterConfigSpecGuestCredentialSecret points to the K8s Secret containing credentials for an Azure subscription in which the workload cluster should be created.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  dnsZone:
                    description: DNSZone for the workload cluster is supplemented with host prefixes for specific services such as Kubernetes API or Etcd. In general this DNS Zone should start with "k8s" like for example "k8s.cluster.example.com.".
                    type: string
                  id:
                    type: string
                  masters:
                    items:
                      properties:
                        id:
                          type: string
                        vmSize:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                  name:
                    type: string
                  owner:
                    type: string
                  releaseVersion:
                    type: string
                  versionBundles:
                    items:
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  workers:
                    items:
                      properties:
                        id:
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          nullable: true
                          type: object
                        vmSize:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                required:
                - credentialSecret
                - dnsZone
                - id
                type: object
              versionBundle:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - guest
            - versionBundle
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: machinepools.exp.cluster.x-k8s.io
spec:
  group: exp.cluster.x-k8s.io
  names:
    categories:
    - azure
    - cluster-api
    - giantswarm
    kind: MachinePool
    listKind: MachinePoolList
    plural: machinepools
    shortNames:
    - mp
    singular: machinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: MachinePool replicas count
      jsonPath: .status.replicas
      name: Replicas
      type: string
    - description: MachinePool status such as Terminating/Pending/Provisioning/Running/Failed etc
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: Kubernetes version associated with this MachinePool
      jsonPath: .spec.template.spec.version
      name: Version
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: MachinePool is the Schema for the machinepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MachinePoolSpec defines the desired state of MachinePool
            properties:
              clusterName:
                description: ClusterName is the name of the Cluster this object belongs to.
                minLength: 1
                type: string
              failureDomains:
                description: FailureDomains is the list of failure domains this MachinePool should be attached to.
                items:
                  type: string
                type: array
              minReadySeconds:
                description: Minimum number of seconds for which a newly created machine instances should be ready. Defaults to 0 (machine instance will be considered available as soon as it is ready)
                format: int32
                type: integer
              providerIDList:
                description: ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                items:
                  type: string
                type: array
              replicas:
                description: Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.
                format: int32
                type: integer
              strategy:
                description: The deployment strategy to use to replace existing machine instances with new ones.
                properties:
                  rollingUpdate:
                    description: Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
                    properties:
                      maxSurge:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.'
                        x-kubernetes-int-or-string: true
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.'
                        x-kubernetes-int-or-string: true
                    type: object
                  type:
                    description: Type of deployment. Currently the only supported strategy is "RollingUpdate". Default is RollingUpdate.
                    type: string
                type: object
              template:
                description: Template describes the machines that will be created.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      generateName:
                        description: "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. \n If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). \n Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      namespace:
                        description: "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                        type: string
                      ownerReferences:
                        description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
                        items:
                          description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            blockOwnerDeletion:
                              description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                              type: boolean
                            controller:
                              description: If true, this reference points to the managing controller.
                              type: boolean
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                          type: object
                        type: array
                    type: object
                  spec:
                    description: 'Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      bootstrap:
                        description: Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
                        properties:
                          configRef:
                            description: ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.Data without the need of a controller.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                          data:
                            description: "Data contains the bootstrap data, such as cloud-init details scripts. If nil, the Machine should remain in the Pending state. \n Deprecated: This field has been deprecated in v1alpha3 and will be removed in a future version. Switch to DataSecretName."
                            type: string
                          dataSecretName:
                            description: DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
                            type: string
                        type: object
                      clusterName:
                        description: ClusterName is the name of the Cluster this object belongs to.
                        minLength: 1
                        type: string
                      failureDomain:
                        description: FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
                        type: string
                      infrastructureRef:
                        description: InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      nodeDrainTimeout:
                        description: 'NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`'
                        type: string
                      providerID:
                        description: ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
                        type: string
                      version:
                        description: Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
                        type: string
                    required:
                    - bootstrap
                    - clusterName
                    - infrastructureRef
                    type: object
                type: object
            required:
            - clusterName
            - template
            type: object
          status:
            description: MachinePoolStatus defines the observed state of MachinePool
            properties:
              availableReplicas:
                description: The number of available replicas (ready for at least minReadySeconds) for this MachinePool.
                format: int32
                type: integer
              bootstrapReady:
                description: BootstrapReady is the state of the bootstrap provider.
                type: boolean
              conditions:
                description: Conditions define the current service state of the MachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: FailureMessage indicates that there is a problem reconciling the state, and will be set to a descriptive error message.
                type: string
              failureReason:
                description: FailureReason indicates that there is a problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
                type: string
              infrastructureReady:
                description: InfrastructureReady is the state of the infrastructure provider.
                type: boolean
              nodeRefs:
                description: NodeRefs will point to the corresponding Nodes if it they exist.
                items:
                  description: 'ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.  1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.  2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular     restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".     Those cannot be well described when embedded.  3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.  4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity     during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple     and the version of the actual struct is irrelevant.  5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type     will affect numerous schemas.  Don''t make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the latest generation observed by the controller.
                format: int64
                type: integer
              phase:
                description: Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
                type: string
              readyReplicas:
                description: The number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is "Ready".
                format: int32
                type: integer
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
              unavailableReplicas:
                description: Total number of unavailable machine instances targeted by this machine pool. This is the total number of machine instances that are still required for the machine pool to have 100% available capacity. They may either be machine instances that are running but not yet available or machine instances that still have not been created.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: azuremachinepools.exp.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: cluster-api-provider-azure
          namespace: giantswarm
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
      - v1beta1
  group: exp.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - azure
    - cluster-api
    - giantswarm
    kind: AzureMachinePool
    listKind: AzureMachinePoolList
    plural: azuremachinepools
    shortNames:
    - amp
    singular: azuremachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: AzureMachinePool replicas count
      jsonPath: .status.replicas
      name: Replicas
      type: string
    - description: AzureMachinePool replicas count
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Azure VMSS provisioning state
      jsonPath: .status.provisioningState
      name: State
      type: string
    - description: Cluster to which this AzureMachinePool belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - description: MachinePool object to which this AzureMachinePool belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="MachinePool")].name
      name: MachinePool
      priority: 1
      type: string
    - description: Azure VMSS ID
      jsonPath: .spec.providerID
      name: VMSS ID
      priority: 1
      type: string
    - description: Azure VM Size
      jsonPath: .spec.template.vmSize
      name: VM Size
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureMachinePool is the Schema for the azuremachinepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachinePoolSpec defines the desired state of AzureMachinePool
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the AzureMachine's value takes precedence.
                type: object
              identity:
                default: None
                description: Identity is the type of identity used for the Virtual Machine Scale Set. The type 'SystemAssigned' is an implicitly created identity. The generated identity will be assigned a Subscription contributor role. The type 'UserAssigned' is a standalone Azure resource provided by the user and assigned to the VM
                enum:
                - None
                - SystemAssigned
                - UserAssigned
                type: string
              location:
                description: Location is the Azure region location e.g. westus2
                type: string
              providerID:
                description: ProviderID is the identification ID of the Virtual Machine Scale Set
                type: string
              providerIDList:
                description: ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                items:
                  type: string
                type: array
              roleAssignmentName:
                description: RoleAssignmentName is the name of the role assignment to create for a system assigned identity. It can be any valid GUID. If not specified, a random GUID will be generated.
                type: string
              template:
                description: Template contains the details used to build a replica virtual machine within the Machine Pool
                properties:
                  acceleratedNetworking:
                    description: AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on whether the requested VMSize supports accelerated networking. If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                    type: boolean
                  dataDisks:
                    description: DataDisks specifies the list of data disks to be created for a Virtual Machine
                    items:
                      description: DataDisk specifies the parameters that are used to add one or more data disks to the machine.
                      properties:
                        cachingType:
                          type: string
                        diskSizeGB:
                          description: DiskSizeGB is the size in GB to assign to the data disk.
                          format: int32
                          type: integer
                        lun:
                          description: Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. The value must be between 0 and 63.
                          format: int32
                          type: integer
                        nameSuffix:
                          description: NameSuffix is the suffix to be appended to the machine name to generate the disk name. Each disk name will be in format <machineName>_<nameSuffix>.
                          type: string
                      required:
                      - diskSizeGB
                      - nameSuffix
                      type: object
                    type: array
                  image:
                    description: Image is used to provide details of an image to use during Virtual Machine creation. If image details are omitted the image will default the Azure Marketplace "capi" offer, which is based on Ubuntu.
                    properties:
                      id:
                        description: ID specifies an image to use by ID
                        type: string
                      marketplace:
                        description: Marketplace specifies an image to use from the Azure Marketplace
                        properties:
                          offer:
                            description: Offer specifies the name of a group of related images created by the publisher. For example, UbuntuServer, WindowsServer
                            minLength: 1
                            type: string
                          publisher:
                            description: Publisher is the name of the organization that created the image
                            minLength: 1
                            type: string
                          sku:
                            description: SKU specifies an instance of an offer, such as a major release of a distribution. For example, 18.04-LTS, 2019-Datacenter
                            minLength: 1
                            type: string
                          thirdPartyImage:
                            default: false
                            description: ThirdPartyImage indicates the image is published by a third party publisher and a Plan will be generated for it.
                            type: boolean
                          version:
                            description: Version specifies the version of an image sku. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        - version
                        type: object
                      sharedGallery:
                        description: SharedGallery specifies an image to use from an Azure Shared Image Gallery
                        properties:
                          gallery:
                            description: Gallery specifies the name of the shared image gallery that contains the image
                            minLength: 1
                            type: string
                          name:
                            description: Name is the name of the image
                            minLength: 1
                            type: string
                          resourceGroup:
                            description: ResourceGroup specifies the resource group containing the shared image gallery
                            minLength: 1
                            type: string
                          subscriptionID:
                            description: SubscriptionID is the identifier of the subscription that contains the shared image gallery
                            minLength: 1
                            type: string
                          version:
                            description: Version specifies the version of the marketplace image. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - gallery
                        - name
                        - resourceGroup
                        - subscriptionID
                        - version
                        type: object
                    type: object
                  osDisk:
                    description: OSDisk contains the operating system disk information for a Virtual Machine
                    properties:
                      cachingType:
                        type: string
                      diffDiskSettings:
                        description: DiffDiskSettings describe ephemeral disk settings for the os disk.
                        properties:
                          option:
                            description: Option enables ephemeral OS when set to "Local" See https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks for full details
                            enum:
                            - Local
                            type: string
                        required:
                        - option
                        type: object
                      diskSizeGB:
                        format: int32
                        type: integer
                      managedDisk:
                        description: ManagedDisk defines the managed disk options for a VM.
                        properties:
                          diskEncryptionSet:
                            description: DiskEncryptionSetParameters defines disk encryption options.
                            properties:
                              id:
                                description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                                type: string
                            type: object
                          storageAccountType:
                            type: string
                        required:
                        - storageAccountType
                        type: object
                      osType:
                        type: string
                    required:
                    - diskSizeGB
                    - managedDisk
                    - osType
                    type: object
                  securityProfile:
                    description: SecurityProfile specifies the Security profile settings for a virtual machine.
                    properties:
                      encryptionAtHost:
                        description: This field indicates whether Host Encryption should be enabled or disabled for a virtual machine or virtual machine scale set. Default is disabled.
                        type: boolean
                    type: object
                  spotVMOptions:
                    description: SpotVMOptions allows the ability to specify the Machine should use a Spot VM
                    properties:
                      maxPrice:
                        description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                        type: string
                    type: object
                  sshPublicKey:
                    description: SSHPublicKey is the SSH public key string base64 encoded to add to a Virtual Machine
                    type: string
                  terminateNotificationTimeout:
                    description: TerminateNotificationTimeout enables or disables VMSS scheduled events termination notification with specified timeout allowed values are between 5 and 15 (mins)
                    type: integer
                  vmSize:
                    description: VMSize is the size of the Virtual Machine to build. See https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/createorupdate#virtualmachinesizetypes
                    type: string
                required:
                - osDisk
                - sshPublicKey
                - vmSize
                type: object
              userAssignedIdentities:
                description: UserAssignedIdentities is a list of standalone Azure identities provided by the user The lifecycle of a user-assigned identity is managed separately from the lifecycle of the AzureMachinePool. See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                items:
                  description: UserAssignedIdentity defines the user-assigned identities provided by the user to be assigned to Azure resources.
                  properties:
                    providerID:
                      description: 'ProviderID is the identification ID of the user-assigned Identity, the format of an identity is: ''azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'''
                      type: string
                  required:
                  - providerID
                  type: object
                type: array
            required:
            - location
            - template
            type: object
          status:
            description: AzureMachinePoolStatus defines the observed state of AzureMachinePool
            properties:
              conditions:
                description: Conditions defines current service state of the AzureMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is a terminal problem reconciling the MachinePool and will contain a more verbose string suitable for logging and human consumption. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachinePool's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of MachinePools can be added as events to the MachinePool object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is a terminal problem reconciling the MachinePool and will contain a succinct value suitable for machine interpretation. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachinePool's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of MachinePools can be added as events to the MachinePool object and/or logged in the controller's output."
                type: string
              instances:
                description: Instances is the VM instance status for each VM in the VMSS
                items:
                  description: AzureMachinePoolInstanceStatus provides status information for each instance in the VMSS
                  properties:
                    instanceID:
                      description: InstanceID is the identification of the Machine Instance within the VMSS
                      type: string
                    instanceName:
                      description: InstanceName is the name of the Machine Instance within the VMSS
                      type: string
                    latestModelApplied:
                      description: LatestModelApplied indicates the instance is running the most up-to-date VMSS model. A VMSS model describes the image version the VM is running. If the instance is not running the latest model, it means the instance may not be running the version of Kubernetes the Machine Pool has specified and needs to be updated.
                      type: boolean
                    providerID:
                      description: ProviderID is the provider identification of the VMSS Instance
                      type: string
                    provisioningState:
                      description: ProvisioningState is the provisioning state of the Azure virtual machine instance.
                      type: string
                    version:
                      description: Version defines the Kubernetes version for the VM Instance
                      type: string
                  required:
                  - latestModelApplied
                  type: object
                type: array
              longRunningOperationState:
                description: LongRunningOperationState saves the state for an Azure long running operations so it can be continued on the next reconciliation loop.
                properties:
                  futureData:
                    description: FutureData is the base64 url encoded json Azure AutoRest Future
                    type: string
                  name:
                    description: Name is the name of the Azure resource
                    type: string
                  resourceGroup:
                    description: ResourceGroup is the Azure resource group for the resource
                    type: string
                  type:
                    description: Type describes the type of future, update, create, delete, etc
                    type: string
                required:
                - type
                type: object
              provisioningState:
                description: ProvisioningState is the provisioning state of the Azure virtual machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
              version:
                description: Version is the Kubernetes version for the current VMSS model
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: azureconfigs.provider.giantswarm.io
spec:
  group: provider.giantswarm.io
  names:
    categories:
    - azure
    - giantswarm
    kind: AzureConfig
    listKind: AzureConfigList
    plural: azureconfigs
    singular: azureconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              azure:
                properties:
                  availabilityZones:
                    items:
                      type: integer
                    nullable: true
                    type: array
                  credentialSecret:
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  dnsZones:
                    description: AzureConfigSpecAzureDNSZones contains the DNS Zones of the cluster.
                    properties:
                      api:
                        description: API is the DNS Zone for the Kubernetes API.
                        properties:
                          name:
                            description: Name is the name of the zone.
                            type: string
                          resourceGroup:
                            description: ResourceGroup is the resource group of the zone.
                            type: string
                        required:
                        - name
                        - resourceGroup
                        type: object
                      etcd:
                        description: Etcd is the DNS Zone for the etcd cluster.
                        properties:
                          name:
                            description: Name is the name of the zone.
                            type: string
                          resourceGroup:
                            description: ResourceGroup is the resource group of the zone.
                            type: string
                        required:
                        - name
                        - resourceGroup
                        type: object
                      ingress:
                        description: Ingress is the DNS Zone for the Ingress resource, used for customer traffic.
                        properties:
                          name:
                            description: Name is the name of the zone.
                            type: string
                          resourceGroup:
                            description: ResourceGroup is the resource group of the zone.
                            type: string
                        required:
                        - name
                        - resourceGroup
                        type: object
                    required:
                    - api
                    - etcd
                    - ingress
                    type: object
                  masters:
                    items:
                      properties:
                        dockerVolumeSizeGB:
                          description: DockerVolumeSizeGB is the size of a volume mounted to /var/lib/docker.
                          type: integer
                        kubeletVolumeSizeGB:
                          description: KubeletVolumeSizeGB is the size of a volume mounted to /var/lib/kubelet.
                          type: integer
                        vmSize:
                          description: VMSize is the master vm size (e.g. Standard_A1)
                          type: string
                      required:
                      - dockerVolumeSizeGB
                      - kubeletVolumeSizeGB
                      - vmSize
                      type: object
                    type: array
                  virtualNetwork:
                    properties:
                      calicoSubnetCIDR:
                        description: CalicoSubnetCIDR is the CIDR for the calico subnet. It has to be also a worker subnet (Azure limitation).
                        type: string
                      cidr:
                        description: CIDR is the CIDR for the Virtual Network.
                        type: string
                      masterSubnetCIDR:
                        description: "TODO: remove Master, Worker and Calico subnet cidr after azure-operator v2 is deleted. MasterSubnetCIDR is the CIDR for the master subnet. \n     https://github.com/giantswarm/giantswarm/issues/4358"
                        type: string
                      workerSubnetCIDR:
                        description: WorkerSubnetCIDR is the CIDR for the worker subnet.
                        type: string
                    required:
                    - calicoSubnetCIDR
                    - cidr
                    - masterSubnetCIDR
                    - workerSubnetCIDR
                    type: object
                  workers:
                    items:
                      properties:
                        dockerVolumeSizeGB:
                          description: DockerVolumeSizeGB is the size of a volume mounted to /var/lib/docker.
                          type: integer
                        kubeletVolumeSizeGB:
                          description: KubeletVolumeSizeGB is the size of a volume mounted to /var/lib/kubelet.
                          type: integer
                        vmSize:
                          description: VMSize is the master vm size (e.g. Standard_A1)
                          type: string
                      required:
                      - dockerVolumeSizeGB
                      - kubeletVolumeSizeGB
                      - vmSize
                      type: object
                    nullable: true
                    type: array
                required:
                - credentialSecret
                - dnsZones
                - masters
                - virtualNetwork
                type: object
              cluster:
                properties:
                  calico:
                    properties:
                      cidr:
                        type: integer
                      mtu:
                        type: integer
                      subnet:
                        type: string
                    required:
                    - cidr
                    - mtu
                    - subnet
                    type: object
                  customer:
                    properties:
                      id:
                        type: string
                    required:
                    - id
                    type: object
                  docker:
                    properties:
                      daemon:
                        properties:
                          cidr:
                            type: string
                        required:
                        - cidr
                        type: object
                    required:
                    - daemon
                    type: object
                  etcd:
                    properties:
                      altNames:
                        type: string
                      domain:
                        type: string
                      port:
                        type: integer
                      prefix:
                        type: string
                    required:
                    - altNames
                    - domain
                    - port
                    - prefix
                    type: object
                  id:
                    type: string
                  kubernetes:
                    properties:
                      api:
                        properties:
                          clusterIPRange:
                            type: string
                          domain:
                            type: string
                          securePort:
                            type: integer
                        required:
                        - clusterIPRange
                        - domain
                        - securePort
                        type: object
                      cloudProvider:
                        type: string
                      dns:
                        properties:
                          ip:
                            type: string
                        required:
                        - ip
                        type: object
                      domain:
                        type: string
                      ingressController:
                        properties:
                          docker:
                            properties:
                              image:
                                type: string
                            required:
                            - image
                            type: object
                          domain:
                            type: string
                          insecurePort:
                            type: integer
                          securePort:
                            type: integer
                          wildcardDomain:
                            type: string
                        required:
                        - docker
                        - domain
                        - insecurePort
                        - securePort
                        - wildcardDomain
                        type: object
                      kubelet:
                        properties:
                          altNames:
                            type: string
                          domain:
                            type: string
                          labels:
                            type: string
                          port:
                            type: integer
                        required:
                        - altNames
                        - domain
                        - labels
                        - port
                        type: object
                      networkSetup:
                        properties:
                          docker:
                            properties:
                              image:
                                type: string
                            required:
                            - image
                            type: object
                          kubeProxy:
                            description: ClusterKubernetesNetworkSetupKubeProxy describes values passed to the kube-proxy running in a workload cluster.
                            properties:
                              conntrackMaxPerCore:
                                description: Maximum number of NAT connections to track per CPU core (0 to leave the limit as-is and ignore conntrack-min). Passed to kube-proxy as --conntrack-max-per-core.
                                type: integer
                            required:
                            - conntrackMaxPerCore
                            type: object
                        required:
                        - docker
                        - kubeProxy
                        type: object
                      ssh:
                        properties:
                          userList:
                            items:
                              properties:
                                name:
                                  type: string
                                publicKey:
                                  type: string
                              required:
                              - name
                              - publicKey
                              type: object
                            type: array
                        required:
                        - userList
                        type: object
                    required:
                    - api
                    - cloudProvider
                    - dns
                    - domain
                    - ingressController
                    - kubelet
                    - networkSetup
                    - ssh
                    type: object
                  masters:
                    items:
                      properties:
                        id:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                  scaling:
                    properties:
                      max:
                        description: Max defines maximum number of worker nodes the workload cluster is allowed to have.
                        type: integer
                      min:
                        description: Min defines minimum number of worker nodes required to be present in the workload cluster.
                        type: integer
                    required:
                    - max
                    - min
                    type: object
                  version:
                    description: Version is DEPRECATED and should just be dropped.
                    type: string
                  workers:
                    items:
                      properties:
                        id:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                required:
                - calico
                - customer
                - docker
                - etcd
                - id
                - kubernetes
                - masters
                - scaling
                - version
                type: object
              versionBundle:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - azure
            - cluster
            - versionBundle
            type: object
          status:
            properties:
              cluster:
                properties:
                  conditions:
                    description: Conditions is a list of status information expressing the current conditional state of a workload cluster. This may reflect the status of the workload cluster being updating or being up to date.
                    items:
                      description: StatusClusterCondition expresses the conditions in which a workload cluster may is.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition transitioned from one status to another.
                          format: date-time
                          nullable: true
                          type: string
                        status:
                          description: Status may be True, False or Unknown.
                          type: string
                        type:
                          description: Type may be Creating, Created, Scaling, Scaled, Draining, Drained, Updating, Updated, Deleting, Deleted.
                          type: string
                      type: object
                    nullable: true
                    type: array
                  network:
                    description: StatusClusterNetwork expresses the network segment that is allocated for a workload cluster.
                    nullable: true
                    properties:
                      cidr:
                        type: string
                    type: object
                  nodes:
                    description: Nodes is a list of workload cluster node information reflecting the current state of the workload cluster nodes.
                    items:
                      description: StatusClusterNode holds information about a workload cluster node.
                      properties:
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels contains the kubernetes labels for corresponding node.
                          nullable: true
                          type: object
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition transitioned from one status to another.
                          format: date-time
                          nullable: true
                          type: string
                        name:
                          description: Name referrs to a workload cluster node name.
                          type: string
                        version:
                          description: Version referrs to the version used by the node as mandated by the provider operator.
                          type: string
                      type: object
                    nullable: true
                    type: array
                  resources:
                    description: Resources is a list of arbitrary conditions of operatorkit resource implementations.
                    items:
                      description: Resource is structure holding arbitrary conditions of operatorkit resource implementations. Imagine an operator implements an instance resource. This resource may operates sequentially but has to operate based on a certain system state it manages. So it tracks the status as needed here specific to its own implementation and means in order to fulfil its premise.
                      properties:
                        conditions:
                          items:
                            description: StatusClusterResourceCondition expresses the conditions in which an operatorkit resource may is.
                            properties:
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the condition transitioned from one status to another.
                                format: date-time
                                nullable: true
                                type: string
                              status:
                                description: Status may be True, False or Unknown.
                                type: string
                              type:
                                description: Type may be anything an operatorkit resource may define.
                                type: string
                            type: object
                          nullable: true
                          type: array
                        name:
                          type: string
                      type: object
                    nullable: true
                    type: array
                  scaling:
                    description: StatusClusterScaling expresses the current status of desired number of worker nodes in the workload cluster.
                    nullable: true
                    properties:
                      desiredCapacity:
                        type: integer
                    type: object
                  versions:
                    description: Versions is a list that acts like a historical track record of versions a workload cluster went through. A version is only added to the list as soon as the workload cluster successfully migrated to the version added here.
                    items:
                      description: StatusClusterVersion expresses the versions in which a workload cluster was and may still be.
                      properties:
                        date:
                          description: "TODO date is deprecated due to LastTransitionTime This can be removed ones the new properties are properly used in all workload clusters. \n     https://github.com/giantswarm/giantswarm/issues/3988"
                          format: date-time
                          nullable: true
                          type: string
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition transitioned from one status to another.
                          format: date-time
                          nullable: true
                          type: string
                        semver:
                          description: Semver is some semver version, e.g. 1.0.0.
                          type: string
                      type: object
                    nullable: true
                    type: array
                type: object
              provider:
                properties:
                  availabilityZones:
                    items:
                      type: integer
                    nullable: true
                    type: array
                  ingress:
                    nullable: true
                    properties:
                      loadBalancer:
                        nullable: true
                        properties:
                          publicIPName:
                            type: string
                        type: object
                    type: object
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: azuretools.tooling.giantswarm.io
spec:
  group: tooling.giantswarm.io
  names:
    categories:
    - azure
    - giantswarm
    kind: AzureTool
    listKind: AzureToolList
    plural: azuretools
    singular: azuretool
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              workspace:
                description: Workspace refers to the Azure Log Analytics Workspace.
                properties:
                  id:
                    description: ID is the Workspace ID.
                    type: string
                  mode:
                    description: Mode is the mode that the Workspace is running in.
                    type: string
                required:
                - id
                - mode
                type: object
            required:
            - workspace
            type: object
          status:
            properties:
              workspace_status:
                type: string
            required:
            - workspace_status
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
