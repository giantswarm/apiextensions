apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: appcatalogentries.application.giantswarm.io
spec:
  group: application.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: AppCatalogEntry
    listKind: AppCatalogEntryList
    plural: appcatalogentries
    shortNames:
    - ace
    - aces
    singular: appcatalogentry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Catalog this entry belongs to
      jsonPath: .spec.catalog.name
      name: Catalog
      type: string
    - description: App this entry belongs to
      jsonPath: .spec.appName
      name: App Name
      type: string
    - description: Upstream version of the app for this entry
      jsonPath: .spec.appVersion
      name: App Version
      type: string
    - description: Version of the app for this entry
      jsonPath: .spec.version
      name: Version
      type: string
    - description: Time since entry was first created
      jsonPath: .spec.dateCreated
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AppCatalogEntry represents an entry of an app in a catalog of
          managed apps. It stores metadata for specific versions and apps. It is generated
          by app-operator and consumed by app-admission-controller.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              appName:
                description: AppName is the name of the app this entry belongs to.
                  e.g. nginx-ingress-controller-app
                type: string
              appVersion:
                description: AppVersion is the upstream version of the app for this
                  entry. e.g. v0.35.0
                type: string
              catalog:
                description: Catalog is the name of the app catalog this entry belongs
                  to. e.g. giantswarm
                properties:
                  name:
                    description: Name is the name of the app catalog this entry belongs
                      to. e.g. giantswarm-catalog
                    type: string
                  namespace:
                    description: Namespace is the namespace of the catalog. It is
                      empty while the appcatalog CRD is cluster scoped.
                    type: string
                required:
                - name
                type: object
              chart:
                description: Chart is metadata from the Chart.yaml of the app this
                  entry belongs to.
                properties:
                  apiVersion:
                    description: APIVersion is the Helm chart API version.
                    type: string
                  description:
                    description: Description is the Helm chart description.
                    nullable: true
                    type: string
                  home:
                    description: Home is the URL of this projects home page.
                    nullable: true
                    type: string
                  icon:
                    description: Icon is a URL to an SVG or PNG image to be used as
                      an icon.
                    nullable: true
                    type: string
                  keywords:
                    description: Keywords is the keyword strings from the helm chart.
                    items:
                      type: string
                    nullable: true
                    type: array
                  upstreamChartVersion:
                    description: UpstreamChartVersion is the original version of upstream
                      chart in this app.
                    nullable: true
                    type: string
                required:
                - apiVersion
                type: object
              dateCreated:
                description: DateCreated is when this entry was first created. e.g.
                  2020-09-02T09:40:39.223638219Z
                format: date-time
                type: string
              dateUpdated:
                description: DateUpdated is when this entry was last updated. e.g.
                  2020-09-02T09:40:39.223638219Z
                format: date-time
                type: string
              restrictions:
                description: Restrictions is metadata from Chart.yaml for this app
                  and is used to validate app CRs.
                nullable: true
                properties:
                  clusterSingleton:
                    description: ClusterSingleton is a flag for whether this app can
                      be installed at most once per cluster. Default is false.
                    type: boolean
                  compatibleProviders:
                    description: CompatibleProviders is a list of provider names which
                      this app is compatible with. Default is empty. Empty list means
                      app is compatible with all providers.
                    items:
                      enum:
                      - aws
                      - azure
                      - kvm
                      type: string
                    nullable: true
                    type: array
                  fixedNamespace:
                    description: FixedNamespace is the namespace which this app must
                      be installed in.
                    type: string
                  gpuInstances:
                    description: GpuInstances is a flag for whether this app requires
                      GPU instances to run. Default is false.
                    type: boolean
                  namespaceSingleton:
                    description: NamespaceSingleton is a flag for whether this app
                      can be installed at most once per namespace. Default is false.
                    type: boolean
                type: object
              version:
                description: Version is the version of the app chart for this entry.
                  e.g. 1.9.2
                type: string
            required:
            - appName
            - appVersion
            - catalog
            - dateCreated
            - dateUpdated
            - version
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: appcatalogs.application.giantswarm.io
spec:
  group: application.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: AppCatalog
    listKind: AppCatalogList
    plural: appcatalogs
    singular: appcatalog
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Deprecated, use Catalog CRD instead. AppCatalog represents a
          catalog of managed apps. It stores general information for potential apps
          to install. It is reconciled by app-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              config:
                description: Config is the config to be applied when apps belonging
                  to this catalog are deployed.
                nullable: true
                properties:
                  configMap:
                    description: ConfigMap references a config map containing catalog
                      values that should be applied to apps in this catalog.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the config map containing
                          catalog values to apply, e.g. app-catalog-values.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the catalog values
                          config map, e.g. giantswarm.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  secret:
                    description: Secret references a secret containing catalog values
                      that should be applied to apps in this catalog.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the secret containing catalog
                          values to apply, e.g. app-catalog-secret.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the secret, e.g.
                          giantswarm.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
              description:
                type: string
              logoURL:
                description: LogoURL contains the links for logo image file for this
                  app catalog
                type: string
              storage:
                description: Storage references a map containing values that should
                  be applied to the appcatalog.
                properties:
                  URL:
                    description: URL is the link to where this AppCatalog's repository
                      is located e.g. https://example.com/app-catalog/
                    type: string
                  type:
                    description: Type indicates which repository type would be used
                      for this AppCatalog. e.g. helm
                    type: string
                required:
                - URL
                - type
                type: object
              title:
                description: Title is the name of the app catalog for this CR e.g.
                  Catalog of Apps by Giant Swarm
                type: string
            required:
            - description
            - logoURL
            - storage
            - title
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: apps.application.giantswarm.io
spec:
  group: application.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: App
    listKind: AppList
    plural: apps
    singular: app
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Version of the app
      jsonPath: .spec.version
      name: Version
      type: string
    - description: Time since last deployment
      jsonPath: .status.release.lastDeployed
      name: Last Deployed
      type: date
    - description: Deployment status of the app
      jsonPath: .status.release.status
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: App represents a managed app which a user intended to install.
          It is reconciled by app-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              catalog:
                description: Catalog is the name of the app catalog this app belongs
                  to. e.g. giantswarm
                type: string
              catalogNamespace:
                description: CatalogNamespace is the namespace of the Catalog CR this
                  app belongs to. e.g. giantswarm
                nullable: true
                type: string
              config:
                description: Config is the config to be applied when the app is deployed.
                nullable: true
                properties:
                  configMap:
                    description: ConfigMap references a config map containing values
                      that should be applied to the app.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the config map containing
                          app values to apply, e.g. prometheus-values.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the values config
                          map, e.g. monitoring.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  secret:
                    description: Secret references a secret containing secret values
                      that should be applied to the app.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the secret containing app
                          values to apply, e.g. prometheus-secret.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the secret, e.g.
                          kube-system.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
              install:
                description: Install is the config used when installing the app.
                nullable: true
                properties:
                  skipCRDs:
                    description: 'SkipCRDs when true decides that CRDs which are supplied
                      with the chart are not installed. Default: false.'
                    nullable: true
                    type: boolean
                type: object
              kubeConfig:
                description: KubeConfig is the kubeconfig to connect to the cluster
                  when deploying the app.
                properties:
                  context:
                    description: Context is the kubeconfig context.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the kubeconfig context. e.g.
                          giantswarm-12345.
                        type: string
                    required:
                    - name
                    type: object
                  inCluster:
                    description: InCluster is a flag for whether to use InCluster
                      credentials. When true the context name and secret should not
                      be set.
                    type: boolean
                  secret:
                    description: Secret references a secret containing the kubconfig.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the secret containing the
                          kubeconfig, e.g. app-operator-kubeconfig.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the secret containing
                          the kubeconfig, e.g. giantswarm.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                required:
                - inCluster
                type: object
              name:
                description: Name is the name of the app to be deployed. e.g. kubernetes-prometheus
                type: string
              namespace:
                description: Namespace is the namespace where the app should be deployed.
                  e.g. monitoring
                type: string
              namespaceConfig:
                description: NamespaceConfig is the namespace config to be applied
                  to the target namespace when the app is deployed.
                nullable: true
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations is a string map of annotations to apply
                      to the target namespace.
                    nullable: true
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels is a string map of labels to apply to the
                      target namespace.
                    nullable: true
                    type: object
                type: object
              userConfig:
                description: UserConfig is the user config to be applied when the
                  app is deployed.
                nullable: true
                properties:
                  configMap:
                    description: ConfigMap references a config map containing user
                      values that should be applied to the app.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the config map containing
                          user values to apply, e.g. prometheus-user-values.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the user values
                          config map on the management cluster, e.g. 123ab.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  secret:
                    description: Secret references a secret containing user secret
                      values that should be applied to the app.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the secret containing user
                          values to apply, e.g. prometheus-user-secret.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the secret, e.g.
                          kube-system.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
              version:
                description: Version is the version of the app that should be deployed.
                  e.g. 1.0.0
                type: string
            required:
            - catalog
            - kubeConfig
            - name
            - namespace
            - version
            type: object
          status:
            description: Status Spec part of the App resource. Initially, it would
              be left as empty until the operator successfully reconciles the helm
              release.
            properties:
              appVersion:
                description: AppVersion is the value of the AppVersion field in the
                  Chart.yaml of the deployed app. This is an optional field with the
                  version of the component being deployed. e.g. 0.21.0. https://helm.sh/docs/topics/charts/#the-chartyaml-file
                type: string
              release:
                description: Release is the status of the Helm release for the deployed
                  app.
                properties:
                  lastDeployed:
                    description: LastDeployed is the time when the app was last deployed.
                    format: date-time
                    nullable: true
                    type: string
                  reason:
                    description: Reason is the description of the last status of helm
                      release when the app is not installed successfully, e.g. deploy
                      resource already exists.
                    type: string
                  status:
                    description: Status is the status of the deployed app, e.g. DEPLOYED.
                    type: string
                required:
                - status
                type: object
              version:
                description: Version is the value of the Version field in the Chart.yaml
                  of the deployed app. e.g. 1.0.0.
                type: string
            required:
            - appVersion
            - release
            - version
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: catalogs.application.giantswarm.io
spec:
  group: application.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: Catalog
    listKind: CatalogList
    plural: catalogs
    singular: catalog
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: URL of the catalog
      jsonPath: .spec.storage.URL
      name: Catalog URL
      type: string
    - description: Time since created
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Catalog represents a catalog of managed apps. It stores general
          information for potential apps to install. It is reconciled by app-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              config:
                description: Config is the config to be applied when apps belonging
                  to this catalog are deployed.
                nullable: true
                properties:
                  configMap:
                    description: ConfigMap references a config map containing catalog
                      values that should be applied to apps in this catalog.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the config map containing
                          catalog values to apply, e.g. app-catalog-values.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the catalog values
                          config map, e.g. giantswarm.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  secret:
                    description: Secret references a secret containing catalog values
                      that should be applied to apps in this catalog.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the secret containing catalog
                          values to apply, e.g. app-catalog-secret.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the secret, e.g.
                          giantswarm.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
              description:
                type: string
              logoURL:
                description: LogoURL contains the links for logo image file for this
                  catalog
                type: string
              storage:
                description: Storage references a map containing values that should
                  be applied to the catalog.
                properties:
                  URL:
                    description: URL is the link to where this Catalog's repository
                      is located e.g. https://example.com/app-catalog/
                    type: string
                  type:
                    description: Type indicates which repository type would be used
                      for this Catalog. e.g. helm
                    type: string
                required:
                - URL
                - type
                type: object
              title:
                description: Title is the name of the catalog for this CR e.g. Catalog
                  of Apps by Giant Swarm
                type: string
            required:
            - description
            - logoURL
            - storage
            - title
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: charts.application.giantswarm.io
spec:
  group: application.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: Chart
    listKind: ChartList
    plural: charts
    singular: chart
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Version of the app
      jsonPath: .spec.version
      name: Version
      type: string
    - description: Time since last deployment
      jsonPath: .status.release.lastDeployed
      name: Last Deployed
      type: date
    - description: Deployment status of the app
      jsonPath: .status.release.status
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Chart represents a Helm chart to be deployed as a Helm release.
          It is reconciled by chart-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              config:
                description: Config is the config to be applied when the chart is
                  deployed.
                nullable: true
                properties:
                  configMap:
                    description: ConfigMap references a config map containing values
                      that should be applied to the chart.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the config map containing
                          chart values to apply, e.g. prometheus-chart-values.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the values config
                          map, e.g. monitoring.
                        type: string
                      resourceVersion:
                        description: ResourceVersion is the Kubernetes resource version
                          of the configmap. Used to detect if the configmap has changed,
                          e.g. 12345.
                        type: string
                    required:
                    - name
                    - namespace
                    - resourceVersion
                    type: object
                  secret:
                    description: Secret references a secret containing secret values
                      that should be applied to the chart.
                    nullable: true
                    properties:
                      name:
                        description: Name is the name of the secret containing chart
                          values to apply, e.g. prometheus-chart-secret.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the secret, e.g.
                          kube-system.
                        type: string
                      resourceVersion:
                        description: ResourceVersion is the Kubernetes resource version
                          of the secret. Used to detect if the secret has changed,
                          e.g. 12345.
                        type: string
                    required:
                    - name
                    - namespace
                    - resourceVersion
                    type: object
                type: object
              install:
                description: Install is the config used to deploy the app and is passed
                  to Helm.
                nullable: true
                properties:
                  skipCRDs:
                    description: 'SkipCRDs when true decides that CRDs which are supplied
                      with the chart are not installed. Default: false.'
                    nullable: true
                    type: boolean
                type: object
              name:
                description: Name is the name of the Helm chart to be deployed. e.g.
                  kubernetes-prometheus
                type: string
              namespace:
                description: Namespace is the namespace where the chart should be
                  deployed. e.g. monitoring
                type: string
              namespaceConfig:
                description: NamespaceConfig is the namespace config to be applied
                  to the target namespace when the chart is deployed.
                nullable: true
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations is a string map of annotations to apply
                      to the target namespace.
                    nullable: true
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels is a string map of labels to apply to the
                      target namespace.
                    nullable: true
                    type: object
                type: object
              tarballURL:
                description: TarballURL is the URL for the Helm chart tarball to be
                  deployed. e.g. https://example.com/path/to/prom-1-0-0.tgz
                type: string
              version:
                description: Version is the version of the chart that should be deployed.
                  e.g. 1.0.0
                type: string
            required:
            - name
            - namespace
            - tarballURL
            - version
            type: object
          status:
            properties:
              appVersion:
                description: AppVersion is the value of the AppVersion field in the
                  Chart.yaml of the deployed chart. This is an optional field with
                  the version of the component being deployed. e.g. 0.21.0. https://helm.sh/docs/topics/charts/#the-chartyaml-file
                type: string
              reason:
                description: Reason is the description of the last status of helm
                  release when the chart is not installed successfully, e.g. deploy
                  resource already exists.
                type: string
              release:
                description: Release is the status of the Helm release for the deployed
                  chart.
                properties:
                  lastDeployed:
                    description: LastDeployed is the time when the deployed chart
                      was last deployed.
                    format: date-time
                    nullable: true
                    type: string
                  revision:
                    description: Revision is the revision number for this deployed
                      chart.
                    nullable: true
                    type: integer
                  status:
                    description: Status is the status of the deployed chart, e.g.
                      DEPLOYED.
                    type: string
                required:
                - status
                type: object
              version:
                description: Version is the value of the Version field in the Chart.yaml
                  of the deployed chart. e.g. 1.0.0.
                type: string
            required:
            - appVersion
            - release
            - version
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: etcdbackups.backup.giantswarm.io
spec:
  group: backup.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: ETCDBackup
    listKind: ETCDBackupList
    plural: etcdbackups
    singular: etcdbackup
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              guestBackup:
                description: GuestBackup is a boolean indicating if the workload clusters
                  have to be backed up
                type: boolean
            required:
            - guestBackup
            type: object
          status:
            properties:
              finishedTimestamp:
                description: Timestamp when the last (final) attempt was made (when
                  the Phase became either 'Completed' or 'Failed'
                format: date-time
                nullable: true
                type: string
              instances:
                additionalProperties:
                  properties:
                    name:
                      description: Name of the workload cluster or management cluster
                      type: string
                    v2:
                      description: Status of the V2 backup for this instance
                      properties:
                        backupFileSize:
                          description: Size of the backup file
                          format: int64
                          type: integer
                        creationTime:
                          description: Time took by the backup creation process
                          format: int64
                          type: integer
                        encryptionTime:
                          description: Time took by the backup encryption process
                          format: int64
                          type: integer
                        finishedTimestamp:
                          description: Timestamp when the last (final) attempt was
                            made (when the Phase became either 'Completed' or 'Failed'
                          format: date-time
                          nullable: true
                          type: string
                        latestError:
                          description: Latest backup error message
                          type: string
                        startedTimestamp:
                          description: Timestamp when the first attempt was made
                          format: date-time
                          nullable: true
                          type: string
                        status:
                          description: Status of this isntance's backup job (can be
                            'Pending', 'Running'. 'Completed', 'Failed')
                          type: string
                        uploadTime:
                          description: Time took by the backup upload process
                          format: int64
                          type: integer
                      required:
                      - status
                      type: object
                    v3:
                      description: Status of the V3 backup for this instance
                      properties:
                        backupFileSize:
                          description: Size of the backup file
                          format: int64
                          type: integer
                        creationTime:
                          description: Time took by the backup creation process
                          format: int64
                          type: integer
                        encryptionTime:
                          description: Time took by the backup encryption process
                          format: int64
                          type: integer
                        finishedTimestamp:
                          description: Timestamp when the last (final) attempt was
                            made (when the Phase became either 'Completed' or 'Failed'
                          format: date-time
                          nullable: true
                          type: string
                        latestError:
                          description: Latest backup error message
                          type: string
                        startedTimestamp:
                          description: Timestamp when the first attempt was made
                          format: date-time
                          nullable: true
                          type: string
                        status:
                          description: Status of this isntance's backup job (can be
                            'Pending', 'Running'. 'Completed', 'Failed')
                          type: string
                        uploadTime:
                          description: Time took by the backup upload process
                          format: int64
                          type: integer
                      required:
                      - status
                      type: object
                  required:
                  - name
                  - v2
                  - v3
                  type: object
                description: map containing the state of the backup for all instances
                nullable: true
                type: object
              startedTimestamp:
                description: Timestamp when the first attempt was made
                format: date-time
                nullable: true
                type: string
              status:
                description: Status of the whole backup job (can be 'Pending', 'Running'.
                  'Completed', 'Failed')
                type: string
            required:
            - status
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: certconfigs.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: CertConfig
    listKind: CertConfigList
    plural: certconfigs
    singular: certconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CertConfig specifies details for an X.509 certificate to be issued,
          handled by cert-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cert:
                description: Specifies the configurable certificate details.
                properties:
                  allowBareDomains:
                    type: boolean
                  altNames:
                    description: Subject Alternative Names to be set in the certificate.
                    items:
                      type: string
                    nullable: true
                    type: array
                  clusterComponent:
                    description: Host name of the service to create the certificate
                      for.
                    type: string
                  clusterID:
                    description: Workload cluster ID to issue the certificate for.
                    type: string
                  commonName:
                    description: Full common name (CN).
                    type: string
                  disableRegeneration:
                    description: If set, cert-operator will forbid updating this certificate.
                    type: boolean
                  ipSans:
                    description: List of IP addresses to be set as SANs (Subject Alternative
                      Names) in the certificate.
                    items:
                      type: string
                    nullable: true
                    type: array
                  organizations:
                    description: List of organizations to set in the certificate.
                    items:
                      type: string
                    nullable: true
                    type: array
                  ttl:
                    description: Expiry time as a Golang duration string, e. g. "1d"
                      for one day.
                    type: string
                required:
                - allowBareDomains
                - clusterComponent
                - clusterID
                - commonName
                - disableRegeneration
                - ttl
                type: object
              versionBundle:
                description: Specifies the cert-operator version to use.
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - cert
            - versionBundle
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: chartconfigs.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: ChartConfig
    listKind: ChartConfigList
    plural: chartconfigs
    singular: chartconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ChartConfig used to represent an app deployed as a Helm Release.
          Deprecated.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              chart:
                properties:
                  channel:
                    description: Channel is the name of the Appr channel to reconcile
                      against, e.g. 1-0-stable.
                    type: string
                  configMap:
                    description: ConfigMap references a config map containing values
                      that should be applied to the chart.
                    properties:
                      name:
                        description: Name is the name of the config map containing
                          chart values to apply, e.g. node-exporter-chart-values.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the values config
                          map, e.g. kube-system.
                        type: string
                      resourceVersion:
                        description: ResourceVersion is the Kubernetes resource version
                          of the configmap. Used to detect if the configmap has changed,
                          e.g. 12345.
                        type: string
                    required:
                    - name
                    - namespace
                    - resourceVersion
                    type: object
                  name:
                    description: Name is the name of the Helm chart to deploy, e.g.
                      kubernetes-node-exporter.
                    type: string
                  namespace:
                    description: Namespace is the namespace where the Helm chart is
                      to be deployed, e.g. giantswarm.
                    type: string
                  release:
                    description: Release is the name of the Helm release when the
                      chart is deployed, e.g. node-exporter.
                    type: string
                  secret:
                    description: Secret references a secret containing secret values
                      that should be applied to the chart.
                    properties:
                      name:
                        description: Name is the name of the secret containing chart
                          values to apply, e.g. node-exporter-chart-secret.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the secret, e.g.
                          kube-system.
                        type: string
                      resourceVersion:
                        description: ResourceVersion is the Kubernetes resource version
                          of the secret. Used to detect if the secret has changed,
                          e.g. 12345.
                        type: string
                    required:
                    - name
                    - namespace
                    - resourceVersion
                    type: object
                  userConfigMap:
                    description: UserConfigMap references a config map containing
                      custom values. These custom values are specified by the user
                      to override default values.
                    properties:
                      name:
                        description: Name is the name of the config map containing
                          chart values to apply, e.g. node-exporter-chart-values.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the values config
                          map, e.g. kube-system.
                        type: string
                      resourceVersion:
                        description: ResourceVersion is the Kubernetes resource version
                          of the configmap. Used to detect if the configmap has changed,
                          e.g. 12345.
                        type: string
                    required:
                    - name
                    - namespace
                    - resourceVersion
                    type: object
                required:
                - channel
                - configMap
                - name
                - namespace
                - release
                - secret
                - userConfigMap
                type: object
              versionBundle:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - chart
            - versionBundle
            type: object
          status:
            properties:
              reason:
                description: Reason is the description of the last status of helm
                  release when the chart is not installed successfully, e.g. deploy
                  resource already exists.
                type: string
              releaseStatus:
                description: ReleaseStatus is the status of the Helm release when
                  the chart is installed, e.g. DEPLOYED.
                type: string
            required:
            - releaseStatus
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: configs.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - common
    - config
    - giantswarm
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Config represents configuration of an App.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConfigSpec is the spec part for the Config resource.
            properties:
              app:
                description: App details for which the configuration should be generated.
                properties:
                  catalog:
                    description: Catalog is the name of the App's App Catalog.
                    type: string
                  name:
                    description: Name is the name of the App.
                    type: string
                  version:
                    description: Version is the version of the App.
                    type: string
                required:
                - catalog
                - name
                - version
                type: object
            required:
            - app
            type: object
          status:
            description: Status part of the Config resource.
            properties:
              app:
                description: App details for which the configuration was generated.
                properties:
                  catalog:
                    description: Catalog is the name of the App's App Catalog.
                    type: string
                  name:
                    description: Name is the name of the App.
                    type: string
                  version:
                    description: Version is the version of the App.
                    type: string
                required:
                - catalog
                - name
                - version
                type: object
              config:
                description: Config holds the references to the generated configuration.
                properties:
                  configMapRef:
                    description: ConfigStatusConfigConfigMapRef contains a reference
                      to the generated ConfigMap.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  secretRef:
                    description: ConfigStatusConfigSecretRef contains a reference
                      to the generated Secret.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                required:
                - configMapRef
                - secretRef
                type: object
              version:
                description: Version of the giantswarm/config repository used to generate
                  the configuration.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: drainerconfigs.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: DrainerConfig
    listKind: DrainerConfigList
    plural: drainerconfigs
    singular: drainerconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              guest:
                properties:
                  cluster:
                    properties:
                      api:
                        properties:
                          endpoint:
                            description: Endpoint is the workload cluster API endpoint.
                            type: string
                        required:
                        - endpoint
                        type: object
                      id:
                        description: ID is the workload cluster ID of which a node
                          should be drained.
                        type: string
                    required:
                    - api
                    - id
                    type: object
                  node:
                    properties:
                      name:
                        description: "Name is the identifier of the workload cluster's
                          master and worker nodes. In Kubernetes/Kubectl they are
                          represented as node names. The names are manage in an abstracted
                          way because of provider specific differences. \n     AWS:
                          EC2 instance DNS.     Azure: VM name.     KVM: host cluster
                          pod name."
                        type: string
                    required:
                    - name
                    type: object
                required:
                - cluster
                - node
                type: object
              versionBundle:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - guest
            - versionBundle
            type: object
          status:
            properties:
              conditions:
                items:
                  description: DrainerConfigStatusCondition expresses a condition
                    in which a node may is.
                  properties:
                    lastHeartbeatTime:
                      description: LastHeartbeatTime is the last time we got an update
                        on a given condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    status:
                      description: Status may be True, False or Unknown.
                      type: string
                    type:
                      description: Type may be Pending, Ready, Draining, Drained.
                      type: string
                  required:
                  - lastHeartbeatTime
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: ignitions.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: Ignition
    listKind: IgnitionList
    plural: ignitions
    singular: ignition
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "Ignition is a Kubernetes resource (CR) which is based on the
          Ignition CRD defined above. \n An example Ignition resource can be viewed
          here https://github.com/giantswarm/apiextensions/blob/master/docs/cr/core.giantswarm.io_v1alpha1_ignition.yaml"
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IgnitionSpec is the interface which defines the input parameters
              for a newly rendered g8s ignition template.
            properties:
              apiServerEncryptionKey:
                description: APIServerEncryptionKey is used in EncryptionConfiguration
                  to encrypt Kubernetes secrets at rest.
                type: string
              baseDomain:
                description: BaseDomain is the base domain for all cluster services.
                  For test installations, this may be in the form <clusterId>.k8s.<installation>.<region>.<provider>.gigantic.io.
                type: string
              calico:
                description: Calico provides configuration for all calico-related
                  services.
                properties:
                  cidr:
                    description: CIDR is the CIDR-component of the IPv4 overlay subnetwork.
                      Combined with Subnet below.
                    type: string
                  disable:
                    description: Disable can be set to true to disable Calico setup.
                    type: boolean
                  mtu:
                    description: MTU is the maximum size of packets sent over Calico
                      in bytes.
                    type: string
                  subnet:
                    description: Subnet is the IP-component of the IPv4 overlay subnetwork.
                      Combined with CIDR above.
                    type: string
                required:
                - cidr
                - disable
                - mtu
                - subnet
                type: object
              clusterID:
                description: ClusterID is the name of the workload cluster to be created.
                type: string
              disableEncryptionAtRest:
                description: DisableEncryptionAtRest will disable secret encryption
                  at rest when set to true.
                type: boolean
              docker:
                description: Docker provides configuration for all calico-related
                  services.
                properties:
                  daemon:
                    description: Daemon provides information about the Docker daemon
                      running on TC nodes.
                    properties:
                      cidr:
                        description: CIDR is the fully specified subnet used for DOCKER_OPT_BIP.
                        type: string
                    required:
                    - cidr
                    type: object
                  networkSetup:
                    description: NetworkSetup provides the Docker image to be used
                      for network environment setup.
                    properties:
                      image:
                        description: Image provides the Docker image to be used for
                          network environment setup.
                        type: string
                    required:
                    - image
                    type: object
                required:
                - daemon
                - networkSetup
                type: object
              etcd:
                description: Etcd provides configuration for all etcd-related services.
                properties:
                  domain:
                    description: Domain is the domain of the etcd service.
                    type: string
                  port:
                    description: Port is the port of the etcd service, usually 2379.
                    type: integer
                  prefix:
                    description: Prefix is the prefix to add to all etcd keys created
                      by Kubernetes.
                    type: string
                required:
                - domain
                - port
                - prefix
                type: object
              extension:
                description: Extension can be used to extend an ignition with extra
                  configuration provided by the provider operator.
                properties:
                  files:
                    description: Files is an optional array of files which will be
                      rendered and added to the final node ignition.
                    items:
                      properties:
                        content:
                          description: Content is the string containing a file with
                            optional go-template-style replacements.
                          type: string
                        metadata:
                          description: Metadata is the filesystem metadata of the
                            given file.
                          properties:
                            compression:
                              description: Compression allows a file to be passed
                                in as a base64-encoded compressed string.
                              type: boolean
                            owner:
                              description: Owner is the owner of the file.
                              properties:
                                group:
                                  description: Group is the group which owns the file.
                                  properties:
                                    id:
                                      description: ID is the GID of the group.
                                      type: string
                                    name:
                                      description: Name is the name of the group.
                                      type: string
                                  required:
                                  - id
                                  - name
                                  type: object
                                user:
                                  description: User is the user which owns the file.
                                  properties:
                                    id:
                                      description: ID is the UID of the user.
                                      type: string
                                    name:
                                      description: Name is the name of the user.
                                      type: string
                                  required:
                                  - id
                                  - name
                                  type: object
                              required:
                              - group
                              - user
                              type: object
                            path:
                              description: Path is the path of the file.
                              type: string
                            permissions:
                              description: Permissions is the numeric permissions
                                applied to the file.
                              type: integer
                          required:
                          - compression
                          - owner
                          - path
                          - permissions
                          type: object
                      required:
                      - content
                      - metadata
                      type: object
                    type: array
                  units:
                    description: Files is an optional array of systemd units which
                      will be rendered and added to the final node ignition.
                    items:
                      properties:
                        content:
                          description: Content is the string containing a systemd
                            unit with optional go-template-style replacements.
                          type: string
                        metadata:
                          description: Metadata is the filesystem metadata of the
                            given file.
                          properties:
                            enabled:
                              description: Enabled indicates that the unit should
                                be enabled by default.
                              type: boolean
                            name:
                              description: Name is the name of the unit on the filesystem
                                and used in systemctl commands.
                              type: string
                          required:
                          - enabled
                          - name
                          type: object
                      required:
                      - content
                      - metadata
                      type: object
                    type: array
                  users:
                    description: Files is an optional array of users which will be
                      added to the final node ignition.
                    items:
                      properties:
                        name:
                          description: Name is the name of the user to be added to
                            the node via ignition.
                          type: string
                        publicKey:
                          description: PublicKey is the public key of the user to
                            be added to the node via ignition.
                          type: string
                      required:
                      - name
                      - publicKey
                      type: object
                    type: array
                type: object
              ingress:
                description: Ingress provides configuration for all ingress-related
                  services.
                properties:
                  disable:
                    description: Disable will disable the ingress controller in the
                      TC when true.
                    type: boolean
                required:
                - disable
                type: object
              isMaster:
                description: IsMaster determines if the rendered ignition should contain
                  master-specific configuration.
                type: boolean
              kubernetes:
                description: Kubernetes provides configuration for all Kubernetes-related
                  services.
                properties:
                  api:
                    description: API holds information about the desired TC Kubernetes
                      API.
                    properties:
                      domain:
                        description: Domain is the domain of the API server.
                        type: string
                      securePort:
                        description: Secure port is the port on which the API will
                          listen.
                        type: integer
                    required:
                    - domain
                    - securePort
                    type: object
                  cloudProvider:
                    description: CloudProvider is the provider upon which the cluster
                      is running. It is passed to API server as a flag.
                    type: string
                  dns:
                    description: DNS hold information about the in-cluster DNS service.
                    properties:
                      ip:
                        description: IP is the IP of the in-cluster DNS service. Usually
                          this is the same as the API server IP with the final component
                          replaced with .10.
                        type: string
                    required:
                    - ip
                    type: object
                  domain:
                    description: Domain is the domain used for services running in
                      the cluster. Usually this is "cluster.local".
                    type: string
                  ipRange:
                    description: IPRange is the range of IPs used for pod networking.
                    type: string
                  kubelet:
                    description: Kubelet holds information about the kubelet running
                      on nodes.
                    properties:
                      domain:
                        description: Domain is the domain of the network.
                        type: string
                    required:
                    - domain
                    type: object
                  oidc:
                    description: OIDC hold configuration which will be applied to
                      the apiserver OIDC flags.
                    properties:
                      clientID:
                        description: The client ID for the OpenID Connect client,
                          must be set if IssuerURL is set.
                        type: string
                      enabled:
                        description: Enabled indicates that the OIDC settings should
                          be applied when true.
                        type: boolean
                      groupsClaim:
                        description: If provided, the name of a custom OpenID Connect
                          claim for specifying user groups. The claim value is expected
                          to be a string or JSON encoded array of strings.
                        type: string
                      groupsPrefix:
                        description: If provided, all groups will be prefixed with
                          this value to prevent conflicts with other authentication
                          strategies.
                        type: string
                      issuerUrl:
                        description: The URL of the OpenID issuer, only HTTPS scheme
                          will be accepted. If set, it will be used to verify the
                          OIDC JSON Web Token (JWT).
                        type: string
                      usernameClaim:
                        description: The OpenID claim to use as the user name. Note
                          that claims other than the default ('sub') is not guaranteed
                          to be unique and immutable.
                        type: string
                      usernamePrefix:
                        description: If provided, all usernames will be prefixed with
                          this value. If not provided, username claims other than
                          'email' are prefixed by the issuer URL to avoid clashes.
                          To skip any prefixing, provide the value '-'.
                        type: string
                    required:
                    - clientID
                    - enabled
                    - groupsClaim
                    - groupsPrefix
                    - issuerUrl
                    - usernameClaim
                    - usernamePrefix
                    type: object
                required:
                - api
                - cloudProvider
                - dns
                - domain
                - ipRange
                - kubelet
                - oidc
                type: object
              provider:
                description: Defines the provider which should be rendered.
                type: string
              registry:
                description: Registry provides configuration for the docker registry
                  used for core component images.
                properties:
                  domain:
                    description: Domain is the domain of the registry to be used for
                      pulling core component images.
                    type: string
                  pullProgressDeadline:
                    description: Pull progress deadline is a string representing a
                      duration to be used as a deadline for pulling images.
                    type: string
                required:
                - domain
                - pullProgressDeadline
                type: object
              sso:
                description: SSO provides configuration for all SSO-related services.
                properties:
                  publicKey:
                    description: PublicKey is the public key of the SSO service.
                    type: string
                required:
                - publicKey
                type: object
            required:
            - apiServerEncryptionKey
            - baseDomain
            - calico
            - clusterID
            - disableEncryptionAtRest
            - docker
            - etcd
            - extension
            - ingress
            - isMaster
            - kubernetes
            - provider
            - registry
            - sso
            type: object
          status:
            description: IgnitionStatus holds the rendering result.
            properties:
              dataSecretName:
                description: DataSecret is a reference to the secret containing the
                  rendered ignition once created.
                properties:
                  name:
                    description: Name is the name of the secret containing the rendered
                      ignition.
                    type: string
                  namespace:
                    description: Namespace is the namespace of the secret containing
                      the rendered ignition.
                    type: string
                  resourceVersion:
                    description: ResourceVersion is the Kubernetes resource version
                      of the secret. Used to detect if the secret has changed, e.g.
                      12345.
                    type: string
                required:
                - name
                - namespace
                - resourceVersion
                type: object
              failureMessage:
                description: FailureMessage is a longer message indicating the reason
                  rendering failed (if it did).
                type: string
              failureReason:
                description: FailureReason is a short string indicating the reason
                  rendering failed (if it did).
                type: string
              ready:
                description: Ready will be true when the referenced secret contains
                  the rendered ignition and can be used for creating nodes.
                type: boolean
              verification:
                description: Verification is a hash of the rendered ignition to ensure
                  that it has not been changed when loaded as a remote file by the
                  bootstrap ignition. See https://coreos.com/ignition/docs/latest/configuration-v2_2.html
                properties:
                  algorithm:
                    description: The algorithm used for hashing. Must be sha512 for
                      now.
                    type: string
                  hash:
                    description: The content of the full rendered ignition hashed
                      by the corresponding algorithm.
                    type: string
                required:
                - algorithm
                - hash
                type: object
            required:
            - dataSecretName
            - failureMessage
            - failureReason
            - ready
            - verification
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: sparks.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: Spark
    listKind: SparkList
    plural: sparks
    singular: spark
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Spark is a placeholder resource to allow for the creation of
          ignition templates in Azure workload clusters, as of workload cluster release
          v13.0.0. Reconciled by azure-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SparkSpec is the interface which defines the input parameters
              for a newly rendered g8s ignition template.
            properties:
              values:
                additionalProperties:
                  type: string
                nullable: true
                type: object
            type: object
          status:
            description: SparkStatus holds the rendering result.
            properties:
              dataSecretName:
                description: DataSecretName is a name of the secret containing the
                  rendered ignition once created.
                type: string
              failureMessage:
                description: FailureMessage is a longer message indicating the reason
                  rendering failed (if it did).
                type: string
              failureReason:
                description: FailureReason is a short string indicating the reason
                  rendering failed (if it did).
                type: string
              ready:
                description: Ready will be true when the referenced secret contains
                  the rendered ignition and can be used for creating nodes.
                type: boolean
              verification:
                description: Verification is a hash of the rendered ignition to ensure
                  that it has not been changed when loaded as a remote file by the
                  bootstrap ignition. See https://coreos.com/ignition/docs/latest/configuration-v2_2.html
                properties:
                  algorithm:
                    description: The algorithm used for hashing. Must be sha512 for
                      now.
                    type: string
                  hash:
                    description: The content of the full rendered ignition hashed
                      by the corresponding algorithm.
                    type: string
                required:
                - algorithm
                - hash
                type: object
            required:
            - dataSecretName
            - failureMessage
            - failureReason
            - ready
            - verification
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: storageconfigs.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: StorageConfig
    listKind: StorageConfigList
    plural: storageconfigs
    singular: storageconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StorageConfig used to provide storage for Giant Swarm API microservices.
          Deprecated.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              storage:
                properties:
                  data:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - data
                type: object
            required:
            - storage
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: silences.monitoring.giantswarm.io
spec:
  group: monitoring.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: Silence
    listKind: SilenceList
    plural: silences
    singular: silence
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Silence represents schema for managed silences in Alertmanager.
          Reconciled by silence-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              matchers:
                items:
                  properties:
                    isEqual:
                      type: boolean
                    isRegex:
                      type: boolean
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - isRegex
                  - name
                  - value
                  type: object
                type: array
              targetTags:
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
            required:
            - matchers
            - targetTags
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: releases.release.giantswarm.io
spec:
  group: release.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: Release
    listKind: ReleaseList
    plural: releases
    singular: release
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Version of the kubernetes component in this release
      jsonPath: .spec.components[?(@.name=="kubernetes")].version
      name: Kubernetes version
      type: string
    - description: State of the release
      jsonPath: .spec.state
      name: State
      type: string
    - description: Time since release creation
      jsonPath: .spec.date
      name: Age
      type: date
    - description: Whether or not the release is ready
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Whether or not the release is in use
      jsonPath: .status.inUse
      name: InUse
      type: boolean
    - description: Release notes for this release
      jsonPath: .metadata.annotations['giantswarm\.io/release-notes']
      name: Release notes
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Release is a Kubernetes resource (CR) representing a Giant Swarm
          workload cluster release.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            properties:
              name:
                pattern: ^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-[\.0-9a-zA-Z]*)?$
                type: string
            type: object
          spec:
            properties:
              apps:
                description: Apps describes apps used in this release.
                items:
                  properties:
                    catalog:
                      default: default
                      description: Catalog specifies the name of the app catalog that
                        this app belongs to.
                      type: string
                    componentVersion:
                      description: Version of the upstream component used in the app.
                      type: string
                    name:
                      description: Name of the app.
                      type: string
                    version:
                      description: Version of the app.
                      pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
                      type: string
                  required:
                  - name
                  - version
                  type: object
                type: array
              components:
                description: Components describes components used in this release.
                items:
                  properties:
                    catalog:
                      default: control-plane-catalog
                      description: Catalog specifies the name of the app catalog that
                        this component belongs to.
                      type: string
                    name:
                      description: Name of the component.
                      type: string
                    reference:
                      description: Reference is the component's version in the catalog
                        (e.g. 1.2.3 or 1.2.3-abc8675309).
                      type: string
                    releaseOperatorDeploy:
                      description: ReleaseOperatorDeploy informs the release-operator
                        that it should deploy the component.
                      type: boolean
                    version:
                      description: Version of the component.
                      pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
                      type: string
                  required:
                  - name
                  - version
                  type: object
                minItems: 1
                type: array
              date:
                description: Date that the release became active.
                format: date-time
                type: string
              endOfLifeDate:
                description: EndOfLifeDate is the date and time when support for a
                  workload cluster using this release ends. This may not be set at
                  the time of release creation and can be specififed later.
                format: date-time
                nullable: true
                type: string
              state:
                description: 'State indicates the availability of the release: deprecated,
                  active, or wip.'
                pattern: ^(active|deprecated|wip)$
                type: string
            required:
            - apps
            - components
            - date
            - state
            type: object
          status:
            properties:
              inUse:
                description: InUse indicates whether a release is actually used by
                  a cluster.
                type: boolean
              ready:
                description: Ready indicates if all components of the release have
                  been deployed.
                type: boolean
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: organizations.security.giantswarm.io
spec:
  group: security.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    shortNames:
    - org
    - orgs
    singular: organization
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Organization represents schema for managed Kubernetes namespace.
          Reconciled by organization-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            type: object
          status:
            properties:
              namespace:
                description: Namespace is the namespace containing the resources for
                  this organization.
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
