apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: flannelconfigs.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - giantswarm
    - kvm
    kind: FlannelConfig
    listKind: FlannelConfigList
    plural: flannelconfigs
    singular: flannelconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bridge:
                properties:
                  docker:
                    properties:
                      image:
                        type: string
                    required:
                    - image
                    type: object
                  spec:
                    properties:
                      dns:
                        properties:
                          servers:
                            items:
                              type: string
                            type: array
                        required:
                        - servers
                        type: object
                      interface:
                        type: string
                      ntp:
                        properties:
                          servers:
                            items:
                              type: string
                            type: array
                        required:
                        - servers
                        type: object
                      privateNetwork:
                        type: string
                    required:
                    - dns
                    - interface
                    - ntp
                    - privateNetwork
                    type: object
                required:
                - docker
                - spec
                type: object
              cluster:
                properties:
                  customer:
                    type: string
                  id:
                    type: string
                  namespace:
                    type: string
                required:
                - customer
                - id
                - namespace
                type: object
              flannel:
                properties:
                  spec:
                    properties:
                      network:
                        type: string
                      runDir:
                        type: string
                      subnetLen:
                        type: integer
                      vni:
                        type: integer
                    required:
                    - network
                    - runDir
                    - subnetLen
                    - vni
                    type: object
                required:
                - spec
                type: object
              health:
                properties:
                  docker:
                    properties:
                      image:
                        type: string
                    required:
                    - image
                    type: object
                required:
                - docker
                type: object
              versionBundle:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - bridge
            - cluster
            - flannel
            - health
            - versionBundle
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: kvmclusterconfigs.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    categories:
    - giantswarm
    - kvm
    kind: KVMClusterConfig
    listKind: KVMClusterConfigList
    plural: kvmclusterconfigs
    singular: kvmclusterconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              guest:
                properties:
                  availabilityZones:
                    type: integer
                  dnsZone:
                    description: DNSZone for the workload cluster is supplemented with host prefixes for specific services such as Kubernetes API or Etcd. In general this DNS Zone should start with "k8s" like for example "k8s.cluster.example.com.".
                    type: string
                  id:
                    type: string
                  masters:
                    items:
                      properties:
                        cpuCores:
                          type: integer
                        id:
                          type: string
                        memorySizeGB:
                          format: double
                          type: number
                        storageSizeGB:
                          format: double
                          type: number
                      required:
                      - id
                      type: object
                    type: array
                  name:
                    type: string
                  owner:
                    type: string
                  releaseVersion:
                    type: string
                  versionBundles:
                    items:
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  workers:
                    items:
                      properties:
                        cpuCores:
                          type: integer
                        id:
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          nullable: true
                          type: object
                        memorySizeGB:
                          format: double
                          type: number
                        storageSizeGB:
                          format: double
                          type: number
                      required:
                      - id
                      type: object
                    type: array
                required:
                - dnsZone
                - id
                type: object
              versionBundle:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - guest
            - versionBundle
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: kvmconfigs.provider.giantswarm.io
spec:
  group: provider.giantswarm.io
  names:
    categories:
    - giantswarm
    - kvm
    kind: KVMConfig
    listKind: KVMConfigList
    plural: kvmconfigs
    singular: kvmconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cluster:
                properties:
                  calico:
                    properties:
                      cidr:
                        type: integer
                      mtu:
                        type: integer
                      subnet:
                        type: string
                    required:
                    - cidr
                    - mtu
                    - subnet
                    type: object
                  customer:
                    properties:
                      id:
                        type: string
                    required:
                    - id
                    type: object
                  docker:
                    properties:
                      daemon:
                        properties:
                          cidr:
                            type: string
                        required:
                        - cidr
                        type: object
                    required:
                    - daemon
                    type: object
                  etcd:
                    properties:
                      altNames:
                        type: string
                      domain:
                        type: string
                      port:
                        type: integer
                      prefix:
                        type: string
                    required:
                    - altNames
                    - domain
                    - port
                    - prefix
                    type: object
                  id:
                    type: string
                  kubernetes:
                    properties:
                      api:
                        properties:
                          clusterIPRange:
                            type: string
                          domain:
                            type: string
                          securePort:
                            type: integer
                        required:
                        - clusterIPRange
                        - domain
                        - securePort
                        type: object
                      cloudProvider:
                        type: string
                      dns:
                        properties:
                          ip:
                            type: string
                        required:
                        - ip
                        type: object
                      domain:
                        type: string
                      ingressController:
                        properties:
                          docker:
                            properties:
                              image:
                                type: string
                            required:
                            - image
                            type: object
                          domain:
                            type: string
                          insecurePort:
                            type: integer
                          securePort:
                            type: integer
                          wildcardDomain:
                            type: string
                        required:
                        - docker
                        - domain
                        - insecurePort
                        - securePort
                        - wildcardDomain
                        type: object
                      kubelet:
                        properties:
                          altNames:
                            type: string
                          domain:
                            type: string
                          labels:
                            type: string
                          port:
                            type: integer
                        required:
                        - altNames
                        - domain
                        - labels
                        - port
                        type: object
                      networkSetup:
                        properties:
                          docker:
                            properties:
                              image:
                                type: string
                            required:
                            - image
                            type: object
                          kubeProxy:
                            description: ClusterKubernetesNetworkSetupKubeProxy describes values passed to the kube-proxy running in a workload cluster.
                            properties:
                              conntrackMaxPerCore:
                                description: Maximum number of NAT connections to track per CPU core (0 to leave the limit as-is and ignore conntrack-min). Passed to kube-proxy as --conntrack-max-per-core.
                                type: integer
                            required:
                            - conntrackMaxPerCore
                            type: object
                        required:
                        - docker
                        - kubeProxy
                        type: object
                      ssh:
                        properties:
                          userList:
                            items:
                              properties:
                                name:
                                  type: string
                                publicKey:
                                  type: string
                              required:
                              - name
                              - publicKey
                              type: object
                            type: array
                        required:
                        - userList
                        type: object
                    required:
                    - api
                    - cloudProvider
                    - dns
                    - domain
                    - ingressController
                    - kubelet
                    - networkSetup
                    - ssh
                    type: object
                  masters:
                    items:
                      properties:
                        id:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                  scaling:
                    properties:
                      max:
                        description: Max defines maximum number of worker nodes the workload cluster is allowed to have.
                        type: integer
                      min:
                        description: Min defines minimum number of worker nodes required to be present in the workload cluster.
                        type: integer
                    required:
                    - max
                    - min
                    type: object
                  version:
                    description: Version is DEPRECATED and should just be dropped.
                    type: string
                  workers:
                    items:
                      properties:
                        id:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                required:
                - calico
                - customer
                - docker
                - etcd
                - id
                - kubernetes
                - masters
                - scaling
                - version
                type: object
              kvm:
                properties:
                  endpointUpdater:
                    properties:
                      docker:
                        properties:
                          image:
                            type: string
                        required:
                        - image
                        type: object
                    required:
                    - docker
                    type: object
                  k8sKVM:
                    properties:
                      docker:
                        properties:
                          image:
                            type: string
                        required:
                        - image
                        type: object
                      storageType:
                        type: string
                    required:
                    - docker
                    - storageType
                    type: object
                  masters:
                    items:
                      properties:
                        cpus:
                          type: integer
                        disk:
                          format: double
                          type: number
                        dockerVolumeSizeGB:
                          type: integer
                        hostVolumes:
                          items:
                            properties:
                              hostPath:
                                minLength: 1
                                type: string
                              mountTag:
                                maxLength: 31
                                minLength: 1
                                type: string
                            required:
                            - hostPath
                            - mountTag
                            type: object
                          nullable: true
                          type: array
                        memory:
                          type: string
                      required:
                      - cpus
                      - disk
                      - dockerVolumeSizeGB
                      - memory
                      type: object
                    type: array
                  network:
                    properties:
                      flannel:
                        properties:
                          vni:
                            type: integer
                        required:
                        - vni
                        type: object
                    required:
                    - flannel
                    type: object
                  nodeController:
                    description: NOTE THIS IS DEPRECATED
                    properties:
                      docker:
                        description: NOTE THIS IS DEPRECATED
                        properties:
                          image:
                            type: string
                        required:
                        - image
                        type: object
                    required:
                    - docker
                    type: object
                  portMappings:
                    items:
                      properties:
                        name:
                          type: string
                        nodePort:
                          type: integer
                        targetPort:
                          type: integer
                      required:
                      - name
                      - nodePort
                      - targetPort
                      type: object
                    type: array
                  workers:
                    items:
                      properties:
                        cpus:
                          type: integer
                        disk:
                          format: double
                          type: number
                        dockerVolumeSizeGB:
                          type: integer
                        hostVolumes:
                          items:
                            properties:
                              hostPath:
                                minLength: 1
                                type: string
                              mountTag:
                                maxLength: 31
                                minLength: 1
                                type: string
                            required:
                            - hostPath
                            - mountTag
                            type: object
                          nullable: true
                          type: array
                        memory:
                          type: string
                      required:
                      - cpus
                      - disk
                      - dockerVolumeSizeGB
                      - memory
                      type: object
                    type: array
                required:
                - endpointUpdater
                - k8sKVM
                - masters
                - network
                - nodeController
                - portMappings
                - workers
                type: object
              versionBundle:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - cluster
            - kvm
            - versionBundle
            type: object
          status:
            properties:
              cluster:
                properties:
                  conditions:
                    description: Conditions is a list of status information expressing the current conditional state of a workload cluster. This may reflect the status of the workload cluster being updating or being up to date.
                    items:
                      description: StatusClusterCondition expresses the conditions in which a workload cluster may is.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition transitioned from one status to another.
                          format: date-time
                          nullable: true
                          type: string
                        status:
                          description: Status may be True, False or Unknown.
                          type: string
                        type:
                          description: Type may be Creating, Created, Scaling, Scaled, Draining, Drained, Updating, Updated, Deleting, Deleted.
                          type: string
                      type: object
                    nullable: true
                    type: array
                  network:
                    description: StatusClusterNetwork expresses the network segment that is allocated for a workload cluster.
                    nullable: true
                    properties:
                      cidr:
                        type: string
                    type: object
                  nodes:
                    description: Nodes is a list of workload cluster node information reflecting the current state of the workload cluster nodes.
                    items:
                      description: StatusClusterNode holds information about a workload cluster node.
                      properties:
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels contains the kubernetes labels for corresponding node.
                          nullable: true
                          type: object
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition transitioned from one status to another.
                          format: date-time
                          nullable: true
                          type: string
                        name:
                          description: Name referrs to a workload cluster node name.
                          type: string
                        version:
                          description: Version referrs to the version used by the node as mandated by the provider operator.
                          type: string
                      type: object
                    nullable: true
                    type: array
                  resources:
                    description: Resources is a list of arbitrary conditions of operatorkit resource implementations.
                    items:
                      description: Resource is structure holding arbitrary conditions of operatorkit resource implementations. Imagine an operator implements an instance resource. This resource may operates sequentially but has to operate based on a certain system state it manages. So it tracks the status as needed here specific to its own implementation and means in order to fulfil its premise.
                      properties:
                        conditions:
                          items:
                            description: StatusClusterResourceCondition expresses the conditions in which an operatorkit resource may is.
                            properties:
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the condition transitioned from one status to another.
                                format: date-time
                                nullable: true
                                type: string
                              status:
                                description: Status may be True, False or Unknown.
                                type: string
                              type:
                                description: Type may be anything an operatorkit resource may define.
                                type: string
                            type: object
                          nullable: true
                          type: array
                        name:
                          type: string
                      type: object
                    nullable: true
                    type: array
                  scaling:
                    description: StatusClusterScaling expresses the current status of desired number of worker nodes in the workload cluster.
                    nullable: true
                    properties:
                      desiredCapacity:
                        type: integer
                    type: object
                  versions:
                    description: Versions is a list that acts like a historical track record of versions a workload cluster went through. A version is only added to the list as soon as the workload cluster successfully migrated to the version added here.
                    items:
                      description: StatusClusterVersion expresses the versions in which a workload cluster was and may still be.
                      properties:
                        date:
                          description: "TODO date is deprecated due to LastTransitionTime This can be removed ones the new properties are properly used in all workload clusters. \n     https://github.com/giantswarm/giantswarm/issues/3988"
                          format: date-time
                          nullable: true
                          type: string
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition transitioned from one status to another.
                          format: date-time
                          nullable: true
                          type: string
                        semver:
                          description: Semver is some semver version, e.g. 1.0.0.
                          type: string
                      type: object
                    nullable: true
                    type: array
                type: object
              kvm:
                properties:
                  nodeIndexes:
                    additionalProperties:
                      type: integer
                    description: NodeIndexes is a map from nodeID -> nodeIndex. This is used to create deterministic iSCSI initiator names.
                    nullable: true
                    type: object
                type: object
            required:
            - cluster
            - kvm
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
