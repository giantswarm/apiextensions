definitions:
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: application.giantswarm.io
      kind: App
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: application.giantswarm.io
      kind: AppCatalog
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: application.giantswarm.io
      kind: AppCatalogList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpec:
    properties:
      config:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpecConfig'
        description: Config is the config to be applied when apps belonging to this
          catalog are deployed.
      description:
        type: string
      logoURL:
        description: LogoURL contains the links for logo image file for this app catalog
        type: string
      storage:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpecStorage'
        description: Storage references a map containing values that should be applied
          to the appcatalog.
      title:
        description: Title is the name of the app catalog for this CR e.g. Catalog
          of Apps by Giant Swarm
        type: string
    required:
    - title
    - description
    - config
    - logoURL
    - storage
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpecConfig:
    properties:
      configMap:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpecConfigConfigMap'
        description: ConfigMap references a config map containing catalog values that
          should be applied to apps in this catalog.
      secret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpecConfigSecret'
        description: Secret references a secret containing catalog values that should
          be applied to apps in this catalog.
    required:
    - configMap
    - secret
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpecConfigConfigMap:
    properties:
      name:
        description: Name is the name of the config map containing catalog values
          to apply, e.g. app-catalog-values.
        type: string
      namespace:
        description: Namespace is the namespace of the catalog values config map,
          e.g. giantswarm.
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpecConfigSecret:
    properties:
      name:
        description: Name is the name of the secret containing catalog values to apply,
          e.g. app-catalog-secret.
        type: string
      namespace:
        description: Namespace is the namespace of the secret, e.g. giantswarm.
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogSpecStorage:
    properties:
      URL:
        description: URL is the link to where this AppCatalog's repository is located
          e.g. https://example.com/app-catalog/
        type: string
      type:
        description: Type indicates which repository type would be used for this AppCatalog.
          e.g. helm
        type: string
    required:
    - type
    - URL
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: application.giantswarm.io
      kind: AppList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpec:
    properties:
      catalog:
        description: Catalog is the name of the app catalog this app belongs to. e.g.
          giantswarm
        type: string
      config:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecConfig'
        description: Config is the config to be applied when the app is deployed.
      kubeConfig:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecKubeConfig'
        description: KubeConfig is the kubeconfig to connect to the cluster when deploying
          the app.
      name:
        description: Name is the name of the app to be deployed. e.g. kubernetes-prometheus
        type: string
      namespace:
        description: Namespace is the namespace where the app should be deployed.
          e.g. monitoring
        type: string
      userConfig:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecUserConfig'
        description: UserConfig is the user config to be applied when the app is deployed.
      version:
        description: Version is the version of the app that should be deployed. e.g.
          1.0.0
        type: string
    required:
    - catalog
    - config
    - kubeConfig
    - name
    - namespace
    - userConfig
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecConfig:
    properties:
      configMap:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecConfigConfigMap'
        description: ConfigMap references a config map containing values that should
          be applied to the app.
      secret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecConfigSecret'
        description: Secret references a secret containing secret values that should
          be applied to the app.
    required:
    - configMap
    - secret
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecConfigConfigMap:
    properties:
      name:
        description: Name is the name of the config map containing app values to apply,
          e.g. prometheus-values.
        type: string
      namespace:
        description: Namespace is the namespace of the values config map, e.g. monitoring.
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecConfigSecret:
    properties:
      name:
        description: Name is the name of the secret containing app values to apply,
          e.g. prometheus-secret.
        type: string
      namespace:
        description: Namespace is the namespace of the secret, e.g. kube-system.
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecKubeConfig:
    properties:
      context:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecKubeConfigContext'
        description: Context is the kubeconfig context.
      inCluster:
        description: InCluster is a flag for whether to use InCluster credentials.
          When true the context name and secret should not be set.
        type: boolean
      secret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecKubeConfigSecret'
        description: Secret references a secret containing the kubconfig.
    required:
    - inCluster
    - context
    - secret
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecKubeConfigContext:
    properties:
      name:
        description: Name is the name of the kubeconfig context. e.g. giantswarm-12345.
        type: string
    required:
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecKubeConfigSecret:
    properties:
      name:
        description: Name is the name of the secret containing the kubeconfig, e.g.
          app-operator-kubeconfig.
        type: string
      namespace:
        description: Namespace is the namespace of the secret containing the kubeconfig,
          e.g. giantswarm.
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecUserConfig:
    properties:
      configMap:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecUserConfigConfigMap'
        description: ConfigMap references a config map containing user values that
          should be applied to the app.
      secret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecUserConfigSecret'
        description: Secret references a secret containing user secret values that
          should be applied to the app.
    required:
    - configMap
    - secret
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecUserConfigConfigMap:
    properties:
      name:
        description: Name is the name of the config map containing user values to
          apply, e.g. prometheus-user-values.
        type: string
      namespace:
        description: Namespace is the namespace of the user values config map on the
          control plane, e.g. 123ab.
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppSpecUserConfigSecret:
    properties:
      name:
        description: Name is the name of the secret containing user values to apply,
          e.g. prometheus-user-secret.
        type: string
      namespace:
        description: Namespace is the namespace of the secret, e.g. kube-system.
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppStatus:
    properties:
      appVersion:
        description: AppVersion is the value of the AppVersion field in the Chart.yaml
          of the deployed app. This is an optional field with the version of the component
          being deployed. e.g. 0.21.0. https://helm.sh/docs/topics/charts/#the-chartyaml-file
        type: string
      release:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppStatusRelease'
        description: Release is the status of the Helm release for the deployed app.
      version:
        description: Version is the value of the Version field in the Chart.yaml of
          the deployed app. e.g. 1.0.0.
        type: string
    required:
    - appVersion
    - release
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppStatusRelease:
    properties:
      lastDeployed:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: LastDeployed is the time when the app was last deployed.
      reason:
        description: Reason is the description of the last status of helm release
          when the app is not installed successfully, e.g. deploy resource already
          exists.
        type: string
      status:
        description: Status is the status of the deployed app, e.g. DEPLOYED.
        type: string
    required:
    - status
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: application.giantswarm.io
      kind: Chart
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: application.giantswarm.io
      kind: ChartList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartSpec:
    properties:
      config:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartSpecConfig'
        description: Config is the config to be applied when the chart is deployed.
      name:
        description: Name is the name of the Helm chart to be deployed. e.g. kubernetes-prometheus
        type: string
      namespace:
        description: Namespace is the namespace where the chart should be deployed.
          e.g. monitoring
        type: string
      tarballURL:
        description: TarballURL is the URL for the Helm chart tarball to be deployed.
          e.g. https://example.com/path/to/prom-1-0-0.tgz
        type: string
      version:
        description: Version is the version of the chart that should be deployed.
          e.g. 1.0.0
        type: string
    required:
    - config
    - name
    - namespace
    - tarballURL
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartSpecConfig:
    properties:
      configMap:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartSpecConfigConfigMap'
        description: ConfigMap references a config map containing values that should
          be applied to the chart.
      secret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartSpecConfigSecret'
        description: Secret references a secret containing secret values that should
          be applied to the chart.
    required:
    - configMap
    - secret
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartSpecConfigConfigMap:
    properties:
      name:
        description: Name is the name of the config map containing chart values to
          apply, e.g. prometheus-chart-values.
        type: string
      namespace:
        description: Namespace is the namespace of the values config map, e.g. monitoring.
        type: string
      resourceVersion:
        description: ResourceVersion is the Kubernetes resource version of the configmap.
          Used to detect if the configmap has changed, e.g. 12345.
        type: string
    required:
    - name
    - namespace
    - resourceVersion
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartSpecConfigSecret:
    properties:
      name:
        description: Name is the name of the secret containing chart values to apply,
          e.g. prometheus-chart-secret.
        type: string
      namespace:
        description: Namespace is the namespace of the secret, e.g. kube-system.
        type: string
      resourceVersion:
        description: ResourceVersion is the Kubernetes resource version of the secret.
          Used to detect if the secret has changed, e.g. 12345.
        type: string
    required:
    - name
    - namespace
    - resourceVersion
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartStatus:
    properties:
      appVersion:
        description: AppVersion is the value of the AppVersion field in the Chart.yaml
          of the deployed chart. This is an optional field with the version of the
          component being deployed. e.g. 0.21.0. https://helm.sh/docs/topics/charts/#the-chartyaml-file
        type: string
      reason:
        description: Reason is the description of the last status of helm release
          when the chart is not installed successfully, e.g. deploy resource already
          exists.
        type: string
      release:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartStatusRelease'
        description: Release is the status of the Helm release for the deployed chart.
      version:
        description: Version is the value of the Version field in the Chart.yaml of
          the deployed chart. e.g. 1.0.0.
        type: string
    required:
    - appVersion
    - release
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartStatusRelease:
    properties:
      lastDeployed:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: LastDeployed is the time when the deployed chart was last deployed.
      revision:
        description: Revision is the revision number for this deployed chart.
        format: int32
        type: integer
      status:
        description: Status is the status of the deployed chart, e.g. DEPLOYED.
        type: string
    required:
    - revision
    - status
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackupSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackupStatus'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: backup.giantswarm.io
      kind: ETCDBackup
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackupList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: backup.giantswarm.io
      kind: ETCDBackupList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackupSpec:
    properties:
      guestBackup:
        description: GuestBackup is a boolean indicating if the tenant clusters have
          to be backupped
        type: boolean
    required:
    - guestBackup
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackupStatus:
    properties:
      finishedTimestamp:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Timestamp when the last (final) attempt was made (when the Phase
          became either 'Completed' or 'Failed'
      instances:
        additionalProperties:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDInstanceBackupStatusIndex'
        description: map containing the state of the backup for all instances
        type: object
      startedTimestamp:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Timestamp when the first attempt was made
      status:
        description: Status of the whole backup job (can be 'Pending', 'Running'.
          'Completed', 'Failed')
        type: string
    required:
    - status
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDInstanceBackupStatus:
    properties:
      backupFileSize:
        description: Size of the backup file
        format: int64
        type: integer
      creationTime:
        description: Time took by the backup creation process
        format: int64
        type: integer
      encryptionTime:
        description: Time took by the backup encryption process
        format: int64
        type: integer
      finishedTimestamp:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Timestamp when the last (final) attempt was made (when the Phase
          became either 'Completed' or 'Failed'
      latestError:
        description: Latest backup error message
        type: string
      startedTimestamp:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Timestamp when the first attempt was made
      status:
        description: Status of this isntance's backup job (can be 'Pending', 'Running'.
          'Completed', 'Failed')
        type: string
      uploadTime:
        description: Time took by the backup upload process
        format: int64
        type: integer
    required:
    - status
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDInstanceBackupStatusIndex:
    properties:
      name:
        description: Name of the tenant cluster or 'Control Plane'
        type: string
      v2:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDInstanceBackupStatus'
        description: Status of the V2 backup for this instance
      v3:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDInstanceBackupStatus'
        description: Status of the V3 backup for this instance
    required:
    - name
    - v2
    - v3
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: AWSClusterConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: AWSClusterConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpec:
    properties:
      guest:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecGuest'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecVersionBundle'
    required:
    - guest
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecGuest:
    properties:
      availabilityZones:
        format: int32
        type: integer
      credentialSecret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecGuestCredentialSecret'
      dnsZone:
        description: DNSZone for guest cluster is supplemented with host prefixes
          for specific services such as Kubernetes API or Etcd. In general this DNS
          Zone should start with "k8s" like for example "k8s.cluster.example.com.".
        type: string
      id:
        type: string
      masters:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecGuestMaster'
        type: array
      name:
        type: string
      owner:
        type: string
      releaseVersion:
        type: string
      versionBundles:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ClusterGuestConfigVersionBundle'
        type: array
      workers:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecGuestWorker'
        type: array
    required:
    - dnsZone
    - id
    - credentialSecret
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecGuestCredentialSecret:
    description: AWSClusterConfigSpecGuestCredentialSecret points to the K8s Secret
      containing credentials for an AWS account in which the guest cluster should
      be created.
    properties:
      name:
        type: string
      namespace:
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecGuestMaster:
    properties:
      id:
        type: string
      instanceType:
        type: string
    required:
    - id
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecGuestWorker:
    properties:
      id:
        type: string
      instanceType:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
    required:
    - id
    - labels
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: AzureClusterConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: AzureClusterConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpec:
    properties:
      guest:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecGuest'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecVersionBundle'
    required:
    - guest
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecGuest:
    properties:
      availabilityZones:
        format: int32
        type: integer
      credentialSecret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecGuestCredentialSecret'
      dnsZone:
        description: DNSZone for guest cluster is supplemented with host prefixes
          for specific services such as Kubernetes API or Etcd. In general this DNS
          Zone should start with "k8s" like for example "k8s.cluster.example.com.".
        type: string
      id:
        type: string
      masters:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecGuestMaster'
        type: array
      name:
        type: string
      owner:
        type: string
      releaseVersion:
        type: string
      versionBundles:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ClusterGuestConfigVersionBundle'
        type: array
      workers:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecGuestWorker'
        type: array
    required:
    - dnsZone
    - id
    - credentialSecret
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecGuestCredentialSecret:
    description: AzureClusterConfigSpecGuestCredentialSecret points to the K8s Secret
      containing credentials for an Azure subscription in which the tenant cluster
      should be created.
    properties:
      name:
        type: string
      namespace:
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecGuestMaster:
    properties:
      id:
        type: string
      vmSize:
        type: string
    required:
    - id
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecGuestWorker:
    properties:
      id:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      vmSize:
        type: string
    required:
    - id
    - labels
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: CertConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: CertConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigSpec:
    properties:
      cert:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigSpecCert'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigSpecVersionBundle'
    required:
    - cert
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigSpecCert:
    properties:
      allowBareDomains:
        type: boolean
      altNames:
        items:
          type: string
        type: array
      clusterComponent:
        type: string
      clusterID:
        type: string
      commonName:
        type: string
      disableRegeneration:
        type: boolean
      ipSans:
        items:
          type: string
        type: array
      organizations:
        items:
          type: string
        type: array
      ttl:
        type: string
    required:
    - allowBareDomains
    - clusterComponent
    - clusterID
    - commonName
    - disableRegeneration
    - ttl
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: ChartConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: ChartConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpec:
    properties:
      chart:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecChart'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecVersionBundle'
    required:
    - chart
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecChart:
    properties:
      channel:
        description: Channel is the name of the Appr channel to reconcile against,
          e.g. 1-0-stable.
        type: string
      configMap:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecConfigMap'
        description: ConfigMap references a config map containing values that should
          be applied to the chart.
      name:
        description: Name is the name of the Helm chart to deploy, e.g. kubernetes-node-exporter.
        type: string
      namespace:
        description: Namespace is the namespace where the Helm chart is to be deployed,
          e.g. giantswarm.
        type: string
      release:
        description: Release is the name of the Helm release when the chart is deployed,
          e.g. node-exporter.
        type: string
      secret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecSecret'
        description: Secret references a secret containing secret values that should
          be applied to the chart.
      userConfigMap:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecConfigMap'
        description: UserConfigMap references a config map containing custom values.
          These custom values are specified by the user to override default values.
    required:
    - channel
    - configMap
    - userConfigMap
    - name
    - namespace
    - release
    - secret
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecConfigMap:
    properties:
      name:
        description: Name is the name of the config map containing chart values to
          apply, e.g. node-exporter-chart-values.
        type: string
      namespace:
        description: Namespace is the namespace of the values config map, e.g. kube-system.
        type: string
      resourceVersion:
        description: ResourceVersion is the Kubernetes resource version of the configmap.
          Used to detect if the configmap has changed, e.g. 12345.
        type: string
    required:
    - name
    - namespace
    - resourceVersion
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecSecret:
    properties:
      name:
        description: Name is the name of the secret containing chart values to apply,
          e.g. node-exporter-chart-secret.
        type: string
      namespace:
        description: Namespace is the namespace of the secret, e.g. kube-system.
        type: string
      resourceVersion:
        description: ResourceVersion is the Kubernetes resource version of the secret.
          Used to detect if the secret has changed, e.g. 12345.
        type: string
    required:
    - name
    - namespace
    - resourceVersion
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigStatus:
    properties:
      reason:
        description: Reason is the description of the last status of helm release
          when the chart is not installed successfully, e.g. deploy resource already
          exists.
        type: string
      releaseStatus:
        description: ReleaseStatus is the status of the Helm release when the chart
          is installed, e.g. DEPLOYED.
        type: string
    required:
    - releaseStatus
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ClusterGuestConfigVersionBundle:
    properties:
      name:
        type: string
      version:
        type: string
    required:
    - name
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: DrainerConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: DrainerConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpec:
    properties:
      guest:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecGuest'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecVersionBundle'
    required:
    - guest
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecGuest:
    properties:
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecGuestCluster'
      node:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecGuestNode'
    required:
    - cluster
    - node
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecGuestCluster:
    properties:
      api:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecGuestClusterAPI'
      id:
        description: ID is the guest cluster ID of which a node should be drained.
        type: string
    required:
    - api
    - id
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecGuestClusterAPI:
    properties:
      endpoint:
        description: Endpoint is the guest cluster API endpoint.
        type: string
    required:
    - endpoint
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecGuestNode:
    properties:
      name:
        description: |-
          Name is the identifier of the guest cluster's master and worker nodes. In Kubernetes/Kubectl they are represented as node names. The names are manage in an abstracted way because of provider specific differences.

              AWS: EC2 instance DNS.
              Azure: VM name.
              KVM: host cluster pod name.
        type: string
    required:
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigStatus:
    properties:
      conditions:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigStatusCondition'
        type: array
    required:
    - conditions
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigStatusCondition:
    description: DrainerConfigStatusCondition expresses a condition in which a node
      may is.
    properties:
      lastHeartbeatTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: LastHeartbeatTime is the last time we got an update on a given
          condition.
      lastTransitionTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: LastTransitionTime is the last time the condition transitioned
          from one status to another.
      status:
        description: Status may be True, False or Unknown.
        type: string
      type:
        description: Type may be Pending, Ready, Draining, Drained.
        type: string
    required:
    - lastHeartbeatTime
    - lastTransitionTime
    - status
    - type
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: FlannelConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: FlannelConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpec:
    properties:
      bridge:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridge'
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecCluster'
      flannel:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecFlannel'
      health:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecHealth'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecVersionBundle'
    required:
    - bridge
    - cluster
    - flannel
    - health
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridge:
    properties:
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridgeDocker'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridgeSpec'
    required:
    - docker
    - spec
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridgeDocker:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridgeSpec:
    properties:
      dns:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridgeSpecDNS'
      interface:
        type: string
      ntp:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridgeSpecNTP'
      privateNetwork:
        type: string
    required:
    - interface
    - privateNetwork
    - dns
    - ntp
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridgeSpecDNS:
    properties:
      servers:
        items:
          type: string
        type: array
    required:
    - servers
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecBridgeSpecNTP:
    properties:
      servers:
        items:
          type: string
        type: array
    required:
    - servers
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecCluster:
    properties:
      customer:
        type: string
      id:
        type: string
      namespace:
        type: string
    required:
    - id
    - customer
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecFlannel:
    properties:
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecFlannelSpec'
    required:
    - spec
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecFlannelSpec:
    properties:
      network:
        type: string
      runDir:
        type: string
      subnetLen:
        format: int32
        type: integer
      vni:
        format: int32
        type: integer
    required:
    - network
    - subnetLen
    - runDir
    - vni
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecHealth:
    properties:
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecHealthDocker'
    required:
    - docker
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecHealthDocker:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition:
    description: |-
      Ignition is a Kubernetes resource (CR) which is based on the Ignition CRD defined above.

      An example Ignition resource can be viewed here https://github.com/giantswarm/apiextensions/blob/master/docs/cr/core.giantswarm.io_v1alpha1_ignition.yaml
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: Ignition
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: IgnitionList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpec:
    description: IgnitionSpec is the interface which defines the input parameters
      for a newly rendered g8s ignition template.
    properties:
      apiServerEncryptionKey:
        description: APIServerEncryptionKey is used in EncryptionConfiguration to
          encrypt Kubernetes secrets at rest.
        type: string
      baseDomain:
        description: BaseDomain is the base domain for all cluster services. For test
          installations, this may be in the form <clusterId>.k8s.<installation>.<region>.<provider>.gigantic.io.
        type: string
      calico:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecCalico'
        description: Calico provides configuration for all calico-related services.
      clusterID:
        description: ClusterID is the name of the tenant cluster to be created.
        type: string
      disableEncryptionAtRest:
        description: DisableEncryptionAtRest will disable secret encryption at rest
          when set to true.
        type: boolean
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecDocker'
        description: Docker provides configuration for all calico-related services.
      etcd:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecEtcd'
        description: Etcd provides configuration for all etcd-related services.
      extension:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtension'
        description: Extension can be used to extend an ignition with extra configuration
          provided by the provider operator.
      ingress:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecIngress'
        description: Ingress provides configuration for all ingress-related services.
      isMaster:
        description: IsMaster determines if the rendered ignition should contain master-specific
          configuration.
        type: boolean
      kubernetes:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecKubernetes'
        description: Kubernetes provides configuration for all Kubernetes-related
          services.
      provider:
        description: Defines the provider which should be rendered.
        type: string
      registry:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecRegistry'
        description: Registry provides configuration for the docker registry used
          for core component images.
      sso:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecSSO'
        description: SSO provides configuration for all SSO-related services.
    required:
    - apiServerEncryptionKey
    - baseDomain
    - calico
    - clusterID
    - disableEncryptionAtRest
    - docker
    - etcd
    - extension
    - ingress
    - isMaster
    - kubernetes
    - provider
    - registry
    - sso
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecCalico:
    properties:
      cidr:
        description: CIDR is the CIDR-component of the IPv4 overlay subnetwork. Combined
          with Subnet below.
        type: string
      disable:
        description: Disable can be set to true to disable Calico setup.
        type: boolean
      mtu:
        description: MTU is the maximum size of packets sent over Calico in bytes.
        type: string
      subnet:
        description: Subnet is the IP-component of the IPv4 overlay subnetwork. Combined
          with CIDR above.
        type: string
    required:
    - cidr
    - disable
    - mtu
    - subnet
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecDocker:
    properties:
      daemon:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecDockerDaemon'
        description: Daemon provides information about the Docker daemon running on
          TC nodes.
      networkSetup:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecDockerNetworkSetup'
        description: NetworkSetup provides the Docker image to be used for network
          environment setup.
    required:
    - daemon
    - networkSetup
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecDockerDaemon:
    properties:
      cidr:
        description: CIDR is the fully specified subnet used for DOCKER_OPT_BIP.
        type: string
    required:
    - cidr
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecDockerNetworkSetup:
    properties:
      image:
        description: Image provides the Docker image to be used for network environment
          setup.
        type: string
    required:
    - image
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecEtcd:
    properties:
      domain:
        description: Domain is the domain of the etcd service.
        type: string
      port:
        description: Port is the port of the etcd service, usually 2379.
        format: int32
        type: integer
      prefix:
        description: Prefix is the prefix to add to all etcd keys created by Kubernetes.
        type: string
    required:
    - domain
    - port
    - prefix
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtension:
    properties:
      files:
        description: Files is an optional array of files which will be rendered and
          added to the final node ignition.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFile'
        type: array
      units:
        description: Files is an optional array of systemd units which will be rendered
          and added to the final node ignition.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionUnit'
        type: array
      users:
        description: Files is an optional array of users which will be added to the
          final node ignition.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionUser'
        type: array
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFile:
    properties:
      content:
        description: Content is the string containing a file with optional go-template-style
          replacements.
        type: string
      metadata:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFileMetadata'
        description: Metadata is the filesystem metadata of the given file.
    required:
    - content
    - metadata
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFileMetadata:
    properties:
      compression:
        description: Compression allows a file to be passed in as a base64-encoded
          compressed string.
        type: boolean
      owner:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFileMetadataOwner'
        description: Owner is the owner of the file.
      path:
        description: Path is the path of the file.
        type: string
      permissions:
        description: Permissions is the numeric permissions applied to the file.
        format: int32
        type: integer
    required:
    - compression
    - owner
    - path
    - permissions
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFileMetadataOwner:
    properties:
      group:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFileMetadataOwnerGroup'
        description: Group is the group which owns the file.
      user:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFileMetadataOwnerUser'
        description: User is the user which owns the file.
    required:
    - group
    - user
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFileMetadataOwnerGroup:
    properties:
      id:
        description: ID is the GID of the group.
        type: string
      name:
        description: Name is the name of the group.
        type: string
    required:
    - id
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionFileMetadataOwnerUser:
    properties:
      id:
        description: ID is the UID of the user.
        type: string
      name:
        description: Name is the name of the user.
        type: string
    required:
    - id
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionUnit:
    properties:
      content:
        description: Content is the string containing a systemd unit with optional
          go-template-style replacements.
        type: string
      metadata:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionUnitMetadata'
        description: Metadata is the filesystem metadata of the given file.
    required:
    - content
    - metadata
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionUnitMetadata:
    properties:
      enabled:
        description: Enabled indicates that the unit should be enabled by default.
        type: boolean
      name:
        description: Name is the name of the unit on the filesystem and used in systemctl
          commands.
        type: string
    required:
    - enabled
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecExtensionUser:
    properties:
      name:
        description: Name is the name of the user to be added to the node via ignition.
        type: string
      publicKey:
        description: PublicKey is the public key of the user to be added to the node
          via ignition.
        type: string
    required:
    - name
    - publicKey
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecIngress:
    properties:
      disable:
        description: Disable will disable the ingress controller in the TC when true.
        type: boolean
    required:
    - disable
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecKubernetes:
    properties:
      api:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecKubernetesAPI'
        description: API holds information about the desired TC Kubernetes API.
      cloudProvider:
        description: CloudProvider is the provider upon which the cluster is running.
          It is passed to API server as a flag.
        type: string
      dns:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecKubernetesDNS'
        description: DNS hold information about the in-cluster DNS service.
      domain:
        description: Domain is the domain used for services running in the cluster.
          Usually this is "cluster.local".
        type: string
      ipRange:
        description: IPRange is the range of IPs used for pod networking.
        type: string
      kubelet:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecKubernetesKubelet'
        description: Kubelet holds information about the kubelet running on nodes.
      oidc:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecOIDC'
        description: OIDC hold configuration which will be applied to the apiserver
          OIDC flags.
    required:
    - api
    - cloudProvider
    - dns
    - domain
    - kubelet
    - ipRange
    - oidc
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecKubernetesAPI:
    properties:
      domain:
        description: Domain is the domain of the API server.
        type: string
      securePort:
        description: Secure port is the port on which the API will listen.
        format: int32
        type: integer
    required:
    - domain
    - securePort
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecKubernetesDNS:
    properties:
      ip:
        description: IP is the IP of the in-cluster DNS service. Usually this is the
          same as the API server IP with the final component replaced with .10.
        type: string
    required:
    - ip
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecKubernetesKubelet:
    properties:
      domain:
        description: Domain is the domain of the network.
        type: string
    required:
    - domain
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecOIDC:
    properties:
      clientID:
        description: The client ID for the OpenID Connect client, must be set if IssuerURL
          is set.
        type: string
      enabled:
        description: Enabled indicates that the OIDC settings should be applied when
          true.
        type: boolean
      groupsClaim:
        description: If provided, the name of a custom OpenID Connect claim for specifying
          user groups. The claim value is expected to be a string or JSON encoded
          array of strings.
        type: string
      groupsPrefix:
        description: If provided, all groups will be prefixed with this value to prevent
          conflicts with other authentication strategies.
        type: string
      issuerUrl:
        description: The URL of the OpenID issuer, only HTTPS scheme will be accepted.
          If set, it will be used to verify the OIDC JSON Web Token (JWT).
        type: string
      usernameClaim:
        description: The OpenID claim to use as the user name. Note that claims other
          than the default ('sub') is not guaranteed to be unique and immutable.
        type: string
      usernamePrefix:
        description: If provided, all usernames will be prefixed with this value.
          If not provided, username claims other than 'email' are prefixed by the
          issuer URL to avoid clashes. To skip any prefixing, provide the value '-'.
        type: string
    required:
    - enabled
    - clientID
    - issuerUrl
    - usernameClaim
    - usernamePrefix
    - groupsClaim
    - groupsPrefix
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecRegistry:
    properties:
      domain:
        description: Domain is the domain of the registry to be used for pulling core
          component images.
        type: string
      pullProgressDeadline:
        description: Pull progress deadline is a string representing a duration to
          be used as a deadline for pulling images.
        type: string
    required:
    - domain
    - pullProgressDeadline
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionSpecSSO:
    properties:
      publicKey:
        description: PublicKey is the public key of the SSO service.
        type: string
    required:
    - publicKey
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionStatus:
    description: IgnitionStatus holds the rendering result.
    properties:
      dataSecretName:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionStatusSecret'
        description: DataSecret is a reference to the secret containing the rendered
          ignition once created.
      failureMessage:
        description: FailureMessage is a longer message indicating the reason rendering
          failed (if it did).
        type: string
      failureReason:
        description: FailureReason is a short string indicating the reason rendering
          failed (if it did).
        type: string
      ready:
        description: Ready will be true when the referenced secret contains the rendered
          ignition and can be used for creating nodes.
        type: boolean
      verification:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionStatusVerification'
        description: Verification is a hash of the rendered ignition to ensure that
          it has not been changed when loaded as a remote file by the bootstrap ignition.
          See https://coreos.com/ignition/docs/latest/configuration-v2_2.html
    required:
    - dataSecretName
    - failureReason
    - failureMessage
    - ready
    - verification
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionStatusSecret:
    properties:
      name:
        description: Name is the name of the secret containing the rendered ignition.
        type: string
      namespace:
        description: Namespace is the namespace of the secret containing the rendered
          ignition.
        type: string
      resourceVersion:
        description: ResourceVersion is the Kubernetes resource version of the secret.
          Used to detect if the secret has changed, e.g. 12345.
        type: string
    required:
    - name
    - namespace
    - resourceVersion
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionStatusVerification:
    properties:
      algorithm:
        description: The algorithm used for hashing. Must be sha512 for now.
        type: string
      hash:
        description: The content of the full rendered ignition hashed by the corresponding
          algorithm.
        type: string
    required:
    - hash
    - algorithm
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: KVMClusterConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: KVMClusterConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpec:
    properties:
      guest:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpecGuest'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpecVersionBundle'
    required:
    - guest
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpecGuest:
    properties:
      availabilityZones:
        format: int32
        type: integer
      dnsZone:
        description: DNSZone for guest cluster is supplemented with host prefixes
          for specific services such as Kubernetes API or Etcd. In general this DNS
          Zone should start with "k8s" like for example "k8s.cluster.example.com.".
        type: string
      id:
        type: string
      masters:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpecGuestMaster'
        type: array
      name:
        type: string
      owner:
        type: string
      releaseVersion:
        type: string
      versionBundles:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ClusterGuestConfigVersionBundle'
        type: array
      workers:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpecGuestWorker'
        type: array
    required:
    - dnsZone
    - id
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpecGuestMaster:
    properties:
      cpuCores:
        format: int32
        type: integer
      id:
        type: string
      memorySizeGB:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.serialization.Float'
      storageSizeGB:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.serialization.Float'
    required:
    - id
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpecGuestWorker:
    properties:
      cpuCores:
        format: int32
        type: integer
      id:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      memorySizeGB:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.serialization.Float'
      storageSizeGB:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.serialization.Float'
    required:
    - id
    - labels
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfigSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: StorageConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: core.giantswarm.io
      kind: StorageConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfigSpec:
    properties:
      storage:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfigSpecStorage'
    required:
    - storage
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfigSpecStorage:
    properties:
      data:
        additionalProperties:
          type: string
        type: object
    required:
    - data
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.example.v1alpha1.MemcachedConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.example.v1alpha1.MemcachedConfigSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: example.giantswarm.io
      kind: MemcachedConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.example.v1alpha1.MemcachedConfigSpec:
    properties:
      memory:
        description: e.g. 3 Memory is how much RAM to use for item storage. e.g. 4G
        type: string
      replicas:
        description: Replicas is the number of instances of Memcache.
        format: int32
        type: integer
    required:
    - replicas
    - memory
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster:
    description: AWSCluster is the infrastructure provider referenced in upstream
      CAPI Cluster CRs.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterStatus'
        description: Spec part of the AWSCluster resource.
    required:
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: infrastructure.giantswarm.io
      kind: AWSCluster
      version: v1alpha2
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterList:
    description: AWSClusterList is the type returned when listing AWSCLuster resources.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: infrastructure.giantswarm.io
      kind: AWSClusterList
      version: v1alpha2
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpec:
    description: AWSClusterSpec is the spec part for the AWSCluster resource.
    properties:
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecCluster'
        description: Cluster specification details.
      provider:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecProvider'
        description: Provider-specific configuration details.
    required:
    - cluster
    - provider
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecCluster:
    description: AWSClusterSpecCluster provides cluster specification details.
    properties:
      description:
        description: User-friendly description that should explain the purpose of
          the cluster to humans.
        type: string
      dns:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecClusterDNS'
        description: DNS configuration details.
      kubeProxy:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecClusterKubeProxy'
        description: Flags passed to kube-proxy on each node.
      oidc:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecClusterOIDC'
        description: Configuration for OpenID Connect (OIDC) authentication.
    required:
    - description
    - dns
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecClusterDNS:
    description: AWSClusterSpecClusterDNS holds DNS configuration details.
    properties:
      domain:
        type: string
    required:
    - domain
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecClusterKubeProxy:
    description: AWSClusterSpecClusterKubeProxy describes values passed to the kube-proxy
      running in a tenant cluster.
    properties:
      conntrackMaxPerCore:
        description: Maximum number of NAT connections to track per CPU core (0 for
          default). Passed to kube-proxy as --conntrack-max-per-core.
        format: int32
        type: integer
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecClusterOIDC:
    description: AWSClusterSpecClusterOIDC holds configuration for OpenID Connect
      (OIDC) authentication.
    properties:
      claims:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecClusterOIDCClaims'
      clientID:
        type: string
      issuerURL:
        type: string
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecClusterOIDCClaims:
    description: AWSClusterSpecClusterOIDCClaims defines OIDC claims.
    properties:
      groups:
        type: string
      username:
        type: string
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecProvider:
    description: AWSClusterSpecProvider holds some AWS details.
    properties:
      credentialSecret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecProviderCredentialSecret'
        description: Location of a secret providing the ARN of AWS IAM identity to
          use with this cluster.
      master:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecProviderMaster'
        description: Master holds master node configuration details. Note that this
          attribute is being deprecated. The master node specification can now be
          found in the AWSControlPlane resource.
      pods:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecProviderPods'
        description: Pod network configuration.
      region:
        description: AWS region the cluster is to be running in.
        type: string
    required:
    - credentialSecret
    - region
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecProviderCredentialSecret:
    description: AWSClusterSpecProviderCredentialSecret details how to chose the AWS
      IAM identity ARN to use with this cluster.
    properties:
      name:
        description: Name of the provider credential resoure.
        type: string
      namespace:
        description: Kubernetes namespace holding the provider credential.
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecProviderMaster:
    description: AWSClusterSpecProviderMaster holds master node configuration details.
    properties:
      availabilityZone:
        description: AWS availability zone to place the master node in.
        type: string
      instanceType:
        description: AWS EC2 instance type to use for the master node.
        type: string
    required:
    - availabilityZone
    - instanceType
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterSpecProviderPods:
    description: AWSClusterSpecProviderPods Pod network configuration.
    properties:
      cidrBlock:
        description: IPv4 address block used for pods, in CIDR notation.
        type: string
      externalSNAT:
        description: When set to false, pod connections outside the VPC where the
          pod is located will be NATed through the node primary IP. When set to true,
          all connections will use the pod IP.
        type: boolean
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterStatus:
    description: AWSClusterStatus holds status information about the cluster, populated
      once the cluster is in creation or created.
    properties:
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.CommonClusterStatus'
        description: Cluster-specific status details, including conditions and versions.
      provider:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterStatusProvider'
        description: Provider-specific status details.
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterStatusProvider:
    description: AWSClusterStatusProvider holds provider-specific status details.
    properties:
      network:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterStatusProviderNetwork'
        description: Network-specific configuration details
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterStatusProviderNetwork:
    description: AWSClusterStatusProviderNetwork holds network details.
    properties:
      cidr:
        description: IPv4 address block used by the tenant cluster nodes, in CIDR
          notation.
        type: string
      vpcID:
        description: Identifier of the AWS Virtual Private Cloud (VPC) of the tenant
          cluster, e.g. `vpc-1234567890abcdef0`.
        type: string
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane:
    description: AWSControlPlane is the infrastructure provider referenced in ControlPlane
      CRs. Represents the master nodes (also called Control Plane) of a tenant cluster
      on AWS. Reconciled by aws-operator.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlaneSpec'
        description: Specification part of the resource.
    required:
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: infrastructure.giantswarm.io
      kind: AWSControlPlane
      version: v1alpha2
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlaneList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: infrastructure.giantswarm.io
      kind: AWSControlPlaneList
      version: v1alpha2
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlaneSpec:
    properties:
      availabilityZones:
        description: Configures which AWS availability zones to use by master nodes,
          as a list of availability zone names like e. g. `eu-central-1c`. We support
          either 1 or 3 availability zones.
        items:
          type: string
        type: array
      instanceType:
        description: EC2 instance type identifier to use for the master node(s).
        type: string
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment:
    description: AWSMachineDeployment is the infrastructure provider referenced in
      Kubernetes Cluster API MachineDeployment resources. It contains provider-specific
      specification and status for a node pool. In use on AWS since Giant Swarm release
      v10.x.x and reconciled by aws-operator.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpec'
        description: Contains the specification.
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentStatus'
        description: Holds status information.
    required:
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: infrastructure.giantswarm.io
      kind: AWSMachineDeployment
      version: v1alpha2
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: infrastructure.giantswarm.io
      kind: AWSMachineDeploymentList
      version: v1alpha2
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpec:
    properties:
      nodePool:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecNodePool'
        description: Specifies details of node pool and the worker nodes it should
          contain.
      provider:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecProvider'
        description: Contains AWS specific details.
    required:
    - nodePool
    - provider
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecInstanceDistribution:
    properties:
      onDemandBaseCapacity:
        description: Base capacity of on-demand instances to use for worker nodes
          in this pool. When this larger than 0, this value defines a number of worker
          nodes that will be created using on-demand EC2 instances, regardless of
          the value configured as `onDemandPercentageAboveBaseCapacity`.
        format: int32
        type: integer
      onDemandPercentageAboveBaseCapacity:
        description: Percentage of on-demand EC2 instances to use for worker nodes,
          instead of spot instances, for instances exceeding `onDemandBaseCapacity`.
          For example, to have half of the worker nodes use spot instances and half
          use on-demand, set this value to 50.
        format: int32
        type: integer
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecNodePool:
    properties:
      description:
        description: User-friendly name or description of the purpose of the node
          pool.
        type: string
      machine:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecNodePoolMachine'
        description: Specification of the worker node machine.
      scaling:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecNodePoolScaling'
        description: Scaling settings for the node pool, configuring the cluster-autoscaler
          determining the number of nodes to have in this node pool.
    required:
    - description
    - machine
    - scaling
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecNodePoolMachine:
    properties:
      dockerVolumeSizeGB:
        description: 'Size of the volume reserved for Docker images and overlay file
          systems of Docker containers. Unit: 1 GB = 1,000,000,000 Bytes.'
        format: int32
        type: integer
      kubeletVolumeSizeGB:
        description: 'Size of the volume reserved for the kubelet, which can be used
          by Pods via volumes of type EmptyDir. Unit: 1 GB = 1,000,000,000 Bytes.'
        format: int32
        type: integer
    required:
    - dockerVolumeSizeGB
    - kubeletVolumeSizeGB
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecNodePoolScaling:
    properties:
      max:
        description: Maximum number of worker nodes in this node pool.
        format: int32
        type: integer
      min:
        description: Minimum number of worker nodes in this node pool.
        format: int32
        type: integer
    required:
    - max
    - min
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecProvider:
    properties:
      availabilityZones:
        description: Name(s) of the availability zone(s) to use for worker nodes.
          Using multiple availability zones results in higher resilience but can also
          result in higher cost due to network traffic between availability zones.
        items:
          type: string
        type: array
      instanceDistribution:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecInstanceDistribution'
        description: Settings defining the distribution of on-demand and spot instances
          in the node pool.
      worker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecProviderWorker'
        description: Specification of worker nodes.
    required:
    - availabilityZones
    - worker
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentSpecProviderWorker:
    properties:
      instanceType:
        description: AWS EC2 instance type name to use for the worker nodes in this
          node pool.
        type: string
      useAlikeInstanceTypes:
        description: If true, certain instance types with specs similar to instanceType
          will be used.
        type: boolean
    required:
    - instanceType
    - useAlikeInstanceTypes
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentStatus:
    properties:
      provider:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentStatusProvider'
        description: Status specific to AWS.
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentStatusProvider:
    properties:
      worker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentStatusProviderWorker'
        description: Status of worker nodes.
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentStatusProviderWorker:
    properties:
      instanceTypes:
        description: AWS EC2 instance types used for the worker nodes in this node
          pool.
        items:
          type: string
        type: array
      spotInstances:
        description: Number of EC2 spot instances used in this node pool.
        format: int32
        type: integer
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.CommonClusterStatus:
    description: CommonClusterStatus is shared type to contain provider independent
      cluster status information.
    properties:
      conditions:
        description: One or several conditions that are currently applicable to the
          cluster.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.CommonClusterStatusCondition'
        type: array
      id:
        description: Identifier of the cluster.
        type: string
      versions:
        description: Release versions the cluster used so far.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.CommonClusterStatusVersion'
        type: array
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.CommonClusterStatusCondition:
    description: CommonClusterStatusCondition explains the current condition(s) of
      the cluster.
    properties:
      condition:
        description: Condition string, e. g. `Creating`, `Created`, `Upgraded`.
        type: string
      lastTransitionTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Time the condition occurred.
    required:
    - lastTransitionTime
    - condition
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.CommonClusterStatusVersion:
    description: CommonClusterStatusVersion informs which aws-operator version was/responsible
      for this cluster.
    properties:
      lastTransitionTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Time the cluster assumed the given version.
      version:
        description: The aws-operator version responsible for handling the cluster.
        type: string
    required:
    - lastTransitionTime
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane:
    description: The G8sControlPlane resource defines the Control Plane nodes (Kubernetes
      master nodes) of a Giant Swarm tenant cluster. It is reconciled by cluster-operator.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlaneSpec'
        description: Specification part.
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlaneStatus'
        description: Status information.
    required:
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: infrastructure.giantswarm.io
      kind: G8sControlPlane
      version: v1alpha2
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlaneList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: infrastructure.giantswarm.io
      kind: G8sControlPlaneList
      version: v1alpha2
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlaneSpec:
    properties:
      infrastructureRef:
        $ref: '#/definitions/io.k8s.api.core.v1.ObjectReference'
        description: Reference to a provider-specific resource. On AWS, this would
          be of kind [AWSControlPlane](https://docs.giantswarm.io/reference/cp-k8s-api/awscontrolplanes.infrastructure.giantswarm.io/).
      replicas:
        description: Number of master nodes.
        format: int32
        type: integer
    required:
    - infrastructureRef
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlaneStatus:
    description: G8sControlPlaneStatus defines the observed state of G8sControlPlane.
    properties:
      readyReplicas:
        description: Total number of fully running and ready control plane machines.
        format: int32
        type: integer
      replicas:
        description: Total number of non-terminated machines targeted by this control
          plane (their labels match the selector).
        format: int32
        type: integer
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: provider.giantswarm.io
      kind: AWSConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: provider.giantswarm.io
      kind: AWSConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpec:
    properties:
      aws:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWS'
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.Cluster'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecVersionBundle'
    required:
    - cluster
    - aws
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWS:
    properties:
      api:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSAPI'
      availabilityZones:
        description: |-
          AvailabilityZones is the number of AWS availability zones used to spread the tenant cluster's worker nodes across. There are limitations on availability zone settings due to binary IP range splitting and provider specific region capabilities. When for instance choosing 3 availability zones, the configured IP range will be split into 4 ranges and thus one of it will not be able to be utilized. Such limitations have to be considered when designing the network topology and configuring tenant cluster HA via AvailabilityZones.

          The selection and usage of the actual availability zones for the created tenant cluster is randomized. In case there are 4 availability zones provided in the used region and the user selects 2 availability zones, the actually used availability zones in which tenant cluster workload is put into will tend to be different across tenant cluster creations. This is done in order to provide more HA during single availability zone failures. In case a specific availability zone fails, not all tenant clusters will be affected due to the described selection process.
        format: int32
        type: integer
      az:
        description: |2-


              https://github.com/giantswarm/giantswarm/issues/4507
        type: string
      credentialSecret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.CredentialSecret'
      etcd:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSEtcd'
      hostedZones:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSHostedZones'
        description: "HostedZones is AWS hosted zones names in the host cluster account.
          For each zone there will be \"CLUSTER_ID.k8s\" NS record created in the
          host cluster account. Then for each created NS record there will be a zone
          created in the guest account. After that component specific records under
          those zones:\n\t- api.CLUSTER_ID.k8s.{{ .Spec.AWS.HostedZones.API.Name }}\n\t-
          etcd.CLUSTER_ID.k8s.{{ .Spec.AWS.HostedZones.Etcd.Name }}\n\t- ingress.CLUSTER_ID.k8s.{{
          .Spec.AWS.HostedZones.Ingress.Name }}\n\t- *.CLUSTER_ID.k8s.{{ .Spec.AWS.HostedZones.Ingress.Name
          }}"
      ingress:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSIngress'
      masters:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSNode'
        type: array
      region:
        type: string
      vpc:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSVPC'
      workers:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSNode'
        type: array
    required:
    - api
    - az
    - availabilityZones
    - credentialSecret
    - etcd
    - hostedZones
    - ingress
    - masters
    - region
    - vpc
    - workers
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSAPI:
    description: AWSConfigSpecAWSAPI deprecated since aws-operator v12 resources.
    properties:
      elb:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSAPIELB'
      hostedZones:
        type: string
    required:
    - hostedZones
    - elb
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSAPIELB:
    description: AWSConfigSpecAWSAPIELB deprecated since aws-operator v12 resources.
    properties:
      idleTimeoutSeconds:
        format: int32
        type: integer
    required:
    - idleTimeoutSeconds
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSEtcd:
    description: AWSConfigSpecAWSEtcd deprecated since aws-operator v12 resources.
    properties:
      elb:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSEtcdELB'
      hostedZones:
        type: string
    required:
    - hostedZones
    - elb
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSEtcdELB:
    description: AWSConfigSpecAWSEtcdELB deprecated since aws-operator v12 resources.
    properties:
      idleTimeoutSeconds:
        format: int32
        type: integer
    required:
    - idleTimeoutSeconds
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSHostedZones:
    properties:
      api:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSHostedZonesZone'
      etcd:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSHostedZonesZone'
      ingress:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSHostedZonesZone'
    required:
    - api
    - etcd
    - ingress
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSHostedZonesZone:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSIngress:
    description: AWSConfigSpecAWSIngress deprecated since aws-operator v12 resources.
    properties:
      elb:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSIngressELB'
      hostedZones:
        type: string
    required:
    - hostedZones
    - elb
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSIngressELB:
    description: AWSConfigSpecAWSIngressELB deprecated since aws-operator v12 resources.
    properties:
      idleTimeoutSeconds:
        format: int32
        type: integer
    required:
    - idleTimeoutSeconds
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSNode:
    properties:
      dockerVolumeSizeGB:
        format: int32
        type: integer
      imageID:
        type: string
      instanceType:
        type: string
    required:
    - imageID
    - instanceType
    - dockerVolumeSizeGB
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecAWSVPC:
    properties:
      cidr:
        type: string
      peerId:
        type: string
      privateSubnetCidr:
        type: string
      publicSubnetCidr:
        type: string
      routeTableNames:
        items:
          type: string
        type: array
    required:
    - cidr
    - privateSubnetCidr
    - publicSubnetCidr
    - routeTableNames
    - peerId
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatus:
    properties:
      aws:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWS'
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusCluster'
    required:
    - aws
    - cluster
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWS:
    properties:
      autoScalingGroup:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAutoScalingGroup'
      availabilityZones:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAvailabilityZone'
        type: array
    required:
    - availabilityZones
    - autoScalingGroup
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAutoScalingGroup:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAvailabilityZone:
    properties:
      name:
        type: string
      subnet:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAvailabilityZoneSubnet'
    required:
    - name
    - subnet
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAvailabilityZoneSubnet:
    properties:
      private:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAvailabilityZoneSubnetPrivate'
      public:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAvailabilityZoneSubnetPublic'
    required:
    - private
    - public
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAvailabilityZoneSubnetPrivate:
    properties:
      cidr:
        type: string
    required:
    - cidr
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigStatusAWSAvailabilityZoneSubnetPublic:
    properties:
      cidr:
        type: string
    required:
    - cidr
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: provider.giantswarm.io
      kind: AzureConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: provider.giantswarm.io
      kind: AzureConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpec:
    properties:
      azure:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzure'
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.Cluster'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecVersionBundle'
    required:
    - cluster
    - azure
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzure:
    properties:
      availabilityZones:
        items:
          format: int32
          type: integer
        type: array
      credentialSecret:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.CredentialSecret'
      dnsZones:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureDNSZones'
      masters:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureNode'
        type: array
      virtualNetwork:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureVirtualNetwork'
      workers:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureNode'
        type: array
    required:
    - availabilityZones
    - credentialSecret
    - dnsZones
    - masters
    - virtualNetwork
    - workers
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureDNSZones:
    description: AzureConfigSpecAzureDNSZones contains the DNS Zones of the cluster.
    properties:
      api:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureDNSZonesDNSZone'
        description: API is the DNS Zone for the Kubernetes API.
      etcd:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureDNSZonesDNSZone'
        description: Etcd is the DNS Zone for the etcd cluster.
      ingress:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureDNSZonesDNSZone'
        description: Ingress is the DNS Zone for the Ingress resource, used for customer
          traffic.
    required:
    - api
    - etcd
    - ingress
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureDNSZonesDNSZone:
    description: AzureConfigSpecAzureDNSZonesDNSZone points to a DNS Zone in Azure.
    properties:
      name:
        description: Name is the name of the zone.
        type: string
      resourceGroup:
        description: ResourceGroup is the resource group of the zone.
        type: string
    required:
    - resourceGroup
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureNode:
    properties:
      dockerVolumeSizeGB:
        description: DockerVolumeSizeGB is the size of a volume mounted to /var/lib/docker.
        format: int32
        type: integer
      kubeletVolumeSizeGB:
        description: KubeletVolumeSizeGB is the size of a volume mounted to /var/lib/kubelet.
        format: int32
        type: integer
      vmSize:
        description: VMSize is the master vm size (e.g. Standard_A1)
        type: string
    required:
    - vmSize
    - dockerVolumeSizeGB
    - kubeletVolumeSizeGB
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecAzureVirtualNetwork:
    properties:
      calicoSubnetCIDR:
        description: CalicoSubnetCIDR is the CIDR for the calico subnet. It has to
          be also a worker subnet (Azure limitation).
        type: string
      cidr:
        description: CIDR is the CIDR for the Virtual Network.
        type: string
      masterSubnetCIDR:
        description: |-
          is deleted. MasterSubnetCIDR is the CIDR for the master subnet.

              https://github.com/giantswarm/giantswarm/issues/4358
        type: string
      workerSubnetCIDR:
        description: WorkerSubnetCIDR is the CIDR for the worker subnet.
        type: string
    required:
    - cidr
    - masterSubnetCIDR
    - workerSubnetCIDR
    - calicoSubnetCIDR
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigStatus:
    properties:
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusCluster'
      provider:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigStatusProvider'
    required:
    - cluster
    - provider
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigStatusProvider:
    properties:
      availabilityZones:
        items:
          format: int32
          type: integer
        type: array
      ingress:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigStatusProviderIngress'
    required:
    - ingress
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigStatusProviderIngress:
    properties:
      loadBalancer:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigStatusProviderIngressLoadBalancer'
    required:
    - loadBalancer
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigStatusProviderIngressLoadBalancer:
    properties:
      publicIPName:
        type: string
    required:
    - publicIPName
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.Cluster:
    properties:
      calico:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterCalico'
      customer:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterCustomer'
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterDocker'
      etcd:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterEtcd'
      id:
        type: string
      kubernetes:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetes'
      masters:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterNode'
        type: array
      scaling:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterScaling'
      version:
        description: Version is DEPRECATED and should just be dropped.
        type: string
      workers:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterNode'
        type: array
    required:
    - calico
    - customer
    - docker
    - etcd
    - id
    - kubernetes
    - masters
    - scaling
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterCalico:
    properties:
      cidr:
        format: int32
        type: integer
      mtu:
        format: int32
        type: integer
      subnet:
        type: string
    required:
    - cidr
    - mtu
    - subnet
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterCustomer:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterDocker:
    properties:
      daemon:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterDockerDaemon'
    required:
    - daemon
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterDockerDaemon:
    properties:
      cidr:
        type: string
    required:
    - cidr
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterEtcd:
    properties:
      altNames:
        type: string
      domain:
        type: string
      port:
        format: int32
        type: integer
      prefix:
        type: string
    required:
    - altNames
    - domain
    - port
    - prefix
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetes:
    properties:
      api:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesAPI'
      cloudProvider:
        type: string
      dns:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesDNS'
      domain:
        type: string
      ingressController:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesIngressController'
      kubelet:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesKubelet'
      networkSetup:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesNetworkSetup'
      ssh:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesSSH'
    required:
    - api
    - cloudProvider
    - dns
    - domain
    - ingressController
    - kubelet
    - networkSetup
    - ssh
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesAPI:
    properties:
      clusterIPRange:
        type: string
      domain:
        type: string
      securePort:
        format: int32
        type: integer
    required:
    - clusterIPRange
    - domain
    - securePort
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesDNS:
    properties:
      ip:
        type: string
    required:
    - ip
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesIngressController:
    properties:
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesIngressControllerDocker'
      domain:
        type: string
      insecurePort:
        format: int32
        type: integer
      securePort:
        format: int32
        type: integer
      wildcardDomain:
        type: string
    required:
    - docker
    - domain
    - wildcardDomain
    - insecurePort
    - securePort
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesIngressControllerDocker:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesKubelet:
    properties:
      altNames:
        type: string
      domain:
        type: string
      labels:
        type: string
      port:
        format: int32
        type: integer
    required:
    - altNames
    - domain
    - labels
    - port
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesNetworkSetup:
    properties:
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesNetworkSetupDocker'
      kubeProxy:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesNetworkSetupKubeProxy'
    required:
    - docker
    - kubeProxy
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesNetworkSetupDocker:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesNetworkSetupKubeProxy:
    description: ClusterKubernetesNetworkSetupKubeProxy describes values passed to
      the kube-proxy running in a tenant cluster.
    properties:
      conntrackMaxPerCore:
        description: Maximum number of NAT connections to track per CPU core (0 to
          leave the limit as-is and ignore conntrack-min). Passed to kube-proxy as
          --conntrack-max-per-core.
        format: int32
        type: integer
    required:
    - conntrackMaxPerCore
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesSSH:
    properties:
      userList:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesSSHUser'
        type: array
    required:
    - userList
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterKubernetesSSHUser:
    properties:
      name:
        type: string
      publicKey:
        type: string
    required:
    - name
    - publicKey
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterNode:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.ClusterScaling:
    properties:
      max:
        description: Max defines maximum number of worker nodes guest cluster is allowed
          to have.
        format: int32
        type: integer
      min:
        description: Min defines minimum number of worker nodes required to be present
          in guest cluster.
        format: int32
        type: integer
    required:
    - max
    - min
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.CredentialSecret:
    properties:
      name:
        type: string
      namespace:
        type: string
    required:
    - name
    - namespace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: provider.giantswarm.io
      kind: KVMConfig
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: provider.giantswarm.io
      kind: KVMConfigList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpec:
    properties:
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.Cluster'
      kvm:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVM'
      versionBundle:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecVersionBundle'
    required:
    - cluster
    - kvm
    - versionBundle
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVM:
    properties:
      endpointUpdater:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMEndpointUpdater'
      k8sKVM:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMK8sKVM'
      masters:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNode'
        type: array
      network:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNetwork'
      nodeController:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNodeController'
        description: NOTE THIS IS DEPRECATED
      portMappings:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMPortMappings'
        type: array
      workers:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNode'
        type: array
    required:
    - endpointUpdater
    - k8sKVM
    - masters
    - network
    - nodeController
    - portMappings
    - workers
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMEndpointUpdater:
    properties:
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMEndpointUpdaterDocker'
    required:
    - docker
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMEndpointUpdaterDocker:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMK8sKVM:
    properties:
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMK8sKVMDocker'
      storageType:
        type: string
    required:
    - docker
    - storageType
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMK8sKVMDocker:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNetwork:
    properties:
      flannel:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNetworkFlannel'
    required:
    - flannel
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNetworkFlannel:
    properties:
      vni:
        format: int32
        type: integer
    required:
    - vni
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNode:
    properties:
      cpus:
        format: int32
        type: integer
      disk:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.serialization.Float'
      dockerVolumeSizeGB:
        format: int32
        type: integer
      memory:
        type: string
    required:
    - cpus
    - disk
    - memory
    - dockerVolumeSizeGB
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNodeController:
    description: NOTE THIS IS DEPRECATED
    properties:
      docker:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNodeControllerDocker'
    required:
    - docker
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMNodeControllerDocker:
    description: NOTE THIS IS DEPRECATED
    properties:
      image:
        type: string
    required:
    - image
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecKVMPortMappings:
    properties:
      name:
        type: string
      nodePort:
        format: int32
        type: integer
      targetPort:
        format: int32
        type: integer
    required:
    - name
    - nodePort
    - targetPort
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigSpecVersionBundle:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigStatus:
    properties:
      cluster:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusCluster'
      kvm:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigStatusKVM'
    required:
    - cluster
    - kvm
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigStatusKVM:
    properties:
      nodeIndexes:
        additionalProperties:
          format: int32
          type: integer
        description: NodeIndexes is a map from nodeID -> nodeIndex. This is used to
          create deterministic iSCSI initiator names.
        type: object
    required:
    - nodeIndexes
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusCluster:
    properties:
      conditions:
        description: Conditions is a list of status information expressing the current
          conditional state of a guest cluster. This may reflect the status of the
          guest cluster being updating or being up to date.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterCondition'
        type: array
      network:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterNetwork'
      nodes:
        description: Nodes is a list of guest cluster node information reflecting
          the current state of the guest cluster nodes.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterNode'
        type: array
      resources:
        description: Resources is a list of arbitrary conditions of operatorkit resource
          implementations.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterResource'
        type: array
      scaling:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterScaling'
      versions:
        description: Versions is a list that acts like a historical track record of
          versions a guest cluster went through. A version is only added to the list
          as soon as the guest cluster successfully migrated to the version added
          here.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterVersion'
        type: array
    required:
    - network
    - scaling
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterCondition:
    description: StatusClusterCondition expresses the conditions in which a guest
      cluster may is.
    properties:
      lastTransitionTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: LastTransitionTime is the last time the condition transitioned
          from one status to another.
      status:
        description: Status may be True, False or Unknown.
        type: string
      type:
        description: Type may be Creating, Created, Scaling, Scaled, Draining, Drained,
          Updating, Updated, Deleting, Deleted.
        type: string
    required:
    - status
    - type
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterNetwork:
    description: StatusClusterNetwork expresses the network segment that is allocated
      for a guest cluster.
    properties:
      cidr:
        type: string
    required:
    - cidr
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterNode:
    description: StatusClusterNode holds information about a guest cluster node.
    properties:
      labels:
        additionalProperties:
          type: string
        description: Labels contains the kubernetes labels for corresponding node.
        type: object
      lastTransitionTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: LastTransitionTime is the last time the condition transitioned
          from one status to another.
      name:
        description: Name referrs to a tenant cluster node name.
        type: string
      version:
        description: Version referrs to the version used by the node as mandated by
          the provider operator.
        type: string
    required:
    - name
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterResource:
    description: Resource is structure holding arbitrary conditions of operatorkit
      resource implementations. Imagine an operator implements an instance resource.
      This resource may operates sequentially but has to operate based on a certain
      system state it manages. So it tracks the status as needed here specific to
      its own implementation and means in order to fulfil its premise.
    properties:
      conditions:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterResourceCondition'
        type: array
      name:
        type: string
    required:
    - name
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterResourceCondition:
    description: StatusClusterResourceCondition expresses the conditions in which
      an operatorkit resource may is.
    properties:
      lastTransitionTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: LastTransitionTime is the last time the condition transitioned
          from one status to another.
      status:
        description: Status may be True, False or Unknown.
        type: string
      type:
        description: Type may be anything an operatorkit resource may define.
        type: string
    required:
    - status
    - type
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterScaling:
    description: StatusClusterScaling expresses the current status of desired number
      of worker nodes in guest cluster.
    properties:
      desiredCapacity:
        format: int32
        type: integer
    required:
    - desiredCapacity
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.StatusClusterVersion:
    description: StatusClusterVersion expresses the versions in which a guest cluster
      was and may still be.
    properties:
      date:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: |-
          This can be removed ones the new properties are properly used in all tenant clusters.

              https://github.com/giantswarm/giantswarm/issues/3988
      lastTransitionTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: LastTransitionTime is the last time the condition transitioned
          from one status to another.
      semver:
        description: Semver is some semver version, e.g. 1.0.0.
        type: string
    required:
    - semver
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release:
    description: Release is a Kubernetes resource (CR) representing a Giant Swarm
      tenant cluster release.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.ReleaseSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: release.giantswarm.io
      kind: Release
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.ReleaseList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: release.giantswarm.io
      kind: ReleaseList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.ReleaseSpec:
    properties:
      apps:
        description: Apps describes apps used in this release.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.ReleaseSpecApp'
        type: array
      components:
        description: Components describes components used in this release.
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.ReleaseSpecComponent'
        type: array
      date:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Date that the release became active.
      state:
        description: 'State indicates the availability of the release: deprecated,
          active, or wip.'
        type: string
    required:
    - apps
    - components
    - date
    - state
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.ReleaseSpecApp:
    properties:
      componentVersion:
        description: Version of the upstream component used in the app.
        type: string
      name:
        description: Name of the app.
        type: string
      version:
        description: Version of the app.
        type: string
    required:
    - name
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.ReleaseSpecComponent:
    properties:
      name:
        description: Name of the component.
        type: string
      version:
        description: Version of the component.
        type: string
    required:
    - name
    - version
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.OrganizationSpec'
    required:
    - metadata
    - spec
    type: object
    x-kubernetes-group-version-kind:
    - group: security.giantswarm.io
      kind: Organization
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.OrganizationList:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: security.giantswarm.io
      kind: OrganizationList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.OrganizationSpec:
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolSpec'
      status:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolStatus'
    required:
    - metadata
    - spec
    - status
    type: object
    x-kubernetes-group-version-kind:
    - group: tooling.giantswarm.io
      kind: AzureTool
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolList:
    description: AzureToolList is the type returned when listing AzureToolList resources.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        items:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    required:
    - metadata
    - items
    type: object
    x-kubernetes-group-version-kind:
    - group: tooling.giantswarm.io
      kind: AzureToolList
      version: v1alpha1
  com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolSpec:
    properties:
      workspace:
        $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolWorkspace'
        description: Workspace refers to the Azure Log Analytics Workspace.
    required:
    - workspace
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolStatus:
    properties:
      workspace_status:
        type: string
    required:
    - workspace_status
    type: object
  com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolWorkspace:
    properties:
      id:
        description: ID is the Workspace ID.
        type: string
      mode:
        description: Mode is the mode that the Workspace is running in.
        type: string
    required:
    - id
    - mode
    type: object
  com.github.giantswarm.apiextensions.pkg.serialization.Float:
    format: double
    type: number
  io.k8s.api.core.v1.ObjectReference:
    description: ObjectReference contains enough information to let you inspect or
      modify the referred object.
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      fieldPath:
        description: 'If referring to a piece of an object instead of an entire object,
          this string should contain a valid JSON/Go field access statement, such
          as desiredState.manifest.containers[2]. For example, if the object reference
          is to a container within a pod, this would take on a value like: "spec.containers{name}"
          (where "name" refers to the name of the container that triggered the event)
          or if no container name is specified "spec.containers[2]" (container with
          index 2 in this pod). This syntax is chosen only to have some well-defined
          way of referencing a part of an object.'
        type: string
      kind:
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        type: string
      namespace:
        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
        type: string
      resourceVersion:
        description: 'Specific resourceVersion to which this reference is made, if
          any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type: string
      uid:
        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
        type: string
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup:
    description: APIGroup contains the name, the supported versions, and the preferred
      version of a group.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: name is the name of the group.
        type: string
      preferredVersion:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery'
        description: preferredVersion is the version preferred by the API server,
          which probably is the storage version.
      serverAddressByClientCIDRs:
        description: 'a map of client CIDR to server address that is serving this
          group. This is to help clients reach servers in the most network-efficient
          way possible. Clients can use the appropriate server address as per the
          CIDR that they match. In case of multiple matches, clients should use the
          longest matching CIDR. The server returns only those CIDRs that it thinks
          that the client can match. For example: the master will return an internal
          IP CIDR only, if the client reaches the server using an internal IP. Server
          looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr
          (in that order) to get the client IP.'
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR'
        type: array
      versions:
        description: versions are the versions supported in this group.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery'
        type: array
    required:
    - name
    - versions
    type: object
    x-kubernetes-group-version-kind:
    - group: ""
      kind: APIGroup
      version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList:
    description: APIGroupList is a list of APIGroup, to allow clients to discover
      the API at /apis.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      groups:
        description: groups is a list of APIGroup.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        type: array
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
    required:
    - groups
    type: object
    x-kubernetes-group-version-kind:
    - group: ""
      kind: APIGroupList
      version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.APIResource:
    description: APIResource specifies the name of a resource and whether it is namespaced.
    properties:
      categories:
        description: categories is a list of the grouped resources this resource belongs
          to (e.g. 'all')
        items:
          type: string
        type: array
      group:
        description: 'group is the preferred group of the resource.  Empty implies
          the group of the containing resource list. For subresources, this may have
          a different value, for example: Scale".'
        type: string
      kind:
        description: kind is the kind for the resource (e.g. 'Foo' is the kind for
          a resource 'foo')
        type: string
      name:
        description: name is the plural name of the resource.
        type: string
      namespaced:
        description: namespaced indicates if a resource is namespaced or not.
        type: boolean
      shortNames:
        description: shortNames is a list of suggested short names of the resource.
        items:
          type: string
        type: array
      singularName:
        description: singularName is the singular name of the resource.  This allows
          clients to handle plural and singular opaquely. The singularName is more
          correct for reporting status on a single item and both singular and plural
          are allowed from the kubectl CLI interface.
        type: string
      storageVersionHash:
        description: The hash value of the storage version, the version this resource
          is converted to when written to the data store. Value must be treated as
          opaque by clients. Only equality comparison on the value is valid. This
          is an alpha feature and may change or be removed in the future. The field
          is populated by the apiserver only if the StorageVersionHash feature gate
          is enabled. This field will remain optional even if it graduates.
        type: string
      verbs:
        description: verbs is a list of supported kube verbs (this includes get, list,
          watch, create, update, patch, delete, deletecollection, and proxy)
        items:
          type: string
        type: array
      version:
        description: 'version is the preferred version of the resource.  Empty implies
          the version of the containing resource list For subresources, this may have
          a different value, for example: v1 (while inside a v1beta1 version of the
          core resource''s group)".'
        type: string
    required:
    - name
    - singularName
    - namespaced
    - kind
    - verbs
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList:
    description: APIResourceList is a list of APIResource, it is used to expose the
      name of the resources supported in a specific group and version, and if the
      resource is namespaced.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      groupVersion:
        description: groupVersion is the group and version this APIResourceList is
          for.
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      resources:
        description: resources contains the name of the resources and if they are
          namespaced.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource'
        type: array
    required:
    - groupVersion
    - resources
    type: object
    x-kubernetes-group-version-kind:
    - group: ""
      kind: APIResourceList
      version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions:
    description: DeleteOptions may be provided when deleting an API object.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      dryRun:
        description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        items:
          type: string
        type: array
      gracePeriodSeconds:
        description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        format: int64
        type: integer
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      orphanDependents:
        description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        type: boolean
      preconditions:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions'
        description: Must be fulfilled before a deletion is carried out. If not possible,
          a 409 Conflict status will be returned.
      propagationPolicy:
        description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        type: string
    type: object
    x-kubernetes-group-version-kind:
    - group: ""
      kind: DeleteOptions
      version: v1
    - group: application.giantswarm.io
      kind: DeleteOptions
      version: v1alpha1
    - group: backup.giantswarm.io
      kind: DeleteOptions
      version: v1alpha1
    - group: core.giantswarm.io
      kind: DeleteOptions
      version: v1alpha1
    - group: example.giantswarm.io
      kind: DeleteOptions
      version: v1alpha1
    - group: infrastructure.giantswarm.io
      kind: DeleteOptions
      version: v1alpha2
    - group: provider.giantswarm.io
      kind: DeleteOptions
      version: v1alpha1
    - group: release.giantswarm.io
      kind: DeleteOptions
      version: v1alpha1
    - group: security.giantswarm.io
      kind: DeleteOptions
      version: v1alpha1
    - group: tooling.giantswarm.io
      kind: DeleteOptions
      version: v1alpha1
  io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1:
    description: |-
      FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

      Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

      The exact format is defined in sigs.k8s.io/structured-merge-diff
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery:
    description: GroupVersion contains the "group/version" and "version" string of
      a version. It is made a struct to keep extensibility.
    properties:
      groupVersion:
        description: groupVersion specifies the API group and version in the form
          "group/version"
        type: string
      version:
        description: version specifies the version in the form of "version". This
          is to save the clients the trouble of splitting the GroupVersion.
        type: string
    required:
    - groupVersion
    - version
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta:
    description: ListMeta describes metadata that synthetic resources must have, including
      lists and various status objects. A resource may have only one of {ObjectMeta,
      ListMeta}.
    properties:
      continue:
        description: continue may be set if the user set a limit on the number of
          items returned, and indicates that the server has more data available. The
          value is opaque and may be used to issue another request to the endpoint
          that served this list to retrieve the next set of available objects. Continuing
          a consistent list may not be possible if the server configuration has changed
          or more than a few minutes have passed. The resourceVersion field returned
          when using this continue value will be identical to the value in the first
          response, unless you have received this token from an error message.
        type: string
      remainingItemCount:
        description: remainingItemCount is the number of subsequent items in the list
          which are not included in this list response. If the list request contained
          label or field selectors, then the number of remaining items is unknown
          and the field will be left unset and omitted during serialization. If the
          list is complete (either because it is not chunking or because this is the
          last chunk), then there are no more remaining items and this field will
          be left unset and omitted during serialization. Servers older than v1.15
          do not set this field. The intended use of the remainingItemCount is *estimating*
          the size of a collection. Clients should not rely on the remainingItemCount
          to be set or to be exact.
        format: int64
        type: integer
      resourceVersion:
        description: 'String that identifies the server''s internal version of this
          object that can be used by clients to determine when objects have changed.
          Value must be treated as opaque by clients and passed unmodified back to
          the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type: string
      selfLink:
        description: |-
          selfLink is a URL representing this object. Populated by the system. Read-only.

          DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
        type: string
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:
    description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version
      of the resource that the fieldset applies to.
    properties:
      apiVersion:
        description: APIVersion defines the version of this resource that this field
          set applies to. The format is "group/version" just like the top-level APIVersion
          field. It is necessary to track the version of a field set because it cannot
          be automatically converted.
        type: string
      fieldsType:
        description: 'FieldsType is the discriminator for the different fields format
          and version. There is currently only one possible value: "FieldsV1"'
        type: string
      fieldsV1:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1'
        description: FieldsV1 holds the first JSON version format as described in
          the "FieldsV1" type.
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: Operation is the type of operation which lead to this ManagedFieldsEntry
          being created. The only valid values for this field are 'Apply' and 'Update'.
        type: string
      time:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Time is timestamp of when these fields were set. It should always
          be empty if Operation is 'Apply'
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta:
    description: ObjectMeta is metadata that all persisted resources must have, which
      includes all objects users must create.
    properties:
      annotations:
        additionalProperties:
          type: string
        description: 'Annotations is an unstructured key value map stored with a resource
          that may be set by external tools to store and retrieve arbitrary metadata.
          They are not queryable and should be preserved when modifying objects. More
          info: http://kubernetes.io/docs/user-guide/annotations'
        type: object
      clusterName:
        description: The name of the cluster which the object belongs to. This is
          used to distinguish resources with same name and namespace in different
          clusters. This field is not set anywhere right now and apiserver is going
          to ignore it if set in create or update request.
        type: string
      creationTimestamp:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
      deletionGracePeriodSeconds:
        description: Number of seconds allowed for this object to gracefully terminate
          before it will be removed from the system. Only set when deletionTimestamp
          is also set. May only be shortened. Read-only.
        format: int64
        type: integer
      deletionTimestamp:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
      finalizers:
        description: Must be empty before the object is deleted from the registry.
          Each entry is an identifier for the responsible component that will remove
          the entry from the list. If the deletionTimestamp of the object is non-nil,
          entries in this list can only be removed.
        items:
          type: string
        type: array
        x-kubernetes-patch-strategy: merge
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

          If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
        type: string
      generation:
        description: A sequence number representing a specific generation of the desired
          state. Populated by the system. Read-only.
        format: int64
        type: integer
      labels:
        additionalProperties:
          type: string
        description: 'Map of string keys and values that can be used to organize and
          categorize (scope and select) objects. May match selectors of replication
          controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
        type: object
      managedFields:
        description: ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal housekeeping,
          and users typically shouldn't need to set or understand this field. A workflow
          can be the user's name, a controller's name, or the name of a specific apply
          path like "ci-cd". The set of fields is always in the version that the workflow
          used when modifying the object.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry'
        type: array
      name:
        description: 'Name must be unique within a namespace. Is required when creating
          resources, although some resources may allow a client to request the generation
          of an appropriate name automatically. Name is primarily intended for creation
          idempotence and configuration definition. Cannot be updated. More info:
          http://kubernetes.io/docs/user-guide/identifiers#names'
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
        type: string
      ownerReferences:
        description: List of objects depended by this object. If ALL objects in the
          list have been deleted, this object will be garbage collected. If this object
          is managed by a controller, then an entry in this list will point to this
          controller, with the controller field set to true. There cannot be more
          than one managing controller.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference'
        type: array
        x-kubernetes-patch-merge-key: uid
        x-kubernetes-patch-strategy: merge
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object. Populated by the system. Read-only.

          DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference:
    description: OwnerReference contains enough information to let you identify an
      owning object. An owning object must be in the same namespace as the dependent,
      or be cluster-scoped, so there is no namespace field.
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: If true, AND if the owner has the "foregroundDeletion" finalizer,
          then the owner cannot be deleted from the key-value store until this reference
          is removed. Defaults to false. To set this field, a user needs "delete"
          permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
        type: boolean
      controller:
        description: If true, this reference points to the managing controller.
        type: boolean
      kind:
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
        type: string
      uid:
        description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
        type: string
    required:
    - apiVersion
    - kind
    - name
    - uid
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.Patch:
    description: Patch is provided to give a concrete name and type to the Kubernetes
      PATCH request body.
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions:
    description: Preconditions must be fulfilled before an operation (update, delete,
      etc.) is carried out.
    properties:
      resourceVersion:
        description: Specifies the target ResourceVersion
        type: string
      uid:
        description: Specifies the target UID.
        type: string
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR:
    description: ServerAddressByClientCIDR helps the client to determine the server
      address that they should use, depending on the clientCIDR that they match.
    properties:
      clientCIDR:
        description: The CIDR with which clients can match their IP to figure out
          the server address that they should use.
        type: string
      serverAddress:
        description: Address of this server, suitable for a client that matches the
          above CIDR. This can be a hostname, hostname:port, IP or IP:port.
        type: string
    required:
    - clientCIDR
    - serverAddress
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.Status:
    description: Status is a return value for calls that don't return other objects.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      code:
        description: Suggested HTTP return code for this status, 0 if not set.
        format: int32
        type: integer
      details:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails'
        description: Extended data associated with the reason.  Each reason may define
          its own extended details. This field is optional and the data returned is
          not guaranteed to conform to any schema except that defined by the reason
          type.
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      message:
        description: A human-readable description of the status of this operation.
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
      reason:
        description: A machine-readable description of why this operation is in the
          "Failure" status. If this value is empty there is no information available.
          A Reason clarifies an HTTP status code but does not override it.
        type: string
      status:
        description: 'Status of the operation. One of: "Success" or "Failure". More
          info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
        type: string
    type: object
    x-kubernetes-group-version-kind:
    - group: ""
      kind: Status
      version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause:
    description: StatusCause provides more information about an api.Status failure,
      including cases when multiple errors are encountered.
    properties:
      field:
        description: |-
          The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

          Examples:
            "name" - the field "name" on the current resource
            "items[0].name" - the field "name" on the first array entry in "items"
        type: string
      message:
        description: A human-readable description of the cause of the error.  This
          field may be presented as-is to a reader.
        type: string
      reason:
        description: A machine-readable description of the cause of the error. If
          this value is empty there is no information available.
        type: string
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails:
    description: StatusDetails is a set of additional properties that MAY be set by
      the server to provide additional information about a response. The Reason field
      of a Status object defines what attributes will be set. Clients must ignore
      fields that do not match the defined type of each attribute, and should assume
      that any attribute may be empty, invalid, or under defined.
    properties:
      causes:
        description: The Causes array includes more details associated with the StatusReason
          failure. Not all StatusReasons may provide detailed causes.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause'
        type: array
      group:
        description: The group attribute of the resource associated with the status
          StatusReason.
        type: string
      kind:
        description: 'The kind attribute of the resource associated with the status
          StatusReason. On some operations may differ from the requested resource
          Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: The name attribute of the resource associated with the status
          StatusReason (when there is a single name which can be described).
        type: string
      retryAfterSeconds:
        description: If specified, the time in seconds before the operation should
          be retried. Some errors may indicate the client must take an alternate action
          - for those errors this field may indicate how long to wait before taking
          the alternate action.
        format: int32
        type: integer
      uid:
        description: 'UID of the resource. (when there is a single resource which
          can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
        type: string
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.Time:
    description: Time is a wrapper around time.Time which supports correct marshaling
      to YAML and JSON.  Wrappers are provided for many of the factory methods that
      the time package offers.
    format: date-time
    type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent:
    description: Event represents a single event to a watched resource.
    properties:
      object:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension'
        description: |-
          Object is:
           * If Type is Added or Modified: the new state of the object.
           * If Type is Deleted: the state of the object immediately before deletion.
           * If Type is Error: *Status is recommended; other types may make sense
             depending on context.
      type:
        type: string
    required:
    - type
    - object
    type: object
    x-kubernetes-group-version-kind:
    - group: ""
      kind: WatchEvent
      version: v1
    - group: application.giantswarm.io
      kind: WatchEvent
      version: v1alpha1
    - group: backup.giantswarm.io
      kind: WatchEvent
      version: v1alpha1
    - group: core.giantswarm.io
      kind: WatchEvent
      version: v1alpha1
    - group: example.giantswarm.io
      kind: WatchEvent
      version: v1alpha1
    - group: infrastructure.giantswarm.io
      kind: WatchEvent
      version: v1alpha2
    - group: provider.giantswarm.io
      kind: WatchEvent
      version: v1alpha1
    - group: release.giantswarm.io
      kind: WatchEvent
      version: v1alpha1
    - group: security.giantswarm.io
      kind: WatchEvent
      version: v1alpha1
    - group: tooling.giantswarm.io
      kind: WatchEvent
      version: v1alpha1
  io.k8s.apimachinery.pkg.runtime.RawExtension:
    description: "RawExtension is used to hold extensions in external versions.\n\nTo
      use this, make a field which has RawExtension as its type in your external,
      versioned struct, and Object in your internal struct. You also need to register
      your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta
      `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA
      struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type
      MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension
      `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n//
      On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\":
      {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens?
      Decode first uses json or yaml to unmarshal the serialized data into your external
      MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next
      step is to copy (using pkg/conversion) into the internal struct. The runtime
      package's DefaultScheme has conversion functions installed which will unpack
      the JSON stored in RawExtension, turning it into the correct object type, and
      storing it in the Object. (TODO: In the case where the object is of an unknown
      type, a runtime.Unknown object will be created and stored.)"
    type: object
info:
  title: giantswarm-cp-client
  version: "1.0"
paths:
  /apis/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available API versions
      operationId: getAPIVersions
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - apis
  /apis/application.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getApplicationGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo
  /apis/application.giantswarm.io/v1alpha1/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getApplicationGiantswarmIoV1alpha1APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
  /apis/application.giantswarm.io/v1alpha1/appcatalogs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AppCatalog
      operationId: deleteApplicationGiantswarmIoV1alpha1CollectionAppCatalog
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AppCatalog
      operationId: listApplicationGiantswarmIoV1alpha1AppCatalog
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalogList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
    parameters:
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AppCatalog
      operationId: createApplicationGiantswarmIoV1alpha1AppCatalog
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
  /apis/application.giantswarm.io/v1alpha1/appcatalogs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AppCatalog
      operationId: deleteApplicationGiantswarmIoV1alpha1AppCatalog
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified AppCatalog
      operationId: readApplicationGiantswarmIoV1alpha1AppCatalog
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
    parameters:
    - description: name of the AppCatalog
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AppCatalog
      operationId: patchApplicationGiantswarmIoV1alpha1AppCatalog
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified AppCatalog
      operationId: replaceApplicationGiantswarmIoV1alpha1AppCatalog
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppCatalog'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
  /apis/application.giantswarm.io/v1alpha1/apps:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind App
      operationId: listApplicationGiantswarmIoV1alpha1AppForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/charts:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind Chart
      operationId: listApplicationGiantswarmIoV1alpha1ChartForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/namespaces/{namespace}/apps:
    delete:
      consumes:
      - '*/*'
      description: delete collection of App
      operationId: deleteApplicationGiantswarmIoV1alpha1CollectionNamespacedApp
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind App
      operationId: listApplicationGiantswarmIoV1alpha1NamespacedApp
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.AppList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an App
      operationId: createApplicationGiantswarmIoV1alpha1NamespacedApp
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
  /apis/application.giantswarm.io/v1alpha1/namespaces/{namespace}/apps/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an App
      operationId: deleteApplicationGiantswarmIoV1alpha1NamespacedApp
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified App
      operationId: readApplicationGiantswarmIoV1alpha1NamespacedApp
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    parameters:
    - description: name of the App
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified App
      operationId: patchApplicationGiantswarmIoV1alpha1NamespacedApp
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified App
      operationId: replaceApplicationGiantswarmIoV1alpha1NamespacedApp
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.App'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
  /apis/application.giantswarm.io/v1alpha1/namespaces/{namespace}/charts:
    delete:
      consumes:
      - '*/*'
      description: delete collection of Chart
      operationId: deleteApplicationGiantswarmIoV1alpha1CollectionNamespacedChart
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind Chart
      operationId: listApplicationGiantswarmIoV1alpha1NamespacedChart
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.ChartList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a Chart
      operationId: createApplicationGiantswarmIoV1alpha1NamespacedChart
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
  /apis/application.giantswarm.io/v1alpha1/namespaces/{namespace}/charts/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a Chart
      operationId: deleteApplicationGiantswarmIoV1alpha1NamespacedChart
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified Chart
      operationId: readApplicationGiantswarmIoV1alpha1NamespacedChart
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    parameters:
    - description: name of the Chart
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified Chart
      operationId: patchApplicationGiantswarmIoV1alpha1NamespacedChart
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified Chart
      operationId: replaceApplicationGiantswarmIoV1alpha1NamespacedChart
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.application.v1alpha1.Chart'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
  /apis/application.giantswarm.io/v1alpha1/watch/appcatalogs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AppCatalog. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchApplicationGiantswarmIoV1alpha1AppCatalogList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/watch/appcatalogs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AppCatalog. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchApplicationGiantswarmIoV1alpha1AppCatalog
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: AppCatalog
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AppCatalog
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/watch/apps:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of App. deprecated: use the
        ''watch'' parameter with a list operation instead.'
      operationId: watchApplicationGiantswarmIoV1alpha1AppListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/watch/charts:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of Chart. deprecated: use the
        ''watch'' parameter with a list operation instead.'
      operationId: watchApplicationGiantswarmIoV1alpha1ChartListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/apps:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of App. deprecated: use the
        ''watch'' parameter with a list operation instead.'
      operationId: watchApplicationGiantswarmIoV1alpha1NamespacedAppList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/apps/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind App. deprecated: use the ''watch''
        parameter with a list operation instead, filtered to a single item with the
        ''fieldSelector'' parameter.'
      operationId: watchApplicationGiantswarmIoV1alpha1NamespacedApp
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: App
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the App
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/charts:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of Chart. deprecated: use the
        ''watch'' parameter with a list operation instead.'
      operationId: watchApplicationGiantswarmIoV1alpha1NamespacedChartList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/application.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/charts/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind Chart. deprecated: use the
        ''watch'' parameter with a list operation instead, filtered to a single item
        with the ''fieldSelector'' parameter.'
      operationId: watchApplicationGiantswarmIoV1alpha1NamespacedChart
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - applicationGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: application.giantswarm.io
        kind: Chart
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the Chart
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/backup.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getBackupGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo
  /apis/backup.giantswarm.io/v1alpha1/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getBackupGiantswarmIoV1alpha1APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
  /apis/backup.giantswarm.io/v1alpha1/etcdbackups:
    delete:
      consumes:
      - '*/*'
      description: delete collection of ETCDBackup
      operationId: deleteBackupGiantswarmIoV1alpha1CollectionETCDBackup
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind ETCDBackup
      operationId: listBackupGiantswarmIoV1alpha1ETCDBackup
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackupList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
    parameters:
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an ETCDBackup
      operationId: createBackupGiantswarmIoV1alpha1ETCDBackup
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
  /apis/backup.giantswarm.io/v1alpha1/etcdbackups/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an ETCDBackup
      operationId: deleteBackupGiantswarmIoV1alpha1ETCDBackup
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified ETCDBackup
      operationId: readBackupGiantswarmIoV1alpha1ETCDBackup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
    parameters:
    - description: name of the ETCDBackup
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified ETCDBackup
      operationId: patchBackupGiantswarmIoV1alpha1ETCDBackup
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified ETCDBackup
      operationId: replaceBackupGiantswarmIoV1alpha1ETCDBackup
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.backup.v1alpha1.ETCDBackup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
  /apis/backup.giantswarm.io/v1alpha1/watch/etcdbackups:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of ETCDBackup. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchBackupGiantswarmIoV1alpha1ETCDBackupList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/backup.giantswarm.io/v1alpha1/watch/etcdbackups/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind ETCDBackup. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchBackupGiantswarmIoV1alpha1ETCDBackup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - backupGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: backup.giantswarm.io
        kind: ETCDBackup
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the ETCDBackup
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getCoreGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo
  /apis/core.giantswarm.io/v1alpha1/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getCoreGiantswarmIoV1alpha1APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
  /apis/core.giantswarm.io/v1alpha1/awsclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSClusterConfig
      operationId: listCoreGiantswarmIoV1alpha1AWSClusterConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/azureclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AzureClusterConfig
      operationId: listCoreGiantswarmIoV1alpha1AzureClusterConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/certconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind CertConfig
      operationId: listCoreGiantswarmIoV1alpha1CertConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/chartconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind ChartConfig
      operationId: listCoreGiantswarmIoV1alpha1ChartConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/drainerconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind DrainerConfig
      operationId: listCoreGiantswarmIoV1alpha1DrainerConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/flannelconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind FlannelConfig
      operationId: listCoreGiantswarmIoV1alpha1FlannelConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/ignitions:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind Ignition
      operationId: listCoreGiantswarmIoV1alpha1IgnitionForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/kvmclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind KVMClusterConfig
      operationId: listCoreGiantswarmIoV1alpha1KVMClusterConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/awsclusterconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AWSClusterConfig
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedAWSClusterConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSClusterConfig
      operationId: listCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AWSClusterConfig
      operationId: createCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/awsclusterconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AWSClusterConfig
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified AWSClusterConfig
      operationId: readCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    parameters:
    - description: name of the AWSClusterConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AWSClusterConfig
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified AWSClusterConfig
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AWSClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/azureclusterconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AzureClusterConfig
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedAzureClusterConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AzureClusterConfig
      operationId: listCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AzureClusterConfig
      operationId: createCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/azureclusterconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AzureClusterConfig
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified AzureClusterConfig
      operationId: readCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    parameters:
    - description: name of the AzureClusterConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AzureClusterConfig
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified AzureClusterConfig
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.AzureClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/certconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of CertConfig
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedCertConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind CertConfig
      operationId: listCoreGiantswarmIoV1alpha1NamespacedCertConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a CertConfig
      operationId: createCoreGiantswarmIoV1alpha1NamespacedCertConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/certconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a CertConfig
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedCertConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified CertConfig
      operationId: readCoreGiantswarmIoV1alpha1NamespacedCertConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    parameters:
    - description: name of the CertConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified CertConfig
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedCertConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified CertConfig
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedCertConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.CertConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/chartconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of ChartConfig
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedChartConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind ChartConfig
      operationId: listCoreGiantswarmIoV1alpha1NamespacedChartConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a ChartConfig
      operationId: createCoreGiantswarmIoV1alpha1NamespacedChartConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/chartconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a ChartConfig
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedChartConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified ChartConfig
      operationId: readCoreGiantswarmIoV1alpha1NamespacedChartConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    parameters:
    - description: name of the ChartConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified ChartConfig
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedChartConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified ChartConfig
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedChartConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.ChartConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/drainerconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of DrainerConfig
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedDrainerConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind DrainerConfig
      operationId: listCoreGiantswarmIoV1alpha1NamespacedDrainerConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a DrainerConfig
      operationId: createCoreGiantswarmIoV1alpha1NamespacedDrainerConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/drainerconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a DrainerConfig
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedDrainerConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified DrainerConfig
      operationId: readCoreGiantswarmIoV1alpha1NamespacedDrainerConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    parameters:
    - description: name of the DrainerConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified DrainerConfig
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedDrainerConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified DrainerConfig
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedDrainerConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.DrainerConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/flannelconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of FlannelConfig
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedFlannelConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind FlannelConfig
      operationId: listCoreGiantswarmIoV1alpha1NamespacedFlannelConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a FlannelConfig
      operationId: createCoreGiantswarmIoV1alpha1NamespacedFlannelConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/flannelconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a FlannelConfig
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedFlannelConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified FlannelConfig
      operationId: readCoreGiantswarmIoV1alpha1NamespacedFlannelConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    parameters:
    - description: name of the FlannelConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified FlannelConfig
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedFlannelConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified FlannelConfig
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedFlannelConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.FlannelConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/ignitions:
    delete:
      consumes:
      - '*/*'
      description: delete collection of Ignition
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedIgnition
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind Ignition
      operationId: listCoreGiantswarmIoV1alpha1NamespacedIgnition
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.IgnitionList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an Ignition
      operationId: createCoreGiantswarmIoV1alpha1NamespacedIgnition
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/ignitions/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an Ignition
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedIgnition
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified Ignition
      operationId: readCoreGiantswarmIoV1alpha1NamespacedIgnition
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    parameters:
    - description: name of the Ignition
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified Ignition
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedIgnition
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified Ignition
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedIgnition
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.Ignition'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/kvmclusterconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of KVMClusterConfig
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedKVMClusterConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind KVMClusterConfig
      operationId: listCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a KVMClusterConfig
      operationId: createCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/kvmclusterconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a KVMClusterConfig
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified KVMClusterConfig
      operationId: readCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    parameters:
    - description: name of the KVMClusterConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified KVMClusterConfig
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified KVMClusterConfig
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.KVMClusterConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/storageconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of StorageConfig
      operationId: deleteCoreGiantswarmIoV1alpha1CollectionNamespacedStorageConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind StorageConfig
      operationId: listCoreGiantswarmIoV1alpha1NamespacedStorageConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a StorageConfig
      operationId: createCoreGiantswarmIoV1alpha1NamespacedStorageConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/namespaces/{namespace}/storageconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a StorageConfig
      operationId: deleteCoreGiantswarmIoV1alpha1NamespacedStorageConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified StorageConfig
      operationId: readCoreGiantswarmIoV1alpha1NamespacedStorageConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    parameters:
    - description: name of the StorageConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified StorageConfig
      operationId: patchCoreGiantswarmIoV1alpha1NamespacedStorageConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified StorageConfig
      operationId: replaceCoreGiantswarmIoV1alpha1NamespacedStorageConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
  /apis/core.giantswarm.io/v1alpha1/storageconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind StorageConfig
      operationId: listCoreGiantswarmIoV1alpha1StorageConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.core.v1alpha1.StorageConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/awsclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1AWSClusterConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/azureclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AzureClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1AzureClusterConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/certconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of CertConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1CertConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/chartconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of ChartConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1ChartConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/drainerconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of DrainerConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1DrainerConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/flannelconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of FlannelConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1FlannelConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/ignitions:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of Ignition. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1IgnitionListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/kvmclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of KVMClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1KVMClusterConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/awsclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/awsclusterconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AWSClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AWSClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AWSClusterConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/azureclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AzureClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/azureclusterconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AzureClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: AzureClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AzureClusterConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/certconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of CertConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedCertConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/certconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind CertConfig. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedCertConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: CertConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the CertConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/chartconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of ChartConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedChartConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/chartconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind ChartConfig. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedChartConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: ChartConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the ChartConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/drainerconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of DrainerConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/drainerconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind DrainerConfig. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedDrainerConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: DrainerConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the DrainerConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/flannelconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of FlannelConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/flannelconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind FlannelConfig. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedFlannelConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: FlannelConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the FlannelConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/ignitions:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of Ignition. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedIgnitionList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/ignitions/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind Ignition. deprecated: use the
        ''watch'' parameter with a list operation instead, filtered to a single item
        with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedIgnition
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: Ignition
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the Ignition
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/kvmclusterconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of KVMClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/kvmclusterconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind KVMClusterConfig. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: KVMClusterConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the KVMClusterConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/storageconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of StorageConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedStorageConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/storageconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind StorageConfig. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchCoreGiantswarmIoV1alpha1NamespacedStorageConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the StorageConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/core.giantswarm.io/v1alpha1/watch/storageconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of StorageConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchCoreGiantswarmIoV1alpha1StorageConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - coreGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: core.giantswarm.io
        kind: StorageConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/example.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getExampleGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - exampleGiantswarmIo
  /apis/example.giantswarm.io/v1alpha1/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getExampleGiantswarmIoV1alpha1APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - exampleGiantswarmIo_v1alpha1
  /apis/example.giantswarm.io/v1alpha1/namespaces/{namespace}/memcachedconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: read the specified MemcachedConfig
      operationId: readExampleGiantswarmIoV1alpha1NamespacedMemcachedConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.example.v1alpha1.MemcachedConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - exampleGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: example.giantswarm.io
        kind: MemcachedConfig
        version: v1alpha1
    parameters:
    - description: name of the MemcachedConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getInfrastructureGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo
  /apis/infrastructure.giantswarm.io/v1alpha2/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getInfrastructureGiantswarmIoV1alpha2APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/awsclusters:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSCluster
      operationId: listInfrastructureGiantswarmIoV1alpha2AWSClusterForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/awscontrolplanes:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSControlPlane
      operationId: listInfrastructureGiantswarmIoV1alpha2AWSControlPlaneForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlaneList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/awsmachinedeployments:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSMachineDeployment
      operationId: listInfrastructureGiantswarmIoV1alpha2AWSMachineDeploymentForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/g8scontrolplanes:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind G8sControlPlane
      operationId: listInfrastructureGiantswarmIoV1alpha2G8sControlPlaneForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlaneList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/namespaces/{namespace}/awsclusters:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AWSCluster
      operationId: deleteInfrastructureGiantswarmIoV1alpha2CollectionNamespacedAWSCluster
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSCluster
      operationId: listInfrastructureGiantswarmIoV1alpha2NamespacedAWSCluster
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSClusterList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AWSCluster
      operationId: createInfrastructureGiantswarmIoV1alpha2NamespacedAWSCluster
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/namespaces/{namespace}/awsclusters/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AWSCluster
      operationId: deleteInfrastructureGiantswarmIoV1alpha2NamespacedAWSCluster
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    get:
      consumes:
      - '*/*'
      description: read the specified AWSCluster
      operationId: readInfrastructureGiantswarmIoV1alpha2NamespacedAWSCluster
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    parameters:
    - description: name of the AWSCluster
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AWSCluster
      operationId: patchInfrastructureGiantswarmIoV1alpha2NamespacedAWSCluster
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    put:
      consumes:
      - '*/*'
      description: replace the specified AWSCluster
      operationId: replaceInfrastructureGiantswarmIoV1alpha2NamespacedAWSCluster
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSCluster'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/namespaces/{namespace}/awscontrolplanes:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AWSControlPlane
      operationId: deleteInfrastructureGiantswarmIoV1alpha2CollectionNamespacedAWSControlPlane
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSControlPlane
      operationId: listInfrastructureGiantswarmIoV1alpha2NamespacedAWSControlPlane
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlaneList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AWSControlPlane
      operationId: createInfrastructureGiantswarmIoV1alpha2NamespacedAWSControlPlane
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/namespaces/{namespace}/awscontrolplanes/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AWSControlPlane
      operationId: deleteInfrastructureGiantswarmIoV1alpha2NamespacedAWSControlPlane
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    get:
      consumes:
      - '*/*'
      description: read the specified AWSControlPlane
      operationId: readInfrastructureGiantswarmIoV1alpha2NamespacedAWSControlPlane
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    parameters:
    - description: name of the AWSControlPlane
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AWSControlPlane
      operationId: patchInfrastructureGiantswarmIoV1alpha2NamespacedAWSControlPlane
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    put:
      consumes:
      - '*/*'
      description: replace the specified AWSControlPlane
      operationId: replaceInfrastructureGiantswarmIoV1alpha2NamespacedAWSControlPlane
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSControlPlane'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/namespaces/{namespace}/awsmachinedeployments:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AWSMachineDeployment
      operationId: deleteInfrastructureGiantswarmIoV1alpha2CollectionNamespacedAWSMachineDeployment
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSMachineDeployment
      operationId: listInfrastructureGiantswarmIoV1alpha2NamespacedAWSMachineDeployment
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeploymentList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AWSMachineDeployment
      operationId: createInfrastructureGiantswarmIoV1alpha2NamespacedAWSMachineDeployment
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/namespaces/{namespace}/awsmachinedeployments/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AWSMachineDeployment
      operationId: deleteInfrastructureGiantswarmIoV1alpha2NamespacedAWSMachineDeployment
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    get:
      consumes:
      - '*/*'
      description: read the specified AWSMachineDeployment
      operationId: readInfrastructureGiantswarmIoV1alpha2NamespacedAWSMachineDeployment
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    parameters:
    - description: name of the AWSMachineDeployment
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AWSMachineDeployment
      operationId: patchInfrastructureGiantswarmIoV1alpha2NamespacedAWSMachineDeployment
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    put:
      consumes:
      - '*/*'
      description: replace the specified AWSMachineDeployment
      operationId: replaceInfrastructureGiantswarmIoV1alpha2NamespacedAWSMachineDeployment
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.AWSMachineDeployment'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/namespaces/{namespace}/g8scontrolplanes:
    delete:
      consumes:
      - '*/*'
      description: delete collection of G8sControlPlane
      operationId: deleteInfrastructureGiantswarmIoV1alpha2CollectionNamespacedG8sControlPlane
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind G8sControlPlane
      operationId: listInfrastructureGiantswarmIoV1alpha2NamespacedG8sControlPlane
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlaneList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a G8sControlPlane
      operationId: createInfrastructureGiantswarmIoV1alpha2NamespacedG8sControlPlane
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/namespaces/{namespace}/g8scontrolplanes/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a G8sControlPlane
      operationId: deleteInfrastructureGiantswarmIoV1alpha2NamespacedG8sControlPlane
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    get:
      consumes:
      - '*/*'
      description: read the specified G8sControlPlane
      operationId: readInfrastructureGiantswarmIoV1alpha2NamespacedG8sControlPlane
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    parameters:
    - description: name of the G8sControlPlane
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified G8sControlPlane
      operationId: patchInfrastructureGiantswarmIoV1alpha2NamespacedG8sControlPlane
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    put:
      consumes:
      - '*/*'
      description: replace the specified G8sControlPlane
      operationId: replaceInfrastructureGiantswarmIoV1alpha2NamespacedG8sControlPlane
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.infrastructure.v1alpha2.G8sControlPlane'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/awsclusters:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSCluster. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2AWSClusterListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/awscontrolplanes:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSControlPlane. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2AWSControlPlaneListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/awsmachinedeployments:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSMachineDeployment. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2AWSMachineDeploymentListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/g8scontrolplanes:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of G8sControlPlane. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2G8sControlPlaneListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/namespaces/{namespace}/awsclusters:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSCluster. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2NamespacedAWSClusterList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/namespaces/{namespace}/awsclusters/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AWSCluster. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2NamespacedAWSCluster
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSCluster
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AWSCluster
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/namespaces/{namespace}/awscontrolplanes:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSControlPlane. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2NamespacedAWSControlPlaneList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/namespaces/{namespace}/awscontrolplanes/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AWSControlPlane. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2NamespacedAWSControlPlane
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSControlPlane
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AWSControlPlane
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/namespaces/{namespace}/awsmachinedeployments:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSMachineDeployment. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2NamespacedAWSMachineDeploymentList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/namespaces/{namespace}/awsmachinedeployments/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AWSMachineDeployment. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2NamespacedAWSMachineDeployment
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: AWSMachineDeployment
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AWSMachineDeployment
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/namespaces/{namespace}/g8scontrolplanes:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of G8sControlPlane. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2NamespacedG8sControlPlaneList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/infrastructure.giantswarm.io/v1alpha2/watch/namespaces/{namespace}/g8scontrolplanes/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind G8sControlPlane. deprecated:
        use the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchInfrastructureGiantswarmIoV1alpha2NamespacedG8sControlPlane
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - infrastructureGiantswarmIo_v1alpha2
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: infrastructure.giantswarm.io
        kind: G8sControlPlane
        version: v1alpha2
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the G8sControlPlane
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getProviderGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo
  /apis/provider.giantswarm.io/v1alpha1/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getProviderGiantswarmIoV1alpha1APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
  /apis/provider.giantswarm.io/v1alpha1/awsconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSConfig
      operationId: listProviderGiantswarmIoV1alpha1AWSConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/azureconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AzureConfig
      operationId: listProviderGiantswarmIoV1alpha1AzureConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/kvmconfigs:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind KVMConfig
      operationId: listProviderGiantswarmIoV1alpha1KVMConfigForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/namespaces/{namespace}/awsconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AWSConfig
      operationId: deleteProviderGiantswarmIoV1alpha1CollectionNamespacedAWSConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AWSConfig
      operationId: listProviderGiantswarmIoV1alpha1NamespacedAWSConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AWSConfig
      operationId: createProviderGiantswarmIoV1alpha1NamespacedAWSConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
  /apis/provider.giantswarm.io/v1alpha1/namespaces/{namespace}/awsconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AWSConfig
      operationId: deleteProviderGiantswarmIoV1alpha1NamespacedAWSConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified AWSConfig
      operationId: readProviderGiantswarmIoV1alpha1NamespacedAWSConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    parameters:
    - description: name of the AWSConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AWSConfig
      operationId: patchProviderGiantswarmIoV1alpha1NamespacedAWSConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified AWSConfig
      operationId: replaceProviderGiantswarmIoV1alpha1NamespacedAWSConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AWSConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
  /apis/provider.giantswarm.io/v1alpha1/namespaces/{namespace}/azureconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AzureConfig
      operationId: deleteProviderGiantswarmIoV1alpha1CollectionNamespacedAzureConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AzureConfig
      operationId: listProviderGiantswarmIoV1alpha1NamespacedAzureConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AzureConfig
      operationId: createProviderGiantswarmIoV1alpha1NamespacedAzureConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
  /apis/provider.giantswarm.io/v1alpha1/namespaces/{namespace}/azureconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AzureConfig
      operationId: deleteProviderGiantswarmIoV1alpha1NamespacedAzureConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified AzureConfig
      operationId: readProviderGiantswarmIoV1alpha1NamespacedAzureConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    parameters:
    - description: name of the AzureConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AzureConfig
      operationId: patchProviderGiantswarmIoV1alpha1NamespacedAzureConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified AzureConfig
      operationId: replaceProviderGiantswarmIoV1alpha1NamespacedAzureConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.AzureConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
  /apis/provider.giantswarm.io/v1alpha1/namespaces/{namespace}/kvmconfigs:
    delete:
      consumes:
      - '*/*'
      description: delete collection of KVMConfig
      operationId: deleteProviderGiantswarmIoV1alpha1CollectionNamespacedKVMConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind KVMConfig
      operationId: listProviderGiantswarmIoV1alpha1NamespacedKVMConfig
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfigList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a KVMConfig
      operationId: createProviderGiantswarmIoV1alpha1NamespacedKVMConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
  /apis/provider.giantswarm.io/v1alpha1/namespaces/{namespace}/kvmconfigs/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a KVMConfig
      operationId: deleteProviderGiantswarmIoV1alpha1NamespacedKVMConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified KVMConfig
      operationId: readProviderGiantswarmIoV1alpha1NamespacedKVMConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    parameters:
    - description: name of the KVMConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified KVMConfig
      operationId: patchProviderGiantswarmIoV1alpha1NamespacedKVMConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified KVMConfig
      operationId: replaceProviderGiantswarmIoV1alpha1NamespacedKVMConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.provider.v1alpha1.KVMConfig'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
  /apis/provider.giantswarm.io/v1alpha1/watch/awsconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSConfig. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchProviderGiantswarmIoV1alpha1AWSConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/watch/azureconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AzureConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchProviderGiantswarmIoV1alpha1AzureConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/watch/kvmconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of KVMConfig. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchProviderGiantswarmIoV1alpha1KVMConfigListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/awsconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AWSConfig. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchProviderGiantswarmIoV1alpha1NamespacedAWSConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/awsconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AWSConfig. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchProviderGiantswarmIoV1alpha1NamespacedAWSConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AWSConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AWSConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/azureconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AzureConfig. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchProviderGiantswarmIoV1alpha1NamespacedAzureConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/azureconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AzureConfig. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchProviderGiantswarmIoV1alpha1NamespacedAzureConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: AzureConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AzureConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/kvmconfigs:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of KVMConfig. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchProviderGiantswarmIoV1alpha1NamespacedKVMConfigList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/provider.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/kvmconfigs/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind KVMConfig. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchProviderGiantswarmIoV1alpha1NamespacedKVMConfig
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - providerGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: provider.giantswarm.io
        kind: KVMConfig
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the KVMConfig
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/release.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getReleaseGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo
  /apis/release.giantswarm.io/v1alpha1/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getReleaseGiantswarmIoV1alpha1APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
  /apis/release.giantswarm.io/v1alpha1/releases:
    delete:
      consumes:
      - '*/*'
      description: delete collection of Release
      operationId: deleteReleaseGiantswarmIoV1alpha1CollectionRelease
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind Release
      operationId: listReleaseGiantswarmIoV1alpha1Release
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.ReleaseList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
    parameters:
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create a Release
      operationId: createReleaseGiantswarmIoV1alpha1Release
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
  /apis/release.giantswarm.io/v1alpha1/releases/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete a Release
      operationId: deleteReleaseGiantswarmIoV1alpha1Release
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified Release
      operationId: readReleaseGiantswarmIoV1alpha1Release
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
    parameters:
    - description: name of the Release
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified Release
      operationId: patchReleaseGiantswarmIoV1alpha1Release
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified Release
      operationId: replaceReleaseGiantswarmIoV1alpha1Release
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.release.v1alpha1.Release'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
  /apis/release.giantswarm.io/v1alpha1/watch/releases:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of Release. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchReleaseGiantswarmIoV1alpha1ReleaseList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/release.giantswarm.io/v1alpha1/watch/releases/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind Release. deprecated: use the
        ''watch'' parameter with a list operation instead, filtered to a single item
        with the ''fieldSelector'' parameter.'
      operationId: watchReleaseGiantswarmIoV1alpha1Release
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - releaseGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: release.giantswarm.io
        kind: Release
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the Release
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/security.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getSecurityGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo
  /apis/security.giantswarm.io/v1alpha1/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getSecurityGiantswarmIoV1alpha1APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
  /apis/security.giantswarm.io/v1alpha1/organizations:
    delete:
      consumes:
      - '*/*'
      description: delete collection of Organization
      operationId: deleteSecurityGiantswarmIoV1alpha1CollectionOrganization
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind Organization
      operationId: listSecurityGiantswarmIoV1alpha1Organization
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.OrganizationList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
    parameters:
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an Organization
      operationId: createSecurityGiantswarmIoV1alpha1Organization
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
  /apis/security.giantswarm.io/v1alpha1/organizations/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an Organization
      operationId: deleteSecurityGiantswarmIoV1alpha1Organization
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified Organization
      operationId: readSecurityGiantswarmIoV1alpha1Organization
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
    parameters:
    - description: name of the Organization
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified Organization
      operationId: patchSecurityGiantswarmIoV1alpha1Organization
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified Organization
      operationId: replaceSecurityGiantswarmIoV1alpha1Organization
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.security.v1alpha1.Organization'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
  /apis/security.giantswarm.io/v1alpha1/watch/organizations:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of Organization. deprecated:
        use the ''watch'' parameter with a list operation instead.'
      operationId: watchSecurityGiantswarmIoV1alpha1OrganizationList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/security.giantswarm.io/v1alpha1/watch/organizations/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind Organization. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchSecurityGiantswarmIoV1alpha1Organization
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - securityGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: security.giantswarm.io
        kind: Organization
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the Organization
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/tooling.giantswarm.io/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get information of a group
      operationId: getToolingGiantswarmIoAPIGroup
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo
  /apis/tooling.giantswarm.io/v1alpha1/:
    get:
      consumes:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      description: get available resources
      operationId: getToolingGiantswarmIoV1alpha1APIResources
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
  /apis/tooling.giantswarm.io/v1alpha1/azuretools:
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AzureTool
      operationId: listToolingGiantswarmIoV1alpha1AzureToolForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/tooling.giantswarm.io/v1alpha1/namespaces/{namespace}/azuretools:
    delete:
      consumes:
      - '*/*'
      description: delete collection of AzureTool
      operationId: deleteToolingGiantswarmIoV1alpha1CollectionNamespacedAzureTool
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: list or watch objects of kind AzureTool
      operationId: listToolingGiantswarmIoV1alpha1NamespacedAzureTool
      parameters:
      - description: |-
          allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

          This field is beta.
        in: query
        name: allowWatchBookmarks
        type: boolean
        uniqueItems: true
      - description: |-
          The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

          This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
        in: query
        name: continue
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        type: string
        uniqueItems: true
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        type: string
        uniqueItems: true
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        type: integer
        uniqueItems: true
      - description: 'When specified with a watch call, shows changes that occur after
          that particular version of a resource. Defaults to changes from the beginning
          of history. When specified for list: - if unset, then the result is returned
          from remote storage based on quorum-read flag; - if it''s 0, then we simply
          return what we currently have in cache, no guarantee; - if set to non zero,
          then the result is at least as fresh as given rv.'
        in: query
        name: resourceVersion
        type: string
        uniqueItems: true
      - description: Timeout for the list/watch call. This limits the duration of
          the call, regardless of any activity or inactivity.
        in: query
        name: timeoutSeconds
        type: integer
        uniqueItems: true
      - description: Watch for changes to the described resources and return them
          as a stream of add, update, and remove notifications. Specify resourceVersion.
        in: query
        name: watch
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureToolList'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    parameters:
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    post:
      consumes:
      - '*/*'
      description: create an AzureTool
      operationId: createToolingGiantswarmIoV1alpha1NamespacedAzureTool
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
  /apis/tooling.giantswarm.io/v1alpha1/namespaces/{namespace}/azuretools/{name}:
    delete:
      consumes:
      - '*/*'
      description: delete an AzureTool
      operationId: deleteToolingGiantswarmIoV1alpha1NamespacedAzureTool
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: The duration in seconds before the object should be deleted.
          Value must be non-negative integer. The value zero indicates delete immediately.
          If this value is nil, the default grace period for the specified type will
          be used. Defaults to a per object value if not specified. zero means delete
          immediately.
        in: query
        name: gracePeriodSeconds
        type: integer
        uniqueItems: true
      - description: 'Deprecated: please use the PropagationPolicy, this field will
          be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,
          the "orphan" finalizer will be added to/removed from the object''s finalizers
          list. Either this field or PropagationPolicy may be set, but not both.'
        in: query
        name: orphanDependents
        type: boolean
        uniqueItems: true
      - description: 'Whether and how garbage collection will be performed. Either
          this field or OrphanDependents may be set, but not both. The default policy
          is decided by the existing finalizer set in the metadata.finalizers and
          the resource-specific default policy. Acceptable values are: ''Orphan''
          - orphan the dependents; ''Background'' - allow the garbage collector to
          delete the dependents in the background; ''Foreground'' - a cascading policy
          that deletes all dependents in the foreground.'
        in: query
        name: propagationPolicy
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    get:
      consumes:
      - '*/*'
      description: read the specified AzureTool
      operationId: readToolingGiantswarmIoV1alpha1NamespacedAzureTool
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    parameters:
    - description: name of the AzureTool
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    patch:
      consumes:
      - application/json-patch+json
      - application/merge-patch+json
      - application/strategic-merge-patch+json
      - application/apply-patch+yaml
      description: partially update the specified AzureTool
      operationId: patchToolingGiantswarmIoV1alpha1NamespacedAzureTool
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          This field is required for apply requests (application/apply-patch) but
          optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      - description: Force is going to "force" Apply requests. It means user will
          re-acquire conflicting fields owned by other people. Force flag must be
          unset for non-apply patch requests.
        in: query
        name: force
        type: boolean
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    put:
      consumes:
      - '*/*'
      description: replace the specified AzureTool
      operationId: replaceToolingGiantswarmIoV1alpha1NamespacedAzureTool
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
      - description: 'When present, indicates that modifications should not be persisted.
          An invalid or unrecognized dryRun directive will result in an error response
          and no further processing of the request. Valid values are: - All: all dry
          run stages will be processed'
        in: query
        name: dryRun
        type: string
        uniqueItems: true
      - description: fieldManager is a name associated with the actor or entity that
          is making these changes. The value must be less than or 128 characters long,
          and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
        in: query
        name: fieldManager
        type: string
        uniqueItems: true
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/com.github.giantswarm.apiextensions.pkg.apis.tooling.v1alpha1.AzureTool'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
  /apis/tooling.giantswarm.io/v1alpha1/watch/azuretools:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AzureTool. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchToolingGiantswarmIoV1alpha1AzureToolListForAllNamespaces
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/tooling.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/azuretools:
    get:
      consumes:
      - '*/*'
      description: 'watch individual changes to a list of AzureTool. deprecated: use
        the ''watch'' parameter with a list operation instead.'
      operationId: watchToolingGiantswarmIoV1alpha1NamespacedAzureToolList
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: watchlist
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
  /apis/tooling.giantswarm.io/v1alpha1/watch/namespaces/{namespace}/azuretools/{name}:
    get:
      consumes:
      - '*/*'
      description: 'watch changes to an object of kind AzureTool. deprecated: use
        the ''watch'' parameter with a list operation instead, filtered to a single
        item with the ''fieldSelector'' parameter.'
      operationId: watchToolingGiantswarmIoV1alpha1NamespacedAzureTool
      produces:
      - application/json
      - application/yaml
      - application/vnd.kubernetes.protobuf
      - application/json;stream=watch
      - application/vnd.kubernetes.protobuf;stream=watch
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent'
        "401":
          description: Unauthorized
      schemes:
      - https
      tags:
      - toolingGiantswarmIo_v1alpha1
      x-kubernetes-action: watch
      x-kubernetes-group-version-kind:
        group: tooling.giantswarm.io
        kind: AzureTool
        version: v1alpha1
    parameters:
    - description: |-
        allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.

        This field is beta.
      in: query
      name: allowWatchBookmarks
      type: boolean
      uniqueItems: true
    - description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      in: query
      name: continue
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      in: query
      name: fieldSelector
      type: string
      uniqueItems: true
    - description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      in: query
      name: labelSelector
      type: string
      uniqueItems: true
    - description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      in: query
      name: limit
      type: integer
      uniqueItems: true
    - description: name of the AzureTool
      in: path
      name: name
      required: true
      type: string
      uniqueItems: true
    - description: object name and auth scope, such as for teams and projects
      in: path
      name: namespace
      required: true
      type: string
      uniqueItems: true
    - description: If 'true', then the output is pretty printed.
      in: query
      name: pretty
      type: string
      uniqueItems: true
    - description: 'When specified with a watch call, shows changes that occur after
        that particular version of a resource. Defaults to changes from the beginning
        of history. When specified for list: - if unset, then the result is returned
        from remote storage based on quorum-read flag; - if it''s 0, then we simply
        return what we currently have in cache, no guarantee; - if set to non zero,
        then the result is at least as fresh as given rv.'
      in: query
      name: resourceVersion
      type: string
      uniqueItems: true
    - description: Timeout for the list/watch call. This limits the duration of the
        call, regardless of any activity or inactivity.
      in: query
      name: timeoutSeconds
      type: integer
      uniqueItems: true
    - description: Watch for changes to the described resources and return them as
        a stream of add, update, and remove notifications. Specify resourceVersion.
      in: query
      name: watch
      type: boolean
      uniqueItems: true
security:
- oauth2: []
securityDefinitions:
  oauth2:
    authorizationUrl: https://foo.com/authorization
    flow: accessCode
    tokenUrl: https://foo.com/token
    type: oauth2
swagger: "2.0"
